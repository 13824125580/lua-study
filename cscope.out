cscope 15 $HOME/Workspace/lua/lua-5.3.5 -q 0000003132 0000501338
	@/home/czl/Workspace/lua/lua-5.3.5/luatest/lua1.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<œuxlib.h
>

4 
	~<luÆib.h
>

7 
	$add2
(
lua_Sèã
* 
L
)

11 
›1
 = 
	`luaL_checknumbî
(
L
,1);

12 
›2
 = 
	`luaL_checknumbî
(
L
,2);

14 
	`lua_pushnumbî
(
L
,
›1
 + 
›2
);

17 
	}
}

20 
	$sub2
(
lua_Sèã
* 
L
)

22 
›1
 = 
	`luaL_checknumbî
(
L
,1);

23 
›2
 = 
	`luaL_checknumbî
(
L
,2);

24 
	`lua_pushnumbî
(
L
,
›1
 - 
›2
);

26 
	}
}

28 c⁄° * 
	gã°func
 = "print(add2(1.0,2.0))Örint(sub2(20.1,19))";

30 
	$maö
()

32 
lua_Sèã
* 
L
 = 
	`luaL_√w°©e
();

33 
	`luaL_›ílibs
(
L
);

36 
	`lua_ªgi°î
(
L
, "add2", 
add2
);

37 
	`lua_ªgi°î
(
L
, "sub2", 
sub2
);

39 i‡(
	`luaL_do°rög
(
L
,
ã°func
))

40 
	`¥ötf
("FailedÅo invoke.\n");

41 
	`lua_˛o£
(
L
);

43 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/luatest/luabuiltin.c

1 
	~<lua.h
>

2 
	~<luÆib.h
>

3 
	~<œuxlib.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

7 
	$baû
(
lua_Sèã
 *
L
, *
msg
){

8 
	`Ârötf
(
°dîr
, "\nFATAL ERROR:\n %s: %s\n\n",

9 
msg
, 
	`lua_to°rög
(
L
, -1));

10 
	`exô
(1);

11 
	}
}

13 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

15 if(
¨gc
 != 2)

17 
	`¥ötf
("error\n");

20 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

23 
	`luaL_›ílibs
(
L
);

25 if–
	`luaL_lﬂdfûe
(
L
,
¨gv
[1]) )

26 
	`baû
(
L
, "luaL_loadfile() failed");

28 if–
	`lua_pˇŒ
(
L
,0,0,0) )

29 
	`baû
(
L
, "lua_pcall() failed");

30 
	`lua_˛o£
(
L
);

33 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/luatest/luamod.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<œuxlib.h
>

4 
	~<luÆib.h
>

9 
	$add
(
lua_Sèã
* 
L
)

11 
›1
 = 
	`luaL_checknumbî
(
L
,1);

12 
›2
 = 
	`luaL_checknumbî
(
L
,2);

13 
	`lua_pushnumbî
(
L
,
›1
 + 
›2
);

15 
	}
}

17 
	$sub
(
lua_Sèã
* 
L
)

19 
›1
 = 
	`luaL_checknumbî
(
L
,1);

20 
›2
 = 
	`luaL_checknumbî
(
L
,2);

21 
	`lua_pushnumbî
(
L
,
›1
 - 
›2
);

23 
	}
}

28 
luaL_Reg
 
	gmylibs
[] = {

29 {"add", 
add
},

30 {"sub", 
sub
},

31 {
NULL
, NULL}

40 
	$lua›í_myã°lib
(
lua_Sèã
* 
L
)

42 c⁄° * 
libName
 = "mytestlib";

43 
	`luaL_ªgi°î
(
L
,
libName
,
mylibs
);

45 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lapi.c

7 
	#œpi_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

29 
	~"lundump.h
"

30 
	~"lvm.h
"

34 c⁄° 
	glua_idít
[] =

35 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

36 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

40 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

43 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

46 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

49 
	#isupvÆue
(
i
Ë((iË< 
LUA_REGISTRYINDEX
)

	)

52 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

54 
	#≠i_checkvÆidödex
(
l
,
o
Ë
	`≠i_check
÷, 
	`isvÆid
(o), "övÆid index")

	)

56 
	#≠i_check°acködex
(
l
, 
i
, 
o
) \

57 
	`≠i_check
(
l
, 
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

60 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 i‡(
idx
 > 0) {

63 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

64 
	`≠i_check
(
L
, 
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

65 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

66  
o
;

68 i‡(!
	`i•£udo
(
idx
)) {

69 
	`≠i_check
(
L
, 
idx
 !0 && -idx <L->
t›
 - (
ci
->
func
 + 1), "invalid index");

70  
L
->
t›
 + 
idx
;

72 i‡(
idx
 =
LUA_REGISTRYINDEX
)

73  &
	`G
(
L
)->
l_ªgi°ry
;

75 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

76 
	`≠i_check
(
L
, 
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

77 i‡(
	`âi¶cf
(
ci
->
func
))

78  
NONVALIDVALUE
;

80 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

81  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

84 
	}
}

91 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

92 
size
 = *(*)
ud
;

93 
	`luaD_grow°ack
(
L
, 
size
);

94 
	}
}

97 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
n
) {

98 
ªs
;

99 
CÆlInfo
 *
ci
 = 
L
->ci;

100 
	`lua_lock
(
L
);

101 
	`≠i_check
(
L
, 
n
 >= 0, "negative 'n'");

102 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
n
)

103 
ªs
 = 1;

105 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

106 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
n
)

107 
ªs
 = 0;

109 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
n
Ë=
LUA_OK
);

111 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
n
)

112 
ci
->
t›
 = 
L
->t› + 
n
;

113 
	`lua_u∆ock
(
L
);

114  
ªs
;

115 
	}
}

118 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

119 
i
;

120 i‡(
‰om
 =
to
) ;

121 
	`lua_lock
(
to
);

122 
	`≠i_check√Àms
(
‰om
, 
n
);

123 
	`≠i_check
(
‰om
, 
	`G
(‰omË=G(
to
), "movingámong independent states");

124 
	`≠i_check
(
‰om
, 
to
->
ci
->
t›
 -Åo->t› >
n
, "stack overflow");

125 
‰om
->
t›
 -
n
;

126 
i
 = 0; i < 
n
; i++) {

127 
	`£tobj2s
(
to
,Åo->
t›
, 
‰om
->t› + 
i
);

128 
to
->
t›
++;

130 
	`lua_u∆ock
(
to
);

131 
	}
}

134 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

135 
lua_CFun˘i⁄
 
ﬁd
;

136 
	`lua_lock
(
L
);

137 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

138 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

139 
	`lua_u∆ock
(
L
);

140  
ﬁd
;

141 
	}
}

144 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

145 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

146 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

147  
	`G
(
L
)->
vîsi⁄
;

148 
	}
}

160 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

161  (
idx
 > 0 || 
	`i•£udo
(idx))

162 ? 
idx


163 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
Ë+ 
idx
;

164 
	}
}

167 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

168  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

169 
	}
}

172 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

173 
StkId
 
func
 = 
L
->
ci
->func;

174 
	`lua_lock
(
L
);

175 i‡(
idx
 >= 0) {

176 
	`≠i_check
(
L
, 
idx
 <L->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

177 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

178 
	`£äûvÆue
(
L
->
t›
++);

179 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

182 
	`≠i_check
(
L
, -(
idx
+1Ë<(L->
t›
 - (
func
 + 1)), "invalidÇewÅop");

183 
L
->
t›
 +
idx
+1;

185 
	`lua_u∆ock
(
L
);

186 
	}
}

193 
	$ªvî£
 (
lua_Sèã
 *
L
, 
StkId
 
‰om
, StkId 
to
) {

194 ; 
‰om
 < 
to
; from++,Åo--) {

195 
TVÆue
 
ãmp
;

196 
	`£tobj
(
L
, &
ãmp
, 
‰om
);

197 
	`£tobjs2s
(
L
, 
‰om
, 
to
);

198 
	`£tobj2s
(
L
, 
to
, &
ãmp
);

200 
	}
}

207 
LUA_API
 
	$lua_rŸ©e
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

208 
StkId
 
p
, 
t
, 
m
;

209 
	`lua_lock
(
L
);

210 
t
 = 
L
->
t›
 - 1;

211 
p
 = 
	`ödex2addr
(
L
, 
idx
);

212 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

213 
	`≠i_check
(
L
, (
n
 >0 ?Ç : -nË<(
t
 - 
p
 + 1), "invalid 'n'");

214 
m
 = (
n
 >0 ? 
t
 -Ç : 
p
 -Ç - 1);

215 
	`ªvî£
(
L
, 
p
, 
m
);

216 
	`ªvî£
(
L
, 
m
 + 1, 
t
);

217 
	`ªvî£
(
L
, 
p
, 
t
);

218 
	`lua_u∆ock
(
L
);

219 
	}
}

222 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

223 
TVÆue
 *
‰
, *
to
;

224 
	`lua_lock
(
L
);

225 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

226 
to
 = 
	`ödex2addr
(
L
, 
toidx
);

227 
	`≠i_checkvÆidödex
(
L
, 
to
);

228 
	`£tobj
(
L
, 
to
, 
‰
);

229 i‡(
	`isupvÆue
(
toidx
))

230 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

233 
	`lua_u∆ock
(
L
);

234 
	}
}

237 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

238 
	`lua_lock
(
L
);

239 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

240 
	`≠i_ö¸_t›
(
L
);

241 
	`lua_u∆ock
(
L
);

242 
	}
}

251 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

252 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

253  (
	`isvÆid
(
o
Ë? 
	`ânov
(oË: 
LUA_TNONE
);

254 
	}
}

257 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

258 
	`UNUSED
(
L
);

259 
	`≠i_check
(
L
, 
LUA_TNONE
 <
t
 &&Å < 
LUA_NUMTAGS
, "invalidÅag");

260  
	`ây≥«me
(
t
);

261 
	}
}

264 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

265 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

266  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

267 
	}
}

270 
LUA_API
 
	$lua_isöãgî
 (
lua_Sèã
 *
L
, 
idx
) {

271 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

272  
	`âisöãgî
(
o
);

273 
	}
}

276 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

277 
lua_Numbî
 
n
;

278 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

279  
	`t⁄umbî
(
o
, &
n
);

280 
	}
}

283 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

284 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

285  (
	`âis°rög
(
o
Ë|| 
	`cvt2°r
(o));

286 
	}
}

289 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

290 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

291  (
	`âisfuŒu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

292 
	}
}

295 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

296 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

297 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

298  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

299 
	}
}

302 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

303 
	`lua_lock
(
L
);

304 i‡(
›
 !
LUA_OPUNM
 && o∞!
LUA_OPBNOT
)

305 
	`≠i_check√Àms
(
L
, 2);

307 
	`≠i_check√Àms
(
L
, 1);

308 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

309 
	`≠i_ö¸_t›
(
L
);

312 
	`luaO_¨ôh
(
L
, 
›
, L->
t›
 - 2, L->top - 1, L->top - 2);

313 
L
->
t›
--;

314 
	`lua_u∆ock
(
L
);

315 
	}
}

318 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

319 
StkId
 
o1
, 
o2
;

320 
i
 = 0;

321 
	`lua_lock
(
L
);

322 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

323 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

324 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

325 
›
) {

326 
LUA_OPEQ
: 
i
 = 
	`luaV_equÆobj
(
L
, 
o1
, 
o2
); ;

327 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

328 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

329 : 
	`≠i_check
(
L
, 0, "invalid option");

332 
	`lua_u∆ock
(
L
);

333  
i
;

334 
	}
}

337 
LUA_API
 
size_t
 
	$lua_°rögt⁄umbî
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

338 
size_t
 
sz
 = 
	`luaO_°r2num
(
s
, 
L
->
t›
);

339 i‡(
sz
 != 0)

340 
	`≠i_ö¸_t›
(
L
);

341  
sz
;

342 
	}
}

345 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

346 
lua_Numbî
 
n
;

347 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

348 
i¢um
 = 
	`t⁄umbî
(
o
, &
n
);

349 i‡(!
i¢um
)

350 
n
 = 0;

351 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

352  
n
;

353 
	}
}

356 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

357 
lua_I¡egî
 
ªs
;

358 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

359 
i¢um
 = 
	`toöãgî
(
o
, &
ªs
);

360 i‡(!
i¢um
)

361 
ªs
 = 0;

362 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

363  
ªs
;

364 
	}
}

367 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

368 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

369  !
	`l_isÁl£
(
o
);

370 
	}
}

373 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

374 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

375 i‡(!
	`âis°rög
(
o
)) {

376 i‡(!
	`cvt2°r
(
o
)) {

377 i‡(
Àn
 !
NULL
) *len = 0;

378  
NULL
;

380 
	`lua_lock
(
L
);

381 
	`luaO_to°rög
(
L
, 
o
);

382 
	`luaC_checkGC
(
L
);

383 
o
 = 
	`ödex2addr
(
L
, 
idx
);

384 
	`lua_u∆ock
(
L
);

386 i‡(
Àn
 !
NULL
)

387 *
Àn
 = 
	`v¶í
(
o
);

388  
	`svÆue
(
o
);

389 
	}
}

392 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

393 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

394 
	`ây≥
(
o
)) {

395 
LUA_TSHRSTR
:  
	`tsvÆue
(
o
)->
shæí
;

396 
LUA_TLNGSTR
:  
	`tsvÆue
(
o
)->
u
.
 gÀn
;

397 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

398 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

401 
	}
}

404 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

405 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

406 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

407 i‡(
	`âisC˛osuª
(
o
))

408  
	`˛CvÆue
(
o
)->
f
;

409  
NULL
;

410 
	}
}

413 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

414 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

415 
	`ânov
(
o
)) {

416 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

417 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

418 :  
NULL
;

420 
	}
}

423 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

424 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

425  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

426 
	}
}

429 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

430 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

431 
	`ây≥
(
o
)) {

432 
LUA_TTABLE
:  
	`hvÆue
(
o
);

433 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

434 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

435 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

436 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

437 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

438 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

439 :  
NULL
;

441 
	}
}

450 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

451 
	`lua_lock
(
L
);

452 
	`£äûvÆue
(
L
->
t›
);

453 
	`≠i_ö¸_t›
(
L
);

454 
	`lua_u∆ock
(
L
);

455 
	}
}

458 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

459 
	`lua_lock
(
L
);

460 
	`£tÊtvÆue
(
L
->
t›
, 
n
);

461 
	`≠i_ö¸_t›
(
L
);

462 
	`lua_u∆ock
(
L
);

463 
	}
}

466 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

467 
	`lua_lock
(
L
);

468 
	`£tivÆue
(
L
->
t›
, 
n
);

469 
	`≠i_ö¸_t›
(
L
);

470 
	`lua_u∆ock
(
L
);

471 
	}
}

479 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

480 
TSåög
 *
ts
;

481 
	`lua_lock
(
L
);

482 
ts
 = (
Àn
 =0Ë? 
	`luaS_√w
(
L
, ""Ë: 
	`luaS_√wl°r
(L, 
s
,Üen);

483 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

484 
	`≠i_ö¸_t›
(
L
);

485 
	`luaC_checkGC
(
L
);

486 
	`lua_u∆ock
(
L
);

487  
	`gë°r
(
ts
);

488 
	}
}

491 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

492 
	`lua_lock
(
L
);

493 i‡(
s
 =
NULL
)

494 
	`£äûvÆue
(
L
->
t›
);

496 
TSåög
 *
ts
;

497 
ts
 = 
	`luaS_√w
(
L
, 
s
);

498 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

499 
s
 = 
	`gë°r
(
ts
);

501 
	`≠i_ö¸_t›
(
L
);

502 
	`luaC_checkGC
(
L
);

503 
	`lua_u∆ock
(
L
);

504  
s
;

505 
	}
}

508 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

509 
va_li°
 
¨gp
) {

510 c⁄° *
ªt
;

511 
	`lua_lock
(
L
);

512 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

513 
	`luaC_checkGC
(
L
);

514 
	`lua_u∆ock
(
L
);

515  
ªt
;

516 
	}
}

519 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

520 c⁄° *
ªt
;

521 
va_li°
 
¨gp
;

522 
	`lua_lock
(
L
);

523 
	`va_°¨t
(
¨gp
, 
fmt
);

524 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

525 
	`va_íd
(
¨gp
);

526 
	`luaC_checkGC
(
L
);

527 
	`lua_u∆ock
(
L
);

528  
ªt
;

529 
	}
}

532 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

533 
	`lua_lock
(
L
);

534 i‡(
n
 == 0) {

535 
	`£tfvÆue
(
L
->
t›
, 
‚
);

536 
	`≠i_ö¸_t›
(
L
);

539 
CClosuª
 *
˛
;

540 
	`≠i_check√Àms
(
L
, 
n
);

541 
	`≠i_check
(
L
, 
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

542 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

543 
˛
->
f
 = 
‚
;

544 
L
->
t›
 -
n
;

545 
n
--) {

546 
	`£tobj2n
(
L
, &
˛
->
upvÆue
[
n
], L->
t›
 +Ç);

549 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

550 
	`≠i_ö¸_t›
(
L
);

551 
	`luaC_checkGC
(
L
);

553 
	`lua_u∆ock
(
L
);

554 
	}
}

557 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

558 
	`lua_lock
(
L
);

559 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

560 
	`≠i_ö¸_t›
(
L
);

561 
	`lua_u∆ock
(
L
);

562 
	}
}

565 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

566 
	`lua_lock
(
L
);

567 
	`£çvÆue
(
L
->
t›
, 
p
);

568 
	`≠i_ö¸_t›
(
L
);

569 
	`lua_u∆ock
(
L
);

570 
	}
}

573 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

574 
	`lua_lock
(
L
);

575 
	`£âhvÆue
(
L
, L->
t›
, L);

576 
	`≠i_ö¸_t›
(
L
);

577 
	`lua_u∆ock
(
L
);

578  (
	`G
(
L
)->
maöthªad
 == L);

579 
	}
}

588 
	$auxgë°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

589 c⁄° 
TVÆue
 *
¶Ÿ
;

590 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

591 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
)) {

592 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

593 
	`≠i_ö¸_t›
(
L
);

596 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

597 
	`≠i_ö¸_t›
(
L
);

598 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

600 
	`lua_u∆ock
(
L
);

601  
	`ânov
(
L
->
t›
 - 1);

602 
	}
}

605 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

606 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

607 
	`lua_lock
(
L
);

608  
	`auxgë°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

609 
	}
}

612 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

613 
StkId
 
t
;

614 
	`lua_lock
(
L
);

615 
t
 = 
	`ödex2addr
(
L
, 
idx
);

616 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

617 
	`lua_u∆ock
(
L
);

618  
	`ânov
(
L
->
t›
 - 1);

619 
	}
}

622 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

623 
	`lua_lock
(
L
);

624  
	`auxgë°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

625 
	}
}

628 
LUA_API
 
	$lua_gëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

629 
StkId
 
t
;

630 c⁄° 
TVÆue
 *
¶Ÿ
;

631 
	`lua_lock
(
L
);

632 
t
 = 
	`ödex2addr
(
L
, 
idx
);

633 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
)) {

634 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

635 
	`≠i_ö¸_t›
(
L
);

638 
	`£tivÆue
(
L
->
t›
, 
n
);

639 
	`≠i_ö¸_t›
(
L
);

640 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

642 
	`lua_u∆ock
(
L
);

643  
	`ânov
(
L
->
t›
 - 1);

644 
	}
}

647 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

648 
StkId
 
t
;

649 
	`lua_lock
(
L
);

650 
t
 = 
	`ödex2addr
(
L
, 
idx
);

651 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

652 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

653 
	`lua_u∆ock
(
L
);

654  
	`ânov
(
L
->
t›
 - 1);

655 
	}
}

658 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

659 
StkId
 
t
;

660 
	`lua_lock
(
L
);

661 
t
 = 
	`ödex2addr
(
L
, 
idx
);

662 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

663 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

664 
	`≠i_ö¸_t›
(
L
);

665 
	`lua_u∆ock
(
L
);

666  
	`ânov
(
L
->
t›
 - 1);

667 
	}
}

670 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

671 
StkId
 
t
;

672 
TVÆue
 
k
;

673 
	`lua_lock
(
L
);

674 
t
 = 
	`ödex2addr
(
L
, 
idx
);

675 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

676 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

677 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

678 
	`≠i_ö¸_t›
(
L
);

679 
	`lua_u∆ock
(
L
);

680  
	`ânov
(
L
->
t›
 - 1);

681 
	}
}

684 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

685 
TabÀ
 *
t
;

686 
	`lua_lock
(
L
);

687 
t
 = 
	`luaH_√w
(
L
);

688 
	`£thvÆue
(
L
, L->
t›
, 
t
);

689 
	`≠i_ö¸_t›
(
L
);

690 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

691 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

692 
	`luaC_checkGC
(
L
);

693 
	`lua_u∆ock
(
L
);

694 
	}
}

697 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

698 c⁄° 
TVÆue
 *
obj
;

699 
TabÀ
 *
mt
;

700 
ªs
 = 0;

701 
	`lua_lock
(
L
);

702 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

703 
	`ânov
(
obj
)) {

704 
LUA_TTABLE
:

705 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

707 
LUA_TUSERDATA
:

708 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

711 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
obj
)];

714 i‡(
mt
 !
NULL
) {

715 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

716 
	`≠i_ö¸_t›
(
L
);

717 
ªs
 = 1;

719 
	`lua_u∆ock
(
L
);

720  
ªs
;

721 
	}
}

724 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

725 
StkId
 
o
;

726 
	`lua_lock
(
L
);

727 
o
 = 
	`ödex2addr
(
L
, 
idx
);

728 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

729 
	`gëu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
);

730 
	`≠i_ö¸_t›
(
L
);

731 
	`lua_u∆ock
(
L
);

732  
	`ânov
(
L
->
t›
 - 1);

733 
	}
}

743 
	$aux£t°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

744 c⁄° 
TVÆue
 *
¶Ÿ
;

745 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

746 
	`≠i_check√Àms
(
L
, 1);

747 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
, L->
t›
 - 1))

748 
L
->
t›
--;

750 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

751 
	`≠i_ö¸_t›
(
L
);

752 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

753 
L
->
t›
 -= 2;

755 
	`lua_u∆ock
(
L
);

756 
	}
}

759 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

760 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

761 
	`lua_lock
(
L
);

762 
	`aux£t°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

763 
	}
}

766 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

767 
StkId
 
t
;

768 
	`lua_lock
(
L
);

769 
	`≠i_check√Àms
(
L
, 2);

770 
t
 = 
	`ödex2addr
(
L
, 
idx
);

771 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

772 
L
->
t›
 -= 2;

773 
	`lua_u∆ock
(
L
);

774 
	}
}

777 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

778 
	`lua_lock
(
L
);

779 
	`aux£t°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

780 
	}
}

783 
LUA_API
 
	$lua_£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

784 
StkId
 
t
;

785 c⁄° 
TVÆue
 *
¶Ÿ
;

786 
	`lua_lock
(
L
);

787 
	`≠i_check√Àms
(
L
, 1);

788 
t
 = 
	`ödex2addr
(
L
, 
idx
);

789 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
, L->
t›
 - 1))

790 
L
->
t›
--;

792 
	`£tivÆue
(
L
->
t›
, 
n
);

793 
	`≠i_ö¸_t›
(
L
);

794 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

795 
L
->
t›
 -= 2;

797 
	`lua_u∆ock
(
L
);

798 
	}
}

801 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

802 
StkId
 
o
;

803 
TVÆue
 *
¶Ÿ
;

804 
	`lua_lock
(
L
);

805 
	`≠i_check√Àms
(
L
, 2);

806 
o
 = 
	`ödex2addr
(
L
, 
idx
);

807 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

808 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 2);

809 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

810 
	`övÆid©eTMˇche
(
	`hvÆue
(
o
));

811 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

812 
L
->
t›
 -= 2;

813 
	`lua_u∆ock
(
L
);

814 
	}
}

817 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

818 
StkId
 
o
;

819 
	`lua_lock
(
L
);

820 
	`≠i_check√Àms
(
L
, 1);

821 
o
 = 
	`ödex2addr
(
L
, 
idx
);

822 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

823 
	`luaH_£töt
(
L
, 
	`hvÆue
(
o
), 
n
, L->
t›
 - 1);

824 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

825 
L
->
t›
--;

826 
	`lua_u∆ock
(
L
);

827 
	}
}

830 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

831 
StkId
 
o
;

832 
TVÆue
 
k
, *
¶Ÿ
;

833 
	`lua_lock
(
L
);

834 
	`≠i_check√Àms
(
L
, 1);

835 
o
 = 
	`ödex2addr
(
L
, 
idx
);

836 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

837 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

838 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), &
k
);

839 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

840 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 1);

841 
L
->
t›
--;

842 
	`lua_u∆ock
(
L
);

843 
	}
}

846 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

847 
TVÆue
 *
obj
;

848 
TabÀ
 *
mt
;

849 
	`lua_lock
(
L
);

850 
	`≠i_check√Àms
(
L
, 1);

851 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

852 i‡(
	`âi¢û
(
L
->
t›
 - 1))

853 
mt
 = 
NULL
;

855 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

856 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

858 
	`ânov
(
obj
)) {

859 
LUA_TTABLE
: {

860 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

861 i‡(
mt
) {

862 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

863 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

867 
LUA_TUSERDATA
: {

868 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

869 i‡(
mt
) {

870 
	`luaC_objb¨rõr
(
L
, 
	`uvÆue
(
obj
), 
mt
);

871 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

876 
	`G
(
L
)->
mt
[
	`ânov
(
obj
)] = mt;

880 
L
->
t›
--;

881 
	`lua_u∆ock
(
L
);

883 
	}
}

886 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

887 
StkId
 
o
;

888 
	`lua_lock
(
L
);

889 
	`≠i_check√Àms
(
L
, 1);

890 
o
 = 
	`ödex2addr
(
L
, 
idx
);

891 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

892 
	`£tu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
 - 1);

893 
	`luaC_b¨rõr
(
L
, 
	`gcvÆue
(
o
), L->
t›
 - 1);

894 
L
->
t›
--;

895 
	`lua_u∆ock
(
L
);

896 
	}
}

904 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

905 
	`≠i_check
(
L
, (
ƒ
Ë=
LUA_MULTRET
 || (L->
ci
->
t›
 - L->t› >“rË- (
«
)), \

906 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

909 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

910 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

911 
StkId
 
func
;

912 
	`lua_lock
(
L
);

913 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

915 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

916 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

917 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

918 
func
 = 
L
->
t›
 - (
«rgs
+1);

919 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

920 
L
->
ci
->
u
.
c
.
k
 = k;

921 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

922 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
);

925 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ƒesu…s
);

926 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

927 
	`lua_u∆ock
(
L
);

928 
	}
}

935 
	sCÆlS
 {

936 
StkId
 
	mfunc
;

937 
	mƒesu…s
;

941 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

942 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

943 
	`luaD_ˇŒnoyõld
(
L
, 
c
->
func
, c->
ƒesu…s
);

944 
	}
}

948 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

949 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

950 
CÆlS
 
c
;

951 
°©us
;

952 
±rdiff_t
 
func
;

953 
	`lua_lock
(
L
);

954 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

956 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

957 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

958 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

959 i‡(
îrfunc
 == 0)

960 
func
 = 0;

962 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

963 
	`≠i_check°acködex
(
L
, 
îrfunc
, 
o
);

964 
func
 = 
	`ßve°ack
(
L
, 
o
);

966 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

967 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

968 
c
.
ƒesu…s
 =Çresults;

969 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

972 
CÆlInfo
 *
ci
 = 
L
->ci;

973 
ci
->
u
.
c
.
k
 = k;

974 
ci
->
u
.
c
.
˘x
 = ctx;

976 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

977 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

978 
L
->
îrfunc
 = 
func
;

979 
	`£tﬂh
(
ci
->
ˇŒ°©us
, 
L
->
Ælowhook
);

980 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

981 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
);

982 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

983 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

984 
°©us
 = 
LUA_OK
;

986 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

987 
	`lua_u∆ock
(
L
);

988  
°©us
;

989 
	}
}

992 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

993 c⁄° *
chunk«me
, c⁄° *
mode
) {

994 
ZIO
 
z
;

995 
°©us
;

996 
	`lua_lock
(
L
);

997 i‡(!
chunk«me
) chunkname = "?";

998 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

999 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

1000 i‡(
°©us
 =
LUA_OK
) {

1001 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

1002 i‡(
f
->
nupvÆues
 >= 1) {

1004 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

1005 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

1007 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

1008 
	`luaC_upvÆb¨rõr
(
L
, 
f
->
upvÆs
[0]);

1011 
	`lua_u∆ock
(
L
);

1012  
°©us
;

1013 
	}
}

1016 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
) {

1017 
°©us
;

1018 
TVÆue
 *
o
;

1019 
	`lua_lock
(
L
);

1020 
	`≠i_check√Àms
(
L
, 1);

1021 
o
 = 
L
->
t›
 - 1;

1022 i‡(
	`isLfun˘i⁄
(
o
))

1023 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 
°rù
);

1025 
°©us
 = 1;

1026 
	`lua_u∆ock
(
L
);

1027  
°©us
;

1028 
	}
}

1031 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1032  
L
->
°©us
;

1033 
	}
}

1040 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1041 
ªs
 = 0;

1042 
globÆ_Sèã
 *
g
;

1043 
	`lua_lock
(
L
);

1044 
g
 = 
	`G
(
L
);

1045 
wh©
) {

1046 
LUA_GCSTOP
: {

1047 
g
->
g¸u¬ög
 = 0;

1050 
LUA_GCRESTART
: {

1051 
	`luaE_£tdebt
(
g
, 0);

1052 
g
->
g¸u¬ög
 = 1;

1055 
LUA_GCCOLLECT
: {

1056 
	`luaC_fuŒgc
(
L
, 0);

1059 
LUA_GCCOUNT
: {

1061 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1064 
LUA_GCCOUNTB
: {

1065 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1068 
LUA_GCSTEP
: {

1069 
l_mem
 
debt
 = 1;

1070 
lu_byã
 
ﬁdru¬ög
 = 
g
->
g¸u¬ög
;

1071 
g
->
g¸u¬ög
 = 1;

1072 i‡(
d©a
 == 0) {

1073 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1074 
	`luaC_°ï
(
L
);

1077 
debt
 = 
	`ˇ°
(
l_mem
, 
d©a
Ë* 1024 + 
g
->
GCdebt
;

1078 
	`luaE_£tdebt
(
g
, 
debt
);

1079 
	`luaC_checkGC
(
L
);

1081 
g
->
g¸u¬ög
 = 
ﬁdru¬ög
;

1082 i‡(
debt
 > 0 && 
g
->
gc°©e
 =
GCS∑u£
)

1083 
ªs
 = 1;

1086 
LUA_GCSETPAUSE
: {

1087 
ªs
 = 
g
->
g˝au£
;

1088 
g
->
g˝au£
 = 
d©a
;

1091 
LUA_GCSETSTEPMUL
: {

1092 
ªs
 = 
g
->
gc°ïmul
;

1093 i‡(
d©a
 < 40) data = 40;

1094 
g
->
gc°ïmul
 = 
d©a
;

1097 
LUA_GCISRUNNING
: {

1098 
ªs
 = 
g
->
g¸u¬ög
;

1101 : 
ªs
 = -1;

1103 
	`lua_u∆ock
(
L
);

1104  
ªs
;

1105 
	}
}

1114 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1115 
	`lua_lock
(
L
);

1116 
	`≠i_check√Àms
(
L
, 1);

1117 
	`luaG_îr‹msg
(
L
);

1120 
	}
}

1123 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1124 
StkId
 
t
;

1125 
m‹e
;

1126 
	`lua_lock
(
L
);

1127 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1128 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

1129 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1130 i‡(
m‹e
) {

1131 
	`≠i_ö¸_t›
(
L
);

1134 
L
->
t›
 -= 1;

1135 
	`lua_u∆ock
(
L
);

1136  
m‹e
;

1137 
	}
}

1140 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1141 
	`lua_lock
(
L
);

1142 
	`≠i_check√Àms
(
L
, 
n
);

1143 i‡(
n
 >= 2) {

1144 
	`luaV_c⁄ˇt
(
L
, 
n
);

1146 i‡(
n
 == 0) {

1147 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1148 
	`≠i_ö¸_t›
(
L
);

1151 
	`luaC_checkGC
(
L
);

1152 
	`lua_u∆ock
(
L
);

1153 
	}
}

1156 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1157 
StkId
 
t
;

1158 
	`lua_lock
(
L
);

1159 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1160 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1161 
	`≠i_ö¸_t›
(
L
);

1162 
	`lua_u∆ock
(
L
);

1163 
	}
}

1166 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1167 
lua_AŒoc
 
f
;

1168 
	`lua_lock
(
L
);

1169 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1170 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1171 
	`lua_u∆ock
(
L
);

1172  
f
;

1173 
	}
}

1176 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1177 
	`lua_lock
(
L
);

1178 
	`G
(
L
)->
ud
 = ud;

1179 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1180 
	`lua_u∆ock
(
L
);

1181 
	}
}

1184 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1185 
Ud©a
 *
u
;

1186 
	`lua_lock
(
L
);

1187 
u
 = 
	`luaS_√wud©a
(
L
, 
size
);

1188 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1189 
	`≠i_ö¸_t›
(
L
);

1190 
	`luaC_checkGC
(
L
);

1191 
	`lua_u∆ock
(
L
);

1192  
	`gëud©amem
(
u
);

1193 
	}
}

1197 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1198 
CClosuª
 **
ow√r
, 
UpVÆ
 **
uv
) {

1199 
	`ây≥
(
fi
)) {

1200 
LUA_TCCL
: {

1201 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1202 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1203 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1204 i‡(
ow√r
Ë*ow√∏
f
;

1207 
LUA_TLCL
: {

1208 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1209 
TSåög
 *
«me
;

1210 
PrŸo
 *
p
 = 
f
->p;

1211 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1212 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1213 i‡(
uv
Ë*uv = 
f
->
upvÆs
[
n
 - 1];

1214 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1215  (
«me
 =
NULL
Ë? "(*nÿ«me)" : 
	`gë°r
(name);

1217 :  
NULL
;

1219 
	}
}

1222 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1223 c⁄° *
«me
;

1224 
TVÆue
 *
vÆ
 = 
NULL
;

1225 
	`lua_lock
(
L
);

1226 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
, NULL);

1227 i‡(
«me
) {

1228 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1229 
	`≠i_ö¸_t›
(
L
);

1231 
	`lua_u∆ock
(
L
);

1232  
«me
;

1233 
	}
}

1236 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1237 c⁄° *
«me
;

1238 
TVÆue
 *
vÆ
 = 
NULL
;

1239 
CClosuª
 *
ow√r
 = 
NULL
;

1240 
UpVÆ
 *
uv
 = 
NULL
;

1241 
StkId
 
fi
;

1242 
	`lua_lock
(
L
);

1243 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1244 
	`≠i_check√Àms
(
L
, 1);

1245 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
, &
uv
);

1246 i‡(
«me
) {

1247 
L
->
t›
--;

1248 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1249 i‡(
ow√r
Ë{ 
	`luaC_b¨rõr
(
L
, ow√r, L->
t›
); }

1250 i‡(
uv
Ë{ 
	`luaC_upvÆb¨rõr
(
L
, uv); }

1252 
	`lua_u∆ock
(
L
);

1253  
«me
;

1254 
	}
}

1257 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1258 
LClosuª
 *
f
;

1259 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1260 
	`≠i_check
(
L
, 
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1261 
f
 = 
	`˛LvÆue
(
fi
);

1262 
	`≠i_check
(
L
, (1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1263 i‡(
pf
Ë*p‡
f
;

1264  &
f
->
upvÆs
[
n
 - 1];

1265 
	}
}

1268 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1269 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1270 
	`ây≥
(
fi
)) {

1271 
LUA_TLCL
: {

1272  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1274 
LUA_TCCL
: {

1275 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1276 
	`≠i_check
(
L
, 1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1277  &
f
->
upvÆue
[
n
 - 1];

1280 
	`≠i_check
(
L
, 0, "closureÉxpected");

1281  
NULL
;

1284 
	}
}

1287 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1288 
fidx2
, 
n2
) {

1289 
LClosuª
 *
f1
;

1290 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1291 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1292 
	`luaC_upvdeccou¡
(
L
, *
up1
);

1293 *
up1
 = *
up2
;

1294 (*
up1
)->
ªfcou¡
++;

1295 i‡(
	`upis›í
(*
up1
)Ë(*up1)->
u
.
›í
.
touched
 = 1;

1296 
	`luaC_upvÆb¨rõr
(
L
, *
up1
);

1297 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lapi.h

7 #i‚de‡
œpi_h


8 
	#œpi_h


	)

11 
	~"Œimôs.h
"

12 
	~"l°©e.h
"

14 
	#≠i_ö¸_t›
(
L
Ë{L->
t›
++; 
	`≠i_check
(L, L->t› <L->
ci
->top, \

15 "°ack ovîÊow");}

	)

17 
	#adju°ªsu…s
(
L
,
ƒes
) \

18 { i‡((
ƒes
Ë=
LUA_MULTRET
 && 
L
->
ci
->
t›
 < L->t›ËL->ci->t› = L->t›; }

	)

20 
	#≠i_check√Àms
(
L
,
n
Ë
	`≠i_check
(L, (nË< (L->
t›
 - L->
ci
->
func
), \

21 "nŸÉnoughÉÀmít†öÅhê°ack")

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lauxlib.c

7 
	#œuxlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

25 
	~"lua.h
"

27 
	~"œuxlib.h
"

37 
	#LEVELS1
 10

	)

38 
	#LEVELS2
 11

	)

46 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

47 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

49 
	`lua_pushnû
(
L
);

50 
	`lua_√xt
(
L
, -2)) {

51 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

52 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

53 
	`lua_p›
(
L
, 1);

56 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

57 
	`lua_ªmove
(
L
, -2);

58 
	`lua_pushlôîÆ
(
L
, ".");

59 
	`lua_ö£π
(
L
, -2);

60 
	`lua_c⁄ˇt
(
L
, 3);

64 
	`lua_p›
(
L
, 1);

67 
	}
}

73 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

74 
t›
 = 
	`lua_gët›
(
L
);

75 
	`lua_gëöfo
(
L
, "f", 
¨
);

76 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

77 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

78 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -1);

79 i‡(
	`°∫cmp
(
«me
, "_G.", 3) == 0) {

80 
	`lua_push°rög
(
L
, 
«me
 + 3);

81 
	`lua_ªmove
(
L
, -2);

83 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

84 
	`lua_p›
(
L
, 2);

88 
	`lua_£â›
(
L
, 
t›
);

91 
	}
}

94 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

95 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

96 
	`lua_pushf°rög
(
L
, "fun˘i⁄ '%s'", 
	`lua_to°rög
(L, -1));

97 
	`lua_ªmove
(
L
, -2);

99 i‡(*
¨
->
«mewh©
 != '\0')

100 
	`lua_pushf°rög
(
L
, "%†'%s'", 
¨
->
«mewh©
,ár->
«me
);

101 i‡(*
¨
->
wh©
 == 'm')

102 
	`lua_pushlôîÆ
(
L
, "main chunk");

103 i‡(*
¨
->
wh©
 != 'C')

104 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

106 
	`lua_pushlôîÆ
(
L
, "?");

107 
	}
}

110 
	$œ°Àvñ
 (
lua_Sèã
 *
L
) {

111 
lua_Debug
 
¨
;

112 
li
 = 1, 
À
 = 1;

114 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

116 
li
 < 
À
) {

117 
m
 = (
li
 + 
À
)/2;

118 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

119 
À
 = 
m
;

121  
À
 - 1;

122 
	}
}

125 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

126 c⁄° *
msg
, 
Àvñ
) {

127 
lua_Debug
 
¨
;

128 
t›
 = 
	`lua_gët›
(
L
);

129 
œ°
 = 
	`œ°Àvñ
(
L1
);

130 
n1
 = (
œ°
 - 
Àvñ
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : -1;

131 i‡(
msg
)

132 
	`lua_pushf°rög
(
L
, "%s\n", 
msg
);

133 
	`luaL_check°ack
(
L
, 10, 
NULL
);

134 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

135 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

136 i‡(
n1
-- == 0) {

137 
	`lua_pushlôîÆ
(
L
, "\n\t...");

138 
Àvñ
 = 
œ°
 - 
LEVELS2
 + 1;

141 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

142 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

143 i‡(
¨
.
cuºíéöe
 > 0)

144 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

145 
	`lua_pushlôîÆ
(
L
, " in ");

146 
	`pushfun˙ame
(
L
, &
¨
);

147 i‡(
¨
.
i°aûˇŒ
)

148 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

149 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

152 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

153 
	}
}

164 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
) {

165 
lua_Debug
 
¨
;

166 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

167  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
¨g
, 
exåamsg
);

168 
	`lua_gëöfo
(
L
, "n", &
¨
);

169 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

170 
¨g
--;

171 i‡(
¨g
 == 0)

172  
	`luaL_îr‹
(
L
, "calling '%s' on bad self (%s)",

173 
¨
.
«me
, 
exåamsg
);

175 i‡(
¨
.
«me
 =
NULL
)

176 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

177  
	`luaL_îr‹
(
L
, "badárgument #%dÅo '%s' (%s)",

178 
¨g
, 
¨
.
«me
, 
exåamsg
);

179 
	}
}

182 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
äame
) {

183 c⁄° *
msg
;

184 c⁄° *
ty≥¨g
;

185 i‡(
	`luaL_gëmëafõld
(
L
, 
¨g
, "__«me"Ë=
LUA_TSTRING
)

186 
ty≥¨g
 = 
	`lua_to°rög
(
L
, -1);

187 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TLIGHTUSERDATA
)

188 
ty≥¨g
 = "light userdata";

190 
ty≥¨g
 = 
	`luaL_ty≥«me
(
L
, 
¨g
);

191 
msg
 = 
	`lua_pushf°rög
(
L
, "%†ex≥˘ed, gŸ %s", 
äame
, 
ty≥¨g
);

192  
	`luaL_¨gîr‹
(
L
, 
¨g
, 
msg
);

193 
	}
}

196 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
¨g
, 
èg
) {

197 
	`ty≥îr‹
(
L
, 
¨g
, 
	`lua_ty≥«me
(L, 
èg
));

198 
	}
}

205 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

206 
lua_Debug
 
¨
;

207 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

208 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

209 i‡(
¨
.
cuºíéöe
 > 0) {

210 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

214 
	`lua_pushf°rög
(
L
, "");

215 
	}
}

223 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

224 
va_li°
 
¨gp
;

225 
	`va_°¨t
(
¨gp
, 
fmt
);

226 
	`luaL_whîe
(
L
, 1);

227 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

228 
	`va_íd
(
¨gp
);

229 
	`lua_c⁄ˇt
(
L
, 2);

230  
	`lua_îr‹
(
L
);

231 
	}
}

234 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

235 
í
 = 
î∫o
;

236 i‡(
°©
) {

237 
	`lua_pushboﬁón
(
L
, 1);

241 
	`lua_pushnû
(
L
);

242 i‡(
‚ame
)

243 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

245 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

246 
	`lua_pushöãgî
(
L
, 
í
);

249 
	}
}

252 #i‡!
deföed
(
l_ö•e˘°©
)

254 #i‡
deföed
(
LUA_USE_POSIX
)

256 
	~<sys/waô.h
>

261 
	#l_ö•e˘°©
(
°©
,
wh©
) \

262 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

263 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

267 
	#l_ö•e˘°©
(
°©
,
wh©
Ë

	)

274 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

275 c⁄° *
wh©
 = "exit";

276 i‡(
°©
 == -1)

277  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

279 
	`l_ö•e˘°©
(
°©
, 
wh©
);

280 i‡(*
wh©
 ='e' && 
°©
 == 0)

281 
	`lua_pushboﬁón
(
L
, 1);

283 
	`lua_pushnû
(
L
);

284 
	`lua_push°rög
(
L
, 
wh©
);

285 
	`lua_pushöãgî
(
L
, 
°©
);

288 
	}
}

299 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

300 i‡(
	`luaL_gëmë©abÀ
(
L
, 
äame
Ë!
LUA_TNIL
)

302 
	`lua_p›
(
L
, 1);

303 
	`lua_¸óãèbÀ
(
L
, 0, 2);

304 
	`lua_push°rög
(
L
, 
äame
);

305 
	`lua_£tfõld
(
L
, -2, "__name");

306 
	`lua_pushvÆue
(
L
, -1);

307 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

309 
	}
}

312 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

313 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

314 
	`lua_£tmë©abÀ
(
L
, -2);

315 
	}
}

318 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

319 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

320 i‡(
p
 !
NULL
) {

321 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

322 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

323 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

324 
p
 = 
NULL
;

325 
	`lua_p›
(
L
, 2);

326  
p
;

329  
NULL
;

330 
	}
}

333 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

334 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

335 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

336  
p
;

337 
	}
}

348 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

349 c⁄° *c⁄° 
l°
[]) {

350 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
¨g
, def) :

351 
	`luaL_check°rög
(
L
, 
¨g
);

352 
i
;

353 
i
=0; 
l°
[i]; i++)

354 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

355  
i
;

356  
	`luaL_¨gîr‹
(
L
, 
¨g
,

357 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ '%s'", 
«me
));

358 
	}
}

368 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

369 i‡(!
	`lua_check°ack
(
L
, 
•a˚
)) {

370 i‡(
msg
)

371 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

373 
	`luaL_îr‹
(
L
, "stack overflow");

375 
	}
}

378 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
¨g
, 
t
) {

379 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
t
)

380 
	`èg_îr‹
(
L
, 
¨g
, 
t
);

381 
	}
}

384 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
¨g
) {

385 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNONE
)

386 
	`luaL_¨gîr‹
(
L
, 
¨g
, "valueÉxpected");

387 
	}
}

390 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
¨g
, 
size_t
 *
Àn
) {

391 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, 
Àn
);

392 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TSTRING
);

393  
s
;

394 
	}
}

397 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
¨g
,

398 c⁄° *
def
, 
size_t
 *
Àn
) {

399 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
)) {

400 i‡(
Àn
)

401 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

402  
def
;

404  
	`luaL_checkl°rög
(
L
, 
¨g
, 
Àn
);

405 
	}
}

408 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
¨g
) {

409 
i¢um
;

410 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
¨g
, &
i¢um
);

411 i‡(!
i¢um
)

412 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

413  
d
;

414 
	}
}

417 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
) {

418  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
¨g
, 
def
);

419 
	}
}

422 
	$öãº‹
 (
lua_Sèã
 *
L
, 
¨g
) {

423 i‡(
	`lua_i¢umbî
(
L
, 
¨g
))

424 
	`luaL_¨gîr‹
(
L
, 
¨g
, "number hasÇo integerÑepresentation");

426 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

427 
	}
}

430 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
¨g
) {

431 
i¢um
;

432 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
¨g
, &
i¢um
);

433 i‡(!
i¢um
) {

434 
	`öãº‹
(
L
, 
¨g
);

436  
d
;

437 
	}
}

440 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
¨g
,

441 
lua_I¡egî
 
def
) {

442  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
¨g
, 
def
);

443 
	}
}

455 
	sUBox
 {

456 *
	mbox
;

457 
size_t
 
	mbsize
;

458 } 
	tUBox
;

461 *
	$ªsizebox
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 
√wsize
) {

462 *
ud
;

463 
lua_AŒoc
 
Ælocf
 = 
	`lua_gëÆlocf
(
L
, &
ud
);

464 
UBox
 *
box
 = (UBox *)
	`lua_tou£rd©a
(
L
, 
idx
);

465 *
ãmp
 = 
	`Ælocf
(
ud
, 
box
->box, box->
bsize
, 
√wsize
);

466 i‡(
ãmp
 =
NULL
 && 
√wsize
 > 0) {

467 
	`ªsizebox
(
L
, 
idx
, 0);

468 
	`luaL_îr‹
(
L
, "notÉnough memory for bufferállocation");

470 
box
->box = 
ãmp
;

471 
box
->
bsize
 = 
√wsize
;

472  
ãmp
;

473 
	}
}

476 
	$boxgc
 (
lua_Sèã
 *
L
) {

477 
	`ªsizebox
(
L
, 1, 0);

479 
	}
}

482 *
	$√wbox
 (
lua_Sèã
 *
L
, 
size_t
 
√wsize
) {

483 
UBox
 *
box
 = (UBox *)
	`lua_√wu£rd©a
(
L
, (UBox));

484 
box
->box = 
NULL
;

485 
box
->
bsize
 = 0;

486 i‡(
	`luaL_√wmë©abÀ
(
L
, "LUABOX")) {

487 
	`lua_pushcfun˘i⁄
(
L
, 
boxgc
);

488 
	`lua_£tfõld
(
L
, -2, "__gc");

490 
	`lua_£tmë©abÀ
(
L
, -2);

491  
	`ªsizebox
(
L
, -1, 
√wsize
);

492 
	}
}

499 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

505 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

506 
lua_Sèã
 *
L
 = 
B
->L;

507 i‡(
B
->
size
 - B->
n
 < 
sz
) {

508 *
√wbuff
;

509 
size_t
 
√wsize
 = 
B
->
size
 * 2;

510 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

511 
√wsize
 = 
B
->
n
 + 
sz
;

512 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

513 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

515 i‡(
	`buff⁄°ack
(
B
))

516 
√wbuff
 = (*)
	`ªsizebox
(
L
, -1, 
√wsize
);

518 
√wbuff
 = (*)
	`√wbox
(
L
, 
√wsize
);

519 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

521 
B
->
b
 = 
√wbuff
;

522 
B
->
size
 = 
√wsize
;

524  &
B
->
b
[B->
n
];

525 
	}
}

528 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

529 i‡(
l
 > 0) {

530 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

531 
	`mem˝y
(
b
, 
s
, 
l
 * ());

532 
	`luaL_addsize
(
B
, 
l
);

534 
	}
}

537 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

538 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

539 
	}
}

542 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

543 
lua_Sèã
 *
L
 = 
B
->L;

544 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

545 i‡(
	`buff⁄°ack
(
B
)) {

546 
	`ªsizebox
(
L
, -2, 0);

547 
	`lua_ªmove
(
L
, -2);

549 
	}
}

552 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

553 
	`luaL_addsize
(
B
, 
sz
);

554 
	`luaL_pushªsu…
(
B
);

555 
	}
}

558 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

559 
lua_Sèã
 *
L
 = 
B
->L;

560 
size_t
 
l
;

561 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

562 i‡(
	`buff⁄°ack
(
B
))

563 
	`lua_ö£π
(
L
, -2);

564 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

565 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

566 
	}
}

569 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

570 
B
->
L
 = L;

571 
B
->
b
 = B->
öôb
;

572 
B
->
n
 = 0;

573 
B
->
size
 = 
LUAL_BUFFERSIZE
;

574 
	}
}

577 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

578 
	`luaL_bufföô
(
L
, 
B
);

579  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

580 
	}
}

592 
	#‰ìli°
 0

	)

595 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

596 
ªf
;

597 i‡(
	`lua_i¢û
(
L
, -1)) {

598 
	`lua_p›
(
L
, 1);

599  
LUA_REFNIL
;

601 
t
 = 
	`lua_absödex
(
L
,Å);

602 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

603 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

604 
	`lua_p›
(
L
, 1);

605 i‡(
ªf
 != 0) {

606 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

607 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

610 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

611 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

612  
ªf
;

613 
	}
}

616 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

617 i‡(
ªf
 >= 0) {

618 
t
 = 
	`lua_absödex
(
L
,Å);

619 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

620 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

621 
	`lua_pushöãgî
(
L
, 
ªf
);

622 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

624 
	}
}

635 
	sLﬂdF
 {

636 
	mn
;

637 
FILE
 *
	mf
;

638 
	mbuff
[
BUFSIZ
];

639 } 
	tLﬂdF
;

642 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

643 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

644 ()
L
;

645 i‡(
lf
->
n
 > 0) {

646 *
size
 = 
lf
->
n
;

647 
lf
->
n
 = 0;

653 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

654 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

656  
lf
->
buff
;

657 
	}
}

660 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

661 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

662 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

663 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

664 
	`lua_ªmove
(
L
, 
‚ameödex
);

665  
LUA_ERRFILE
;

666 
	}
}

669 
	$skùBOM
 (
LﬂdF
 *
lf
) {

670 c⁄° *
p
 = "\xEF\xBB\xBF";

671 
c
;

672 
lf
->
n
 = 0;

674 
c
 = 
	`gëc
(
lf
->
f
);

675 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

676 
lf
->
buff
[lf->
n
++] = 
c
;

677 } *
p
 != '\0');

678 
lf
->
n
 = 0;

679  
	`gëc
(
lf
->
f
);

680 
	}
}

690 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

691 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

692 i‡(
c
 == '#') {

694 
c
 = 
	`gëc
(
lf
->
f
);

695 } 
c
 !
EOF
 && c != '\n');

696 *
˝
 = 
	`gëc
(
lf
->
f
);

700 
	}
}

703 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

704 c⁄° *
mode
) {

705 
LﬂdF
 
lf
;

706 
°©us
, 
ªad°©us
;

707 
c
;

708 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

709 i‡(
fûíame
 =
NULL
) {

710 
	`lua_pushlôîÆ
(
L
, "=stdin");

711 
lf
.
f
 = 
°dö
;

714 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

715 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

716 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

718 i‡(
	`skùcommít
(&
lf
, &
c
))

719 
lf
.
buff
[lf.
n
++] = '\n';

720 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

721 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

722 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

723 
	`skùcommít
(&
lf
, &
c
);

725 i‡(
c
 !
EOF
)

726 
lf
.
buff
[lf.
n
++] = 
c
;

727 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

728 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

729 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

730 i‡(
ªad°©us
) {

731 
	`lua_£â›
(
L
, 
‚ameödex
);

732  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

734 
	`lua_ªmove
(
L
, 
‚ameödex
);

735  
°©us
;

736 
	}
}

739 
	sLﬂdS
 {

740 c⁄° *
	ms
;

741 
size_t
 
	msize
;

742 } 
	tLﬂdS
;

745 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

746 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

747 ()
L
;

748 i‡(
ls
->
size
 =0Ë 
NULL
;

749 *
size
 = 
ls
->size;

750 
ls
->
size
 = 0;

751  
ls
->
s
;

752 
	}
}

755 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

756 c⁄° *
«me
, c⁄° *
mode
) {

757 
LﬂdS
 
ls
;

758 
ls
.
s
 = 
buff
;

759 
ls
.
size
 = size;

760  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

761 
	}
}

764 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

765  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

766 
	}
}

772 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

773 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

774  
LUA_TNIL
;

776 
â
;

777 
	`lua_push°rög
(
L
, 
evít
);

778 
â
 = 
	`lua_øwgë
(
L
, -2);

779 i‡(
â
 =
LUA_TNIL
)

780 
	`lua_p›
(
L
, 2);

782 
	`lua_ªmove
(
L
, -2);

783  
â
;

785 
	}
}

788 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

789 
obj
 = 
	`lua_absödex
(
L
, obj);

790 i‡(
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
Ë=
LUA_TNIL
)

792 
	`lua_pushvÆue
(
L
, 
obj
);

793 
	`lua_ˇŒ
(
L
, 1, 1);

795 
	}
}

798 
LUALIB_API
 
lua_I¡egî
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

799 
lua_I¡egî
 
l
;

800 
i¢um
;

801 
	`lua_Àn
(
L
, 
idx
);

802 
l
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

803 i‡(!
i¢um
)

804 
	`luaL_îr‹
(
L
, "objectÜength isÇotán integer");

805 
	`lua_p›
(
L
, 1);

806  
l
;

807 
	}
}

810 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

811 i‡(
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

812 i‡(!
	`lua_is°rög
(
L
, -1))

813 
	`luaL_îr‹
(
L
, "'__tostring' mustÑeturná string");

816 
	`lua_ty≥
(
L
, 
idx
)) {

817 
LUA_TNUMBER
: {

818 i‡(
	`lua_isöãgî
(
L
, 
idx
))

819 
	`lua_pushf°rög
(
L
, "%I", (
LUAI_UACINT
)
	`lua_toöãgî
(L, 
idx
));

821 
	`lua_pushf°rög
(
L
, "%f", (
LUAI_UACNUMBER
)
	`lua_t⁄umbî
(L, 
idx
));

824 
LUA_TSTRING
:

825 
	`lua_pushvÆue
(
L
, 
idx
);

827 
LUA_TBOOLEAN
:

828 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

830 
LUA_TNIL
:

831 
	`lua_pushlôîÆ
(
L
, "nil");

834 
â
 = 
	`luaL_gëmëafõld
(
L
, 
idx
, "__name");

835 c⁄° *
köd
 = (
â
 =
LUA_TSTRING
Ë? 
	`lua_to°rög
(
L
, -1) :

836 
	`luaL_ty≥«me
(
L
, 
idx
);

837 
	`lua_pushf°rög
(
L
, "%s: %p", 
köd
, 
	`lua_t›oöãr
(L, 
idx
));

838 i‡(
â
 !
LUA_TNIL
)

839 
	`lua_ªmove
(
L
, -2);

844  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

845 
	}
}

853 #i‡
deföed
(
LUA_COMPAT_MODULE
)

855 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

856 c⁄° *
‚ame
, 
szhöt
) {

857 c⁄° *
e
;

858 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

860 
e
 = 
	`°rchr
(
‚ame
, '.');

861 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

862 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

863 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TNIL
) {

864 
	`lua_p›
(
L
, 1);

865 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

866 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

867 
	`lua_pushvÆue
(
L
, -2);

868 
	`lua_£âabÀ
(
L
, -4);

870 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

871 
	`lua_p›
(
L
, 2);

872  
‚ame
;

874 
	`lua_ªmove
(
L
, -2);

875 
‚ame
 = 
e
 + 1;

876 } *
e
 == '.');

877  
NULL
;

878 
	}
}

884 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

885 
size
 = 0;

886 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

887  
size
;

888 
	}
}

897 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

898 
sizehöt
) {

899 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
, 1);

900 i‡(
	`lua_gëfõld
(
L
, -1, 
mod«me
Ë!
LUA_TTABLE
) {

901 
	`lua_p›
(
L
, 1);

903 
	`lua_pushglobÆèbÀ
(
L
);

904 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

905 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ '%s'", 
mod«me
);

906 
	`lua_pushvÆue
(
L
, -1);

907 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

909 
	`lua_ªmove
(
L
, -2);

910 
	}
}

913 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

914 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

915 
	`luaL_checkvîsi⁄
(
L
);

916 i‡(
lib«me
) {

917 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

918 
	`lua_ö£π
(
L
, -(
nup
 + 1));

920 i‡(
l
)

921 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

923 
	`lua_p›
(
L
, 
nup
);

924 
	}
}

934 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

935 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

936 ; 
l
->
«me
 !
NULL
;Ü++) {

937 
i
;

938 
i
 = 0; i < 
nup
; i++)

939 
	`lua_pushvÆue
(
L
, -
nup
);

940 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

941 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

943 
	`lua_p›
(
L
, 
nup
);

944 
	}
}

951 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

952 i‡(
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
Ë=
LUA_TTABLE
)

955 
	`lua_p›
(
L
, 1);

956 
idx
 = 
	`lua_absödex
(
L
, idx);

957 
	`lua_√wèbÀ
(
L
);

958 
	`lua_pushvÆue
(
L
, -1);

959 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

962 
	}
}

971 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

972 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

973 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

974 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

975 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

976 
	`lua_p›
(
L
, 1);

977 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

978 
	`lua_push°rög
(
L
, 
mod«me
);

979 
	`lua_ˇŒ
(
L
, 1, 1);

980 
	`lua_pushvÆue
(
L
, -1);

981 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

983 
	`lua_ªmove
(
L
, -2);

984 i‡(
glb
) {

985 
	`lua_pushvÆue
(
L
, -1);

986 
	`lua_£tglobÆ
(
L
, 
mod«me
);

988 
	}
}

991 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

992 c⁄° *
r
) {

993 c⁄° *
wûd
;

994 
size_t
 
l
 = 
	`°æí
(
p
);

995 
luaL_Buf„r
 
b
;

996 
	`luaL_bufföô
(
L
, &
b
);

997 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

998 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

999 
	`luaL_add°rög
(&
b
, 
r
);

1000 
s
 = 
wûd
 + 
l
;

1002 
	`luaL_add°rög
(&
b
, 
s
);

1003 
	`luaL_pushªsu…
(&
b
);

1004  
	`lua_to°rög
(
L
, -1);

1005 
	}
}

1008 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

1009 ()
ud
; ()
osize
;

1010 i‡(
nsize
 == 0) {

1011 
	`‰ì
(
±r
);

1012  
NULL
;

1015  
	`ªÆloc
(
±r
, 
nsize
);

1016 
	}
}

1019 
	$∑nic
 (
lua_Sèã
 *
L
) {

1020 
	`lua_wrôe°rögîr‹
("PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

1021 
	`lua_to°rög
(
L
, -1));

1023 
	}
}

1026 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

1027 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

1028 i‡(
L
Ë
	`lua_©∑nic
(L, &
∑nic
);

1029  
L
;

1030 
	}
}

1033 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
) {

1034 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

1035 i‡(
sz
 !
LUAL_NUMSIZES
)

1036 
	`luaL_îr‹
(
L
, "coreándÜibrary have incompatibleÇumericÅypes");

1037 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

1038 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

1039 i‡(*
v
 !
vî
)

1040 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

1041 (
LUAI_UACNUMBER
)
vî
, (LUAI_UACNUMBER)*
v
);

1042 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

20 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

24 
	#LUA_LOADED_TABLE
 "_LOADED"

	)

28 
	#LUA_PRELOAD_TABLE
 "_PRELOAD"

	)

31 
	sluaL_Reg
 {

32 c⁄° *
	m«me
;

33 
lua_CFun˘i⁄
 
	mfunc
;

34 } 
	tluaL_Reg
;

37 
	#LUAL_NUMSIZES
 ((
lua_I¡egî
)*16 + (
lua_Numbî
))

	)

39 
LUALIB_API
 (
luaL_checkvîsi⁄_
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
);

40 
	#luaL_checkvîsi⁄
(
L
) \

41 
	`luaL_checkvîsi⁄_
(
L
, 
LUA_VERSION_NUM
, 
LUAL_NUMSIZES
)

	)

43 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

44 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

45 
LUALIB_API
 c⁄° *(
luaL_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

46 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
);

47 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

48 
size_t
 *
l
);

49 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

50 c⁄° *
def
, 
size_t
 *
l
);

51 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
¨g
);

52 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
);

54 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
¨g
);

55 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
¨g
,

56 
lua_I¡egî
 
def
);

58 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

59 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
¨g
, 
t
);

60 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
¨g
);

62 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

63 
LUALIB_API
 (
luaL_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

64 
LUALIB_API
 *(
luaL_ã°ud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

65 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

67 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

68 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

70 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

71 c⁄° *c⁄° 
l°
[]);

73 
LUALIB_API
 (
luaL_fûîesu…
Ë(
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
);

74 
LUALIB_API
 (
luaL_exe¸esu…
Ë(
lua_Sèã
 *
L
, 
°©
);

77 
	#LUA_NOREF
 (-2)

	)

78 
	#LUA_REFNIL
 (-1)

	)

80 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

81 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

83 
LUALIB_API
 (
luaL_lﬂdfûex
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
,

84 c⁄° *
mode
);

86 
	#luaL_lﬂdfûe
(
L
,
f
Ë
	`luaL_lﬂdfûex
(L,f,
NULL
)

	)

88 
LUALIB_API
 (
luaL_lﬂdbuf„rx
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

89 c⁄° *
«me
, c⁄° *
mode
);

90 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

92 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

94 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

96 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

97 c⁄° *
r
);

99 
LUALIB_API
 (
luaL_£tfuncs
Ë(
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
);

101 
LUALIB_API
 (
luaL_gësubèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
);

103 
LUALIB_API
 (
luaL_åa˚back
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

104 c⁄° *
msg
, 
Àvñ
);

106 
LUALIB_API
 (
luaL_ªquúef
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

107 
lua_CFun˘i⁄
 
›íf
, 
glb
);

116 
	#luaL_√wlibèbÀ
(
L
,
l
) \

117 
	`lua_¸óãèbÀ
(
L
, 0, (
l
)/(÷)[0]Ë- 1)

	)

119 
	#luaL_√wlib
(
L
,
l
) \

120 (
	`luaL_checkvîsi⁄
(
L
), 
	`luaL_√wlibèbÀ
(L,
l
), 
	`luaL_£tfuncs
(L,l,0))

	)

122 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
¨g
,
exåamsg
) \

123 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
¨g
), (
exåamsg
))))

	)

124 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

125 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

127 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

129 
	#luaL_dofûe
(
L
, 
‚
) \

130 (
	`luaL_lﬂdfûe
(
L
, 
‚
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

132 
	#luaL_do°rög
(
L
, 
s
) \

133 (
	`luaL_lﬂd°rög
(
L
, 
s
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

135 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

137 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

139 
	#luaL_lﬂdbuf„r
(
L
,
s
,
sz
,
n
Ë
	`luaL_lﬂdbuf„rx
(L,s,sz,n,
NULL
)

	)

148 
	sluaL_Buf„r
 {

149 *
b
;

150 
size_t
 
size
;

151 
size_t
 
n
;

152 
lua_Sèã
 *
L
;

153 
öôb
[
LUAL_BUFFERSIZE
];

154 } 
	tluaL_Buf„r
;

157 
	#luaL_addch¨
(
B
,
c
) \

158 (()((
B
)->
n
 < (B)->
size
 || 
	`luaL_¥ïbuffsize
((B), 1)), \

159 ((
B
)->
b
[(B)->
n
++] = (
c
)))

	)

161 
	#luaL_addsize
(
B
,
s
Ë((B)->
n
 +(s))

	)

163 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

164 
LUALIB_API
 *(
luaL_¥ïbuffsize
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

165 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

166 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

167 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

168 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

169 
LUALIB_API
 (
luaL_pushªsu…size
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

170 
LUALIB_API
 *(
luaL_bufföôsize
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

172 
	#luaL_¥ïbuf„r
(
B
Ë
	`luaL_¥ïbuffsize
(B, 
LUAL_BUFFERSIZE
)

	)

190 
	#LUA_FILEHANDLE
 "FILE*"

	)

193 
	sluaL_Såóm
 {

194 
FILE
 *
f
;

195 
lua_CFun˘i⁄
 
˛o£f
;

196 } 
	tluaL_Såóm
;

203 #i‡
	`deföed
(
LUA_COMPAT_MODULE
)

205 
LUALIB_API
 (
luaL_pushmoduÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

206 
sizehöt
);

207 
LUALIB_API
 (
luaL_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

208 c⁄° 
luaL_Reg
 *
l
, 
nup
);

210 
	#luaL_ªgi°î
(
L
,
n
,
l
Ë(
	`luaL_›ílib
(L,“),÷),0))

	)

222 #i‡!
	`deföed
(
lua_wrôe°rög
)

223 
	#lua_wrôe°rög
(
s
,
l
Ë
	`fwrôe
((s), (), (l), 
°dout
)

	)

227 #i‡!
	`deföed
(
lua_wrôñöe
)

228 
	#lua_wrôñöe
(Ë(
	`lua_wrôe°rög
("\n", 1), 
	`fÊush
(
°dout
))

	)

232 #i‡!
	`deföed
(
lua_wrôe°rögîr‹
)

233 
	#lua_wrôe°rögîr‹
(
s
,
p
) \

234 (
	`Ârötf
(
°dîr
, (
s
), (
p
)), 
	`fÊush
(°dîr))

	)

245 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

247 
	#luaL_checkunsig√d
(
L
,
a
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,a))

	)

248 
	#luaL_›tunsig√d
(
L
,
a
,
d
) \

249 ((
lua_Unsig√d
)
	`luaL_›töãgî
(
L
,
a
,(
lua_I¡egî
)(
d
)))

	)

251 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

252 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

254 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

255 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lbaselib.c

7 
	#lba£lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

24 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

25 
n
 = 
	`lua_gët›
(
L
);

26 
i
;

27 
	`lua_gëglobÆ
(
L
, "tostring");

28 
i
=1; i<=
n
; i++) {

29 c⁄° *
s
;

30 
size_t
 
l
;

31 
	`lua_pushvÆue
(
L
, -1);

32 
	`lua_pushvÆue
(
L
, 
i
);

33 
	`lua_ˇŒ
(
L
, 1, 1);

34 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

35 i‡(
s
 =
NULL
)

36  
	`luaL_îr‹
(
L
, "'tostring' mustÑeturná stringÅo 'print'");

37 i‡(
i
>1Ë
	`lua_wrôe°rög
("\t", 1);

38 
	`lua_wrôe°rög
(
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`lua_wrôñöe
();

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 c⁄° *
	$b_°r2öt
 (c⁄° *
s
, 
ba£
, 
lua_I¡egî
 *
≤
) {

49 
lua_Unsig√d
 
n
 = 0;

50 
√g
 = 0;

51 
s
 +
	`°r•n
(s, 
SPACECHARS
);

52 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

53 i‡(*
s
 == '+') s++;

54 i‡(!
	`iß um
(()*
s
))

55  
NULL
;

57 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

58 : (
	`touµî
(()*
s
) - 'A') + 10;

59 i‡(
digô
 >
ba£
Ë 
NULL
;

60 
n
 =Ç * 
ba£
 + 
digô
;

61 
s
++;

62 } 
	`iß um
(()*
s
));

63 
s
 +
	`°r•n
(s, 
SPACECHARS
);

64 *
≤
 = (
lua_I¡egî
)((
√g
Ë? (0u - 
n
) :Ç);

65  
s
;

66 
	}
}

69 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

70 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

71 
	`luaL_check™y
(
L
, 1);

72 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

73 
	`lua_£â›
(
L
, 1);

77 
size_t
 
l
;

78 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

79 i‡(
s
 !
NULL
 && 
	`lua_°rögt⁄umbî
(
L
, sË=
l
 + 1)

85 
size_t
 
l
;

86 c⁄° *
s
;

87 
lua_I¡egî
 
n
 = 0;

88 
lua_I¡egî
 
ba£
 = 
	`luaL_checköãgî
(
L
, 2);

89 
	`luaL_checkty≥
(
L
, 1, 
LUA_TSTRING
);

90 
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

91 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

92 i‡(
	`b_°r2öt
(
s
, ()
ba£
, &
n
Ë=†+ 
l
) {

93 
	`lua_pushöãgî
(
L
, 
n
);

97 
	`lua_pushnû
(
L
);

99 
	}
}

102 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

103 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 2, 1);

104 
	`lua_£â›
(
L
, 1);

105 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && 
Àvñ
 > 0) {

106 
	`luaL_whîe
(
L
, 
Àvñ
);

107 
	`lua_pushvÆue
(
L
, 1);

108 
	`lua_c⁄ˇt
(
L
, 2);

110  
	`lua_îr‹
(
L
);

111 
	}
}

114 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

115 
	`luaL_check™y
(
L
, 1);

116 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

117 
	`lua_pushnû
(
L
);

120 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

122 
	}
}

125 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

126 
t
 = 
	`lua_ty≥
(
L
, 2);

127 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

128 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

130 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__më©abÀ"Ë!
LUA_TNIL
)

131  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

132 
	`lua_£â›
(
L
, 2);

133 
	`lua_£tmë©abÀ
(
L
, 1);

135 
	}
}

138 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

139 
	`luaL_check™y
(
L
, 1);

140 
	`luaL_check™y
(
L
, 2);

141 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

143 
	}
}

146 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

147 
t
 = 
	`lua_ty≥
(
L
, 1);

148 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

150 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

152 
	}
}

155 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

156 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

157 
	`luaL_check™y
(
L
, 2);

158 
	`lua_£â›
(
L
, 2);

159 
	`lua_øwgë
(
L
, 1);

161 
	}
}

163 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

164 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

165 
	`luaL_check™y
(
L
, 2);

166 
	`luaL_check™y
(
L
, 3);

167 
	`lua_£â›
(
L
, 3);

168 
	`lua_øw£t
(
L
, 1);

170 
	}
}

173 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

174 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

176 "i§u¬ög", 
NULL
};

177 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

178 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

179 
LUA_GCISRUNNING
};

180 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

181 
ex
 = ()
	`luaL_›töãgî
(
L
, 2, 0);

182 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

183 
o
) {

184 
LUA_GCCOUNT
: {

185 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

186 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
 + (÷ua_Numbî)
b
/1024));

189 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

190 
	`lua_pushboﬁón
(
L
, 
ªs
);

194 
	`lua_pushöãgî
(
L
, 
ªs
);

198 
	}
}

201 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

202 
t
 = 
	`lua_ty≥
(
L
, 1);

203 
	`luaL_¨gcheck
(
L
, 
t
 !
LUA_TNONE
, 1, "valueÉxpected");

204 
	`lua_push°rög
(
L
, 
	`lua_ty≥«me
(L, 
t
));

206 
	}
}

209 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

210 
lua_CFun˘i⁄
 
ôî
) {

211 
	`luaL_check™y
(
L
, 1);

212 i‡(
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
Ë=
LUA_TNIL
) {

213 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

214 
	`lua_pushvÆue
(
L
, 1);

215 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

216 
	`lua_pushnû
(
L
);

219 
	`lua_pushvÆue
(
L
, 1);

220 
	`lua_ˇŒ
(
L
, 1, 3);

223 
	}
}

226 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

227 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

228 
	`lua_£â›
(
L
, 2);

229 i‡(
	`lua_√xt
(
L
, 1))

232 
	`lua_pushnû
(
L
);

235 
	}
}

238 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

239  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

240 
	}
}

246 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

247 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

248 
	`lua_pushöãgî
(
L
, 
i
);

249  (
	`lua_gëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

250 
	}
}

257 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

258 #i‡
	`deföed
(
LUA_COMPAT_IPAIRS
)

259  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ùaúßux
);

261 
	`luaL_check™y
(
L
, 1);

262 
	`lua_pushcfun˘i⁄
(
L
, 
ùaúßux
);

263 
	`lua_pushvÆue
(
L
, 1);

264 
	`lua_pushöãgî
(
L
, 0);

267 
	}
}

270 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

271 i‡(
°©us
 =
LUA_OK
) {

272 i‡(
ívidx
 != 0) {

273 
	`lua_pushvÆue
(
L
, 
ívidx
);

274 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

275 
	`lua_p›
(
L
, 1);

280 
	`lua_pushnû
(
L
);

281 
	`lua_ö£π
(
L
, -2);

284 
	}
}

287 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

288 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

289 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

290 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

291 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

292  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

293 
	}
}

308 
	#RESERVEDSLOT
 5

	)

317 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

318 ()(
ud
);

319 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

320 
	`lua_pushvÆue
(
L
, 1);

321 
	`lua_ˇŒ
(
L
, 0, 1);

322 i‡(
	`lua_i¢û
(
L
, -1)) {

323 
	`lua_p›
(
L
, 1);

324 *
size
 = 0;

325  
NULL
;

327 i‡(!
	`lua_is°rög
(
L
, -1))

328 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

329 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

330  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

331 
	}
}

334 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

335 
°©us
;

336 
size_t
 
l
;

337 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

338 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

339 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

340 i‡(
s
 !
NULL
) {

341 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

342 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

345 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

346 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

347 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

348 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

350  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

351 
	}
}

356 
	$dofûec⁄t
 (
lua_Sèã
 *
L
, 
d1
, 
lua_KC⁄ãxt
 
d2
) {

357 ()
d1
; ()
d2
;

358  
	`lua_gët›
(
L
) - 1;

359 
	}
}

362 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

363 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

364 
	`lua_£â›
(
L
, 1);

365 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

366  
	`lua_îr‹
(
L
);

367 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

368  
	`dofûec⁄t
(
L
, 0, 0);

369 
	}
}

372 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

373 i‡(
	`lua_toboﬁón
(
L
, 1))

374  
	`lua_gët›
(
L
);

376 
	`luaL_check™y
(
L
, 1);

377 
	`lua_ªmove
(
L
, 1);

378 
	`lua_pushlôîÆ
(
L
, "assertion failed!");

379 
	`lua_£â›
(
L
, 1);

380  
	`luaB_îr‹
(
L
);

382 
	}
}

385 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

386 
n
 = 
	`lua_gët›
(
L
);

387 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

388 
	`lua_pushöãgî
(
L
, 
n
-1);

392 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 1);

393 i‡(
i
 < 0Ëò
n
 + i;

394 i‡(
i
 > 
n
) i =Ç;

395 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

396  
n
 - ()
i
;

398 
	}
}

408 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
, 
lua_KC⁄ãxt
 
exåa
) {

409 i‡(
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

410 
	`lua_pushboﬁón
(
L
, 0);

411 
	`lua_pushvÆue
(
L
, -2);

415  
	`lua_gët›
(
L
Ë- ()
exåa
;

416 
	}
}

419 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

420 
°©us
;

421 
	`luaL_check™y
(
L
, 1);

422 
	`lua_pushboﬁón
(
L
, 1);

423 
	`lua_ö£π
(
L
, 1);

424 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
föishpˇŒ
);

425  
	`föishpˇŒ
(
L
, 
°©us
, 0);

426 
	}
}

434 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

435 
°©us
;

436 
n
 = 
	`lua_gët›
(
L
);

437 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

438 
	`lua_pushboﬁón
(
L
, 1);

439 
	`lua_pushvÆue
(
L
, 1);

440 
	`lua_rŸ©e
(
L
, 3, 2);

441 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 2, 2, 
föishpˇŒ
);

442  
	`föishpˇŒ
(
L
, 
°©us
, 2);

443 
	}
}

446 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

447 
	`luaL_check™y
(
L
, 1);

448 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

450 
	}
}

453 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

454 {"as£π", 
luaB_as£π
},

455 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

456 {"dofûe", 
luaB_dofûe
},

457 {"îr‹", 
luaB_îr‹
},

458 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

459 {"ùaús", 
luaB_ùaús
},

460 {"lﬂdfûe", 
luaB_lﬂdfûe
},

461 {"lﬂd", 
luaB_lﬂd
},

462 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

463 {"lﬂd°rög", 
luaB_lﬂd
},

465 {"√xt", 
luaB_√xt
},

466 {"∑ús", 
luaB_∑ús
},

467 {"pˇŒ", 
luaB_pˇŒ
},

468 {"¥öt", 
luaB_¥öt
},

469 {"øwequÆ", 
luaB_øwequÆ
},

470 {"øwÀn", 
luaB_øwÀn
},

471 {"øwgë", 
luaB_øwgë
},

472 {"øw£t", 
luaB_øw£t
},

473 {"£À˘", 
luaB_£À˘
},

474 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

475 {"t⁄umbî", 
luaB_t⁄umbî
},

476 {"to°rög", 
luaB_to°rög
},

477 {"ty≥", 
luaB_ty≥
},

478 {"xpˇŒ", 
luaB_xpˇŒ
},

480 {"_G", 
NULL
},

481 {"_VERSION", 
NULL
},

482 {
NULL
, NULL}

486 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

488 
	`lua_pushglobÆèbÀ
(
L
);

489 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

491 
	`lua_pushvÆue
(
L
, -1);

492 
	`lua_£tfõld
(
L
, -2, "_G");

494 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

495 
	`lua_£tfõld
(
L
, -2, "_VERSION");

497 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~"lua.h
"

15 
	~"œuxlib.h
"

16 
	~"luÆib.h
"

19 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

22 
	#pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

23 
	#checkunsig√d
(
L
,
i
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,i))

	)

27 #i‡!
deföed
(
LUA_NBITS
)

28 
	#LUA_NBITS
 32

	)

37 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

41 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

45 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

49 
lua_Unsig√d
 
	$™daux
 (
lua_Sèã
 *
L
) {

50 
i
, 
n
 = 
	`lua_gët›
(
L
);

51 
lua_Unsig√d
 
r
 = ~(lua_Unsigned)0;

52 
i
 = 1; i <
n
; i++)

53 
r
 &
	`checkunsig√d
(
L
, 
i
);

54  
	`åim
(
r
);

55 
	}
}

58 
	$b_™d
 (
lua_Sèã
 *
L
) {

59 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

60 
	`pushunsig√d
(
L
, 
r
);

62 
	}
}

65 
	$b_ã°
 (
lua_Sèã
 *
L
) {

66 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

67 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

69 
	}
}

72 
	$b_‹
 (
lua_Sèã
 *
L
) {

73 
i
, 
n
 = 
	`lua_gët›
(
L
);

74 
lua_Unsig√d
 
r
 = 0;

75 
i
 = 1; i <
n
; i++)

76 
r
 |
	`checkunsig√d
(
L
, 
i
);

77 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

79 
	}
}

82 
	$b_x‹
 (
lua_Sèã
 *
L
) {

83 
i
, 
n
 = 
	`lua_gët›
(
L
);

84 
lua_Unsig√d
 
r
 = 0;

85 
i
 = 1; i <
n
; i++)

86 
r
 ^
	`checkunsig√d
(
L
, 
i
);

87 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

89 
	}
}

92 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

93 
lua_Unsig√d
 
r
 = ~
	`checkunsig√d
(
L
, 1);

94 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

96 
	}
}

99 
	$b_shi·
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
r
, 
lua_I¡egî
 
i
) {

100 i‡(
i
 < 0) {

101 
i
 = -i;

102 
r
 = 
	`åim
(r);

103 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

104 
r
 >>
i
;

107 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

108 
r
 <<
i
;

109 
r
 = 
	`åim
(r);

111 
	`pushunsig√d
(
L
, 
r
);

113 
	}
}

116 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

117  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), 
	`luaL_checköãgî
(L, 2));

118 
	}
}

121 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

122  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), -
	`luaL_checköãgî
(L, 2));

123 
	}
}

126 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

127 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

128 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2);

129 i‡(
i
 < 0 || !(
r
 & ((
lua_Unsig√d
)1 << (
LUA_NBITS
 - 1))))

130  
	`b_shi·
(
L
, 
r
, -
i
);

132 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

134 
r
 = 
	`åim
(‘ >> 
i
Ë| ~—rim(~(
lua_Unsig√d
)0) >> i));

135 
	`pushunsig√d
(
L
, 
r
);

138 
	}
}

141 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
d
) {

142 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

143 
i
 = 
d
 & (
LUA_NBITS
 - 1);

144 
r
 = 
	`åim
(r);

145 i‡(
i
 != 0)

146 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

147 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

149 
	}
}

152 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

153  
	`b_rŸ
(
L
, 
	`luaL_checköãgî
(L, 2));

154 
	}
}

157 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

158  
	`b_rŸ
(
L
, -
	`luaL_checköãgî
(L, 2));

159 
	}
}

168 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

169 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 
Árg
);

170 
lua_I¡egî
 
w
 = 
	`luaL_›töãgî
(
L
, 
Árg
 + 1, 1);

171 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

172 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

173 i‡(
f
 + 
w
 > 
LUA_NBITS
)

174 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

175 *
width
 = ()
w
;

176  ()
f
;

177 
	}
}

180 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

181 
w
;

182 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

183 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

184 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

185 
	`pushunsig√d
(
L
, 
r
);

187 
	}
}

190 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

191 
w
;

192 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

193 
lua_Unsig√d
 
v
 = 
	`åim
(
	`checkunsig√d
(
L
, 2));

194 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

195 
lua_Unsig√d
 
m
 = 
	`mask
(
w
);

196 
r
 = (∏& ~(
m
 << 
f
)Ë| ((
v
 & m) << f);

197 
	`pushunsig√d
(
L
, 
r
);

199 
	}
}

202 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

203 {"¨shi·", 
b_¨shi·
},

204 {"b™d", 
b_™d
},

205 {"bnŸ", 
b_nŸ
},

206 {"b‹", 
b_‹
},

207 {"bx‹", 
b_x‹
},

208 {"bã°", 
b_ã°
},

209 {"exåa˘", 
b_exåa˘
},

210 {"ÃŸ©e", 
b_ÃŸ
},

211 {"lshi·", 
b_lshi·
},

212 {"ª∂a˚", 
b_ª∂a˚
},

213 {"ºŸ©e", 
b_ºŸ
},

214 {"rshi·", 
b_rshi·
},

215 {
NULL
, NULL}

220 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

221 
	`luaL_√wlib
(
L
, 
bôlib
);

223 
	}
}

229 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

230  
	`luaL_îr‹
(
L
, "library 'bit32' has been deprecated");

231 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lcode.c

7 
	#lcode_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<m©h.h
>

14 
	~<°dlib.h
>

16 
	~"lua.h
"

18 
	~"lcode.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"Õ¨£r.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"lvm.h
"

33 
	#MAXREGS
 255

	)

36 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

43 
	$t⁄umîÆ
(c⁄° 
expdesc
 *
e
, 
TVÆue
 *
v
) {

44 i‡(
	`hasjumps
(
e
))

46 
e
->
k
) {

47 
VKINT
:

48 i‡(
v
Ë
	`£tivÆue
(v, 
e
->
u
.
ivÆ
);

50 
VKFLT
:

51 i‡(
v
Ë
	`£tÊtvÆue
(v, 
e
->
u
.
nvÆ
);

55 
	}
}

64 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

65 
In°ru˘i⁄
 *
¥evious
;

66 
l
 = 
‰om
 + 
n
 - 1;

67 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

68 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

69 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

70 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

71 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

72 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

73 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

74 i‡(
p‰om
 < 
‰om
) from =Öfrom;

75 i‡(
∂
 > 
l
)Ü =Öl;

76 
	`SETARG_A
(*
¥evious
, 
‰om
);

77 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

82 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

83 
	}
}

90 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

91 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

92 i‡(
off£t
 =
NO_JUMP
)

93  
NO_JUMP
;

95  (
pc
+1)+
off£t
;

96 
	}
}

103 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

104 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

105 
off£t
 = 
de°
 - (
pc
 + 1);

106 
	`lua_as£π
(
de°
 !
NO_JUMP
);

107 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

108 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

109 
	`SETARG_sBx
(*
jmp
, 
off£t
);

110 
	}
}

116 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

117 i‡(
l2
 =
NO_JUMP
) ;

118 i‡(*
l1
 =
NO_JUMP
)

119 *
l1
 = 
l2
;

121 
li°
 = *
l1
;

122 
√xt
;

123 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

124 
li°
 = 
√xt
;

125 
	`fixjump
(
fs
, 
li°
, 
l2
);

127 
	}
}

136 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

137 
jpc
 = 
fs
->jpc;

138 
j
;

139 
fs
->
jpc
 = 
NO_JUMP
;

140 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

141 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

142  
j
;

143 
	}
}

149 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

150 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

151 
	}
}

158 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

159 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

160  
	`luaK_jump
(
fs
);

161 
	}
}

168 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

169 
fs
->
œ°èrgë
 = fs->
pc
;

170  
fs
->
pc
;

171 
	}
}

179 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

180 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

181 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

182  
pi
-1;

184  
pi
;

185 
	}
}

195 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

196 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

197 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

199 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

200 
	`SETARG_A
(*
i
, 
ªg
);

204 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

207 
	}
}

213 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

214 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

215 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

216 
	}
}

224 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

225 
dèrgë
) {

226 
li°
 !
NO_JUMP
) {

227 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

228 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

229 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

231 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

232 
li°
 = 
√xt
;

234 
	}
}

242 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

243 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

244 
fs
->
jpc
 = 
NO_JUMP
;

245 
	}
}

252 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

253 
	`luaK_gëœbñ
(
fs
);

254 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

255 
	}
}

263 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

264 i‡(
èrgë
 =
fs
->
pc
)

265 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

267 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

268 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

270 
	}
}

278 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

279 
Àvñ
++;

280 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

281 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

282 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

283 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

284 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

286 
	}
}

293 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

294 
PrŸo
 *
f
 = 
fs
->f;

295 
	`disch¨gejpc
(
fs
);

297 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

298 
MAX_INT
, "opcodes");

299 
f
->
code
[
fs
->
pc
] = 
i
;

301 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

302 
MAX_INT
, "opcodes");

303 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

304  
fs
->
pc
++;

305 
	}
}

312 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

313 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

314 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

315 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

316 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

317  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

318 
	}
}

324 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

325 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

326 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

327 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

328  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

329 
	}
}

335 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

336 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

337  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

338 
	}
}

346 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

347 i‡(
k
 <
MAXARG_Bx
)

348  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

350 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

351 
	`codìxåØrg
(
fs
, 
k
);

352  
p
;

354 
	}
}

361 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

362 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

363 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

364 i‡(
√w°ack
 >
MAXREGS
)

365 
	`luaX_sy¡axîr‹
(
fs
->
ls
,

367 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

369 
	}
}

375 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

376 
	`luaK_check°ack
(
fs
, 
n
);

377 
fs
->
‰ìªg
 +
n
;

378 
	}
}

386 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

387 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

388 
fs
->
‰ìªg
--;

389 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

391 
	}
}

397 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

398 i‡(
e
->
k
 =
VNONRELOC
)

399 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

400 
	}
}

407 
	$‰ìexps
 (
FuncSèã
 *
fs
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

408 
r1
 = (
e1
->
k
 =
VNONRELOC
Ë?É1->
u
.
öfo
 : -1;

409 
r2
 = (
e2
->
k
 =
VNONRELOC
Ë?É2->
u
.
öfo
 : -1;

410 i‡(
r1
 > 
r2
) {

411 
	`‰ìªg
(
fs
, 
r1
);

412 
	`‰ìªg
(
fs
, 
r2
);

415 
	`‰ìªg
(
fs
, 
r2
);

416 
	`‰ìªg
(
fs
, 
r1
);

418 
	}
}

428 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

429 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

430 
PrŸo
 *
f
 = 
fs
->f;

431 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
ls
->
h
, 
key
);

432 
k
, 
ﬁdsize
;

433 i‡(
	`âisöãgî
(
idx
)) {

434 
k
 = 
	`ˇ°_öt
(
	`ivÆue
(
idx
));

436 i‡(
k
 < 
fs
->
nk
 && 
	`ây≥
(&
f
->k[k]Ë=ây≥(
v
) &&

437 
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

438  
k
;

441 
ﬁdsize
 = 
f
->
sizek
;

442 
k
 = 
fs
->
nk
;

445 
	`£tivÆue
(
idx
, 
k
);

446 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

447 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

448 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

449 
fs
->
nk
++;

450 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

451  
k
;

452 
	}
}

458 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

459 
TVÆue
 
o
;

460 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

461  
	`addk
(
fs
, &
o
, &o);

462 
	}
}

471 
	$luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
) {

472 
TVÆue
 
k
, 
o
;

473 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, ca°(
size_t
, 
n
)));

474 
	`£tivÆue
(&
o
, 
n
);

475  
	`addk
(
fs
, &
k
, &
o
);

476 
	}
}

481 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

482 
TVÆue
 
o
;

483 
	`£tÊtvÆue
(&
o
, 
r
);

484  
	`addk
(
fs
, &
o
, &o);

485 
	}
}

491 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

492 
TVÆue
 
o
;

493 
	`£tbvÆue
(&
o
, 
b
);

494  
	`addk
(
fs
, &
o
, &o);

495 
	}
}

501 
	$nûK
 (
FuncSèã
 *
fs
) {

502 
TVÆue
 
k
, 
v
;

503 
	`£äûvÆue
(&
v
);

505 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->ls->
h
);

506  
	`addk
(
fs
, &
k
, &
v
);

507 
	}
}

515 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

516 i‡(
e
->
k
 =
VCALL
) {

517 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 
ƒesu…s
 + 1);

519 i‡(
e
->
k
 =
VVARARG
) {

520 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

521 
	`SETARG_B
(*
pc
, 
ƒesu…s
 + 1);

522 
	`SETARG_A
(*
pc
, 
fs
->
‰ìªg
);

523 
	`luaK_ª£rvîegs
(
fs
, 1);

525 
	`lua_as£π
(
ƒesu…s
 =
LUA_MULTRET
);

526 
	}
}

539 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

540 i‡(
e
->
k
 =
VCALL
) {

542 
	`lua_as£π
(
	`GETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
)) == 2);

543 
e
->
k
 = 
VNONRELOC
;

544 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,É));

546 i‡(
e
->
k
 =
VVARARG
) {

547 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 2);

548 
e
->
k
 = 
VRELOCABLE
;

550 
	}
}

556 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

557 
e
->
k
) {

558 
VLOCAL
: {

559 
e
->
k
 = 
VNONRELOC
;

562 
VUPVAL
: {

563 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

564 
e
->
k
 = 
VRELOCABLE
;

567 
VINDEXED
: {

568 
OpCode
 
›
;

569 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

570 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

571 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

572 
›
 = 
OP_GETTABLE
;

575 
	`lua_as£π
(
e
->
u
.
öd
.
vt
 =
VUPVAL
);

576 
›
 = 
OP_GETTABUP
;

578 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

579 
e
->
k
 = 
VRELOCABLE
;

582 
VVARARG
: 
VCALL
: {

583 
	`luaK_£t⁄îë
(
fs
, 
e
);

588 
	}
}

595 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

596 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

597 
e
->
k
) {

598 
VNIL
: {

599 
	`luaK_nû
(
fs
, 
ªg
, 1);

602 
VFALSE
: 
VTRUE
: {

603 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

606 
VK
: {

607 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

610 
VKFLT
: {

611 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

614 
VKINT
: {

615 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_ötK
(fs, 
e
->
u
.
ivÆ
));

618 
VRELOCABLE
: {

619 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

620 
	`SETARG_A
(*
pc
, 
ªg
);

623 
VNONRELOC
: {

624 i‡(
ªg
 !
e
->
u
.
öfo
)

625 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

629 
	`lua_as£π
(
e
->
k
 =
VJMP
);

633 
e
->
u
.
öfo
 = 
ªg
;

634 
e
->
k
 = 
VNONRELOC
;

635 
	}
}

641 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

642 i‡(
e
->
k
 !
VNONRELOC
) {

643 
	`luaK_ª£rvîegs
(
fs
, 1);

644 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

646 
	}
}

649 
	$code_lﬂdboﬁ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

650 
	`luaK_gëœbñ
(
fs
);

651  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

652 
	}
}

659 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

660 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

661 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

662 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

665 
	}
}

675 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

676 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

677 i‡(
e
->
k
 =
VJMP
)

678 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

679 i‡(
	`hasjumps
(
e
)) {

680 
föÆ
;

681 
p_f
 = 
NO_JUMP
;

682 
p_t
 = 
NO_JUMP
;

683 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

684 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

685 
p_f
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 0, 1);

686 
p_t
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 1, 0);

687 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

689 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

690 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

691 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

693 
e
->
f
 =É->
t
 = 
NO_JUMP
;

694 
e
->
u
.
öfo
 = 
ªg
;

695 
e
->
k
 = 
VNONRELOC
;

696 
	}
}

703 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

704 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

705 
	`‰ìexp
(
fs
, 
e
);

706 
	`luaK_ª£rvîegs
(
fs
, 1);

707 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

708 
	}
}

715 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

716 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

717 i‡(
e
->
k
 =
VNONRELOC
) {

718 i‡(!
	`hasjumps
(
e
))

719  
e
->
u
.
öfo
;

720 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

721 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

722  
e
->
u
.
öfo
;

725 
	`luaK_exp2√xåeg
(
fs
, 
e
);

726  
e
->
u
.
öfo
;

727 
	}
}

734 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

735 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

736 
	`luaK_exp2™yªg
(
fs
, 
e
);

737 
	}
}

744 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

745 i‡(
	`hasjumps
(
e
))

746 
	`luaK_exp2™yªg
(
fs
, 
e
);

748 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

749 
	}
}

758 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

759 
	`luaK_exp2vÆ
(
fs
, 
e
);

760 
e
->
k
) {

761 
VTRUE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 1); 
vk
;

762 
VFALSE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 0); 
vk
;

763 
VNIL
: 
e
->
u
.
öfo
 = 
	`nûK
(
fs
); 
vk
;

764 
VKINT
: 
e
->
u
.
öfo
 = 
	`luaK_ötK
(
fs
,É->u.
ivÆ
); 
vk
;

765 
VKFLT
: 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
); 
vk
;

766 
VK
:

767 
vk
:

768 
e
->
k
 = 
VK
;

769 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

770  
	`RKASK
(
e
->
u
.
öfo
);

775  
	`luaK_exp2™yªg
(
fs
, 
e
);

776 
	}
}

782 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

783 
v¨
->
k
) {

784 
VLOCAL
: {

785 
	`‰ìexp
(
fs
, 
ex
);

786 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

789 
VUPVAL
: {

790 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

791 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

794 
VINDEXED
: {

795 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

796 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

797 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

800 : 
	`lua_as£π
(0);

802 
	`‰ìexp
(
fs
, 
ex
);

803 
	}
}

809 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

810 
îeg
;

811 
	`luaK_exp2™yªg
(
fs
, 
e
);

812 
îeg
 = 
e
->
u
.
öfo
;

813 
	`‰ìexp
(
fs
, 
e
);

814 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

815 
e
->
k
 = 
VNONRELOC
;

816 
	`luaK_ª£rvîegs
(
fs
, 2);

817 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

818 
	`‰ìexp
(
fs
, 
key
);

819 
	}
}

825 
	$√g©ec⁄dôi⁄
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

826 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

827 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

828 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

829 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

830 
	}
}

839 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

840 i‡(
e
->
k
 =
VRELOCABLE
) {

841 
In°ru˘i⁄
 
õ
 = 
	`gëö°ru˘i⁄
(
fs
, 
e
);

842 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

843 
fs
->
pc
--;

844  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

848 
	`disch¨ge2™yªg
(
fs
, 
e
);

849 
	`‰ìexp
(
fs
, 
e
);

850  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

851 
	}
}

857 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

858 
pc
;

859 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

860 
e
->
k
) {

861 
VJMP
: {

862 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

863 
pc
 = 
e
->
u
.
öfo
;

866 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

867 
pc
 = 
NO_JUMP
;

871 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

875 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

876 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

877 
e
->
t
 = 
NO_JUMP
;

878 
	}
}

884 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

885 
pc
;

886 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

887 
e
->
k
) {

888 
VJMP
: {

889 
pc
 = 
e
->
u
.
öfo
;

892 
VNIL
: 
VFALSE
: {

893 
pc
 = 
NO_JUMP
;

897 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

901 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

902 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

903 
e
->
f
 = 
NO_JUMP
;

904 
	}
}

910 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

911 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

912 
e
->
k
) {

913 
VNIL
: 
VFALSE
: {

914 
e
->
k
 = 
VTRUE
;

917 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

918 
e
->
k
 = 
VFALSE
;

921 
VJMP
: {

922 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

925 
VRELOCABLE
:

926 
VNONRELOC
: {

927 
	`disch¨ge2™yªg
(
fs
, 
e
);

928 
	`‰ìexp
(
fs
, 
e
);

929 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

930 
e
->
k
 = 
VRELOCABLE
;

933 : 
	`lua_as£π
(0);

936 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

937 
	`ªmovevÆues
(
fs
, 
e
->
f
);

938 
	`ªmovevÆues
(
fs
, 
e
->
t
);

939 
	}
}

946 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

947 
	`lua_as£π
(!
	`hasjumps
(
t
Ë&& (
	`vkisöªg
—->
k
Ë||Å->k =
VUPVAL
));

948 
t
->
u
.
öd
.àt->u.
öfo
;

949 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

950 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
Ë? VUPVAL : 
VLOCAL
;

951 
t
->
k
 = 
VINDEXED
;

952 
	}
}

960 
	$vÆid›
 (
›
, 
TVÆue
 *
v1
, TVÆuê*
v2
) {

961 
›
) {

962 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

963 
LUA_OPSHL
: 
LUA_OPSHR
: 
LUA_OPBNOT
: {

964 
lua_I¡egî
 
i
;

965  (
	`toöãgî
(
v1
, &
i
Ë&&Åoöãgî(
v2
, &i));

967 
LUA_OPDIV
: 
LUA_OPIDIV
: 
LUA_OPMOD
:

968  (
	`nvÆue
(
v2
) != 0);

971 
	}
}

978 
	$c⁄°fﬁdög
 (
FuncSèã
 *
fs
, 
›
, 
expdesc
 *
e1
,

979 c⁄° 
expdesc
 *
e2
) {

980 
TVÆue
 
v1
, 
v2
, 
ªs
;

981 i‡(!
	`t⁄umîÆ
(
e1
, &
v1
Ë|| !t⁄umîÆ(
e2
, &
v2
Ë|| !
	`vÆid›
(
›
, &v1, &v2))

983 
	`luaO_¨ôh
(
fs
->
ls
->
L
, 
›
, &
v1
, &
v2
, &
ªs
);

984 i‡(
	`âisöãgî
(&
ªs
)) {

985 
e1
->
k
 = 
VKINT
;

986 
e1
->
u
.
ivÆ
 = 
	`ivÆue
(&
ªs
);

989 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(&
ªs
);

990 i‡(
	`luai_numi¢™
(
n
) ||Ç == 0)

992 
e1
->
k
 = 
VKFLT
;

993 
e1
->
u
.
nvÆ
 = 
n
;

996 
	}
}

1004 
	$codeu√xpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
expdesc
 *
e
, 
löe
) {

1005 
r
 = 
	`luaK_exp2™yªg
(
fs
, 
e
);

1006 
	`‰ìexp
(
fs
, 
e
);

1007 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
r
, 0);

1008 
e
->
k
 = 
VRELOCABLE
;

1009 
	`luaK_fixlöe
(
fs
, 
löe
);

1010 
	}
}

1022 
	$codeböexpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

1023 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1024 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1025 
rk1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

1026 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1027 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
rk1
, 
rk2
);

1028 
e1
->
k
 = 
VRELOCABLE
;

1029 
	`luaK_fixlöe
(
fs
, 
löe
);

1030 
	}
}

1037 
	$codecomp
 (
FuncSèã
 *
fs
, 
BöO¥
 
›r
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

1038 
rk1
 = (
e1
->
k
 =
VK
Ë? 
	`RKASK
”1->
u
.
öfo
)

1039 : 
	`check_exp
(
e1
->
k
 =
VNONRELOC
,É1->
u
.
öfo
);

1040 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1041 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1042 
›r
) {

1043 
OPR_NE
: {

1044 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
OP_EQ
, 0, 
rk1
, 
rk2
);

1047 
OPR_GT
: 
OPR_GE
: {

1049 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_NE
Ë+ 
OP_EQ
);

1050 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk2
, 
rk1
);

1054 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_EQ
Ë+ 
OP_EQ
);

1055 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk1
, 
rk2
);

1059 
e1
->
k
 = 
VJMP
;

1060 
	}
}

1066 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

1067 c⁄° 
expdesc
 
ef
 = {
VKINT
, {0}, 
NO_JUMP
, NO_JUMP};

1068 
›
) {

1069 
OPR_MINUS
: 
OPR_BNOT
:

1070 i‡(
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPUNM
, 
e
, &
ef
))

1073 
OPR_LEN
:

1074 
	`codeu√xpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_UNM
), 
e
, 
löe
);

1076 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

1077 : 
	`lua_as£π
(0);

1079 
	}
}

1086 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

1087 
›
) {

1088 
OPR_AND
: {

1089 
	`luaK_goi·rue
(
fs
, 
v
);

1092 
OPR_OR
: {

1093 
	`luaK_goifÁl£
(
fs
, 
v
);

1096 
OPR_CONCAT
: {

1097 
	`luaK_exp2√xåeg
(
fs
, 
v
);

1100 
OPR_ADD
: 
OPR_SUB
:

1101 
OPR_MUL
: 
OPR_DIV
: 
OPR_IDIV
:

1102 
OPR_MOD
: 
OPR_POW
:

1103 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1104 
OPR_SHL
: 
OPR_SHR
: {

1105 i‡(!
	`t⁄umîÆ
(
v
, 
NULL
))

1106 
	`luaK_exp2RK
(
fs
, 
v
);

1111 
	`luaK_exp2RK
(
fs
, 
v
);

1115 
	}
}

1124 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

1125 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1126 
›
) {

1127 
OPR_AND
: {

1128 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

1129 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1130 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

1131 *
e1
 = *
e2
;

1134 
OPR_OR
: {

1135 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

1136 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1137 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

1138 *
e1
 = *
e2
;

1141 
OPR_CONCAT
: {

1142 
	`luaK_exp2vÆ
(
fs
, 
e2
);

1143 i‡(
e2
->
k
 =
VRELOCABLE
 &&

1144 
	`GET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
, 
e2
)Ë=
OP_CONCAT
) {

1145 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
))-1);

1146 
	`‰ìexp
(
fs
, 
e1
);

1147 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

1148 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

1151 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

1152 
	`codeböexpvÆ
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

1156 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

1157 
OPR_IDIV
: 
OPR_MOD
: 
OPR_POW
:

1158 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1159 
OPR_SHL
: 
OPR_SHR
: {

1160 i‡(!
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPADD
, 
e1
, 
e2
))

1161 
	`codeböexpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_ADD
), 
e1
, 
e2
, 
löe
);

1164 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
:

1165 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

1166 
	`codecomp
(
fs
, 
›
, 
e1
, 
e2
);

1169 : 
	`lua_as£π
(0);

1171 
	}
}

1177 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

1178 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

1179 
	}
}

1189 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

1190 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

1191 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

1192 
	`lua_as£π
(
to°‹e
 !0 &&Åo°‹ê<
LFIELDS_PER_FLUSH
);

1193 i‡(
c
 <
MAXARG_C
)

1194 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

1195 i‡(
c
 <
MAXARG_Ax
) {

1196 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

1197 
	`codìxåØrg
(
fs
, 
c
);

1200 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

1201 
fs
->
‰ìªg
 = 
ba£
 + 1;

1202 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lcode.h

7 #i‚de‡
lcode_h


8 
	#lcode_h


	)

10 
	~"Œex.h
"

11 
	~"lobje˘.h
"

12 
	~"l›codes.h
"

13 
	~"Õ¨£r.h
"

20 
	#NO_JUMP
 (-1)

	)

26 
	eBöO¥
 {

27 
	mOPR_ADD
, 
	mOPR_SUB
, 
	mOPR_MUL
, 
	mOPR_MOD
, 
	mOPR_POW
,

28 
	mOPR_DIV
,

29 
	mOPR_IDIV
,

30 
	mOPR_BAND
, 
	mOPR_BOR
, 
	mOPR_BXOR
,

31 
	mOPR_SHL
, 
	mOPR_SHR
,

32 
	mOPR_CONCAT
,

33 
	mOPR_EQ
, 
	mOPR_LT
, 
	mOPR_LE
,

34 
	mOPR_NE
, 
	mOPR_GT
, 
	mOPR_GE
,

35 
	mOPR_AND
, 
	mOPR_OR
,

36 
	mOPR_NOBINOPR


37 } 
	tBöO¥
;

40 
	eUnO¥
 { 
	mOPR_MINUS
, 
	mOPR_BNOT
, 
	mOPR_NOT
, 
	mOPR_LEN
, 
	mOPR_NOUNOPR
 } 
	tUnO¥
;

44 
	#gëö°ru˘i⁄
(
fs
,
e
Ë((fs)->
f
->
code
[”)->
u
.
öfo
])

	)

46 
	#luaK_codeAsBx
(
fs
,
o
,
A
,
sBx
Ë
	`luaK_codeABx
(fs,o,A,(sBx)+
MAXARG_sBx
)

	)

48 
	#luaK_£tmu…ªt
(
fs
,
e
Ë
	`luaK_£åëu∫s
(fs,É, 
LUA_MULTRET
)

	)

50 
	#luaK_jum±o
(
fs
,
t
Ë
	`luaK_∑tchli°
(fs, 
	`luaK_jump
(fs),Å)

	)

52 
LUAI_FUNC
 
luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
Bx
);

53 
LUAI_FUNC
 
luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
B
, 
C
);

54 
LUAI_FUNC
 
luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
);

55 
LUAI_FUNC
 
luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
);

56 
LUAI_FUNC
 
luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
);

57 
LUAI_FUNC
 
luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
);

58 
LUAI_FUNC
 
luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
);

59 
LUAI_FUNC
 
luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
);

60 
LUAI_FUNC
 
luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
);

61 
LUAI_FUNC
 
luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

62 
LUAI_FUNC
 
luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

63 
LUAI_FUNC
 
luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

64 
LUAI_FUNC
 
luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

65 
LUAI_FUNC
 
luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

66 
LUAI_FUNC
 
luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

67 
LUAI_FUNC
 
luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
);

68 
LUAI_FUNC
 
luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
);

69 
LUAI_FUNC
 
luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

70 
LUAI_FUNC
 
luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

71 
LUAI_FUNC
 
luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
e
);

72 
LUAI_FUNC
 
luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
);

73 
LUAI_FUNC
 
luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

74 
LUAI_FUNC
 
luaK_jump
 (
FuncSèã
 *
fs
);

75 
LUAI_FUNC
 
luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
);

76 
LUAI_FUNC
 
luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
);

77 
LUAI_FUNC
 
luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
);

78 
LUAI_FUNC
 
luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
);

79 
LUAI_FUNC
 
luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
);

80 
LUAI_FUNC
 
luaK_gëœbñ
 (
FuncSèã
 *
fs
);

81 
LUAI_FUNC
 
luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
v
, 
löe
);

82 
LUAI_FUNC
 
luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
);

83 
LUAI_FUNC
 
luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v1
,

84 
expdesc
 *
v2
, 
löe
);

85 
LUAI_FUNC
 
luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lcorolib.c

7 
	#lc‹ﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

15 
	~"lua.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

21 
lua_Sèã
 *
	$gëco
 (
lua_Sèã
 *
L
) {

22 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

23 
	`luaL_¨gcheck
(
L
, 
co
, 1, "threadÉxpected");

24  
co
;

25 
	}
}

28 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

29 
°©us
;

30 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

31 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

34 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

35 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

38 
	`lua_xmove
(
L
, 
co
, 
«rg
);

39 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

40 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

41 
ƒes
 = 
	`lua_gët›
(
co
);

42 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

43 
	`lua_p›
(
co
, 
ƒes
);

44 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

47 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

48  
ƒes
;

51 
	`lua_xmove
(
co
, 
L
, 1);

54 
	}
}

57 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

58 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

59 
r
;

60 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

61 i‡(
r
 < 0) {

62 
	`lua_pushboﬁón
(
L
, 0);

63 
	`lua_ö£π
(
L
, -2);

67 
	`lua_pushboﬁón
(
L
, 1);

68 
	`lua_ö£π
(
L
, -(
r
 + 1));

69  
r
 + 1;

71 
	}
}

74 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

75 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

76 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

77 i‡(
r
 < 0) {

78 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
) {

79 
	`luaL_whîe
(
L
, 1);

80 
	`lua_ö£π
(
L
, -2);

81 
	`lua_c⁄ˇt
(
L
, 2);

83  
	`lua_îr‹
(
L
);

85  
r
;

86 
	}
}

89 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

90 
lua_Sèã
 *
NL
;

91 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

92 
NL
 = 
	`lua_√wthªad
(
L
);

93 
	`lua_pushvÆue
(
L
, 1);

94 
	`lua_xmove
(
L
, 
NL
, 1);

96 
	}
}

99 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

100 
	`luaB_co¸óã
(
L
);

101 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

103 
	}
}

106 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

107  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

108 
	}
}

111 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

112 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

113 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

115 
	`lua_°©us
(
co
)) {

116 
LUA_YIELD
:

117 
	`lua_pushlôîÆ
(
L
, "suspended");

119 
LUA_OK
: {

120 
lua_Debug
 
¨
;

121 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

122 
	`lua_pushlôîÆ
(
L
, "normal");

123 i‡(
	`lua_gët›
(
co
) == 0)

124 
	`lua_pushlôîÆ
(
L
, "dead");

126 
	`lua_pushlôîÆ
(
L
, "suspended");

130 
	`lua_pushlôîÆ
(
L
, "dead");

135 
	}
}

138 
	$luaB_yõldabÀ
 (
lua_Sèã
 *
L
) {

139 
	`lua_pushboﬁón
(
L
, 
	`lua_isyõldabÀ
(L));

141 
	}
}

144 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

145 
ismaö
 = 
	`lua_pushthªad
(
L
);

146 
	`lua_pushboﬁón
(
L
, 
ismaö
);

148 
	}
}

151 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

152 {"¸óã", 
luaB_co¸óã
},

153 {"ªsume", 
luaB_c‹esume
},

154 {"ru¬ög", 
luaB_c‹u¬ög
},

155 {"°©us", 
luaB_co°©us
},

156 {"wøp", 
luaB_cowøp
},

157 {"yõld", 
luaB_yõld
},

158 {"isyõldabÀ", 
luaB_yõldabÀ
},

159 {
NULL
, NULL}

164 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

165 
	`luaL_√wlib
(
L
, 
co_funcs
);

167 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lctype.c

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~"l˘y≥.h
"

15 #i‡!
LUA_USE_CTYPE


17 
	~<limôs.h
>

19 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@/home/czl/Workspace/lua/lua-5.3.5/src/lctype.h

7 #i‚de‡
l˘y≥_h


8 
	#l˘y≥_h


	)

10 
	~"lua.h
"

19 #i‡!
deföed
(
LUA_USE_CTYPE
)

23 
	#LUA_USE_CTYPE
 0

	)

26 
	#LUA_USE_CTYPE
 1

	)

32 #i‡!
LUA_USE_CTYPE


34 
	~<limôs.h
>

36 
	~"Œimôs.h
"

39 
	#ALPHABIT
 0

	)

40 
	#DIGITBIT
 1

	)

41 
	#PRINTBIT
 2

	)

42 
	#SPACEBIT
 3

	)

43 
	#XDIGITBIT
 4

	)

46 
	#MASK
(
B
Ë(1 << (B))

	)

52 
	#ã°¥›
(
c
,
p
Ë(
luai_˘y≥_
[(c)+1] & (p))

	)

57 
	#li¶Æpha
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
ALPHABIT
))

	)

58 
	#li¶Ænum
(
c
Ë
	`ã°¥›
(c, (
	`MASK
(
ALPHABIT
Ë| MASK(
DIGITBIT
)))

	)

59 
	#lisdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
DIGITBIT
))

	)

60 
	#lis•a˚
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
SPACEBIT
))

	)

61 
	#li•röt
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
PRINTBIT
))

	)

62 
	#lisxdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
XDIGITBIT
))

	)

67 
	#…ﬁowî
(
c
Ë((cË| ('A' ^ 'a'))

	)

71 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2];

80 
	~<˘y≥.h
>

83 
	#li¶Æpha
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

84 
	#li¶Ænum
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

85 
	#lisdigô
(
c
Ë(
	`isdigô
(c))

	)

86 
	#lis•a˚
(
c
Ë(
	`is•a˚
(c))

	)

87 
	#li•röt
(
c
Ë(
	`i•röt
(c))

	)

88 
	#lisxdigô
(
c
Ë(
	`isxdigô
(c))

	)

90 
	#…ﬁowî
(
c
Ë(
	`tﬁowî
(c))

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldblib.c

7 
	#ldblib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 c⁄° 
	gHOOKKEY
 = 0;

35 
	$check°ack
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, 
n
) {

36 i‡(
L
 !
L1
 && !
	`lua_check°ack
(L1, 
n
))

37 
	`luaL_îr‹
(
L
, "stack overflow");

38 
	}
}

41 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

42 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

44 
	}
}

47 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

48 
	`luaL_check™y
(
L
, 1);

49 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

50 
	`lua_pushnû
(
L
);

53 
	}
}

56 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

57 
t
 = 
	`lua_ty≥
(
L
, 2);

58 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

60 
	`lua_£â›
(
L
, 2);

61 
	`lua_£tmë©abÀ
(
L
, 1);

63 
	}
}

66 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

67 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

68 
	`lua_pushnû
(
L
);

70 
	`lua_gëu£rvÆue
(
L
, 1);

72 
	}
}

75 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

76 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

77 
	`luaL_check™y
(
L
, 2);

78 
	`lua_£â›
(
L
, 2);

79 
	`lua_£tu£rvÆue
(
L
, 1);

81 
	}
}

90 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

91 i‡(
	`lua_i°hªad
(
L
, 1)) {

92 *
¨g
 = 1;

93  
	`lua_tŸhªad
(
L
, 1);

96 *
¨g
 = 0;

97  
L
;

99 
	}
}

107 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
k
, c⁄° *
v
) {

108 
	`lua_push°rög
(
L
, 
v
);

109 
	`lua_£tfõld
(
L
, -2, 
k
);

110 
	}
}

112 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

113 
	`lua_pushöãgî
(
L
, 
v
);

114 
	`lua_£tfõld
(
L
, -2, 
k
);

115 
	}
}

117 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

118 
	`lua_pushboﬁón
(
L
, 
v
);

119 
	`lua_£tfõld
(
L
, -2, 
k
);

120 
	}
}

130 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

131 i‡(
L
 =
L1
)

132 
	`lua_rŸ©e
(
L
, -2, 1);

134 
	`lua_xmove
(
L1
, 
L
, 1);

135 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

136 
	}
}

145 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

146 
lua_Debug
 
¨
;

147 
¨g
;

148 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

149 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

150 
	`check°ack
(
L
, 
L1
, 3);

151 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

152 
›ti⁄s
 = 
	`lua_pushf°rög
(
L
, ">%s", options);

153 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

154 
	`lua_xmove
(
L
, 
L1
, 1);

157 i‡(!
	`lua_gë°ack
(
L1
, ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1), &
¨
)) {

158 
	`lua_pushnû
(
L
);

162 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

163  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

164 
	`lua_√wèbÀ
(
L
);

165 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

166 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

167 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

168 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

169 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

170 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

172 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

173 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

174 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

175 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

176 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

177 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

179 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

180 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

181 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

183 i‡(
	`°rchr
(
›ti⁄s
, 't'))

184 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

185 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

186 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

187 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

188 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

190 
	}
}

193 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

194 
¨g
;

195 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

196 
lua_Debug
 
¨
;

197 c⁄° *
«me
;

198 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

199 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

200 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

201 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

205 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

206 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

207  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

208 
	`check°ack
(
L
, 
L1
, 1);

209 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

210 i‡(
«me
) {

211 
	`lua_xmove
(
L1
, 
L
, 1);

212 
	`lua_push°rög
(
L
, 
«me
);

213 
	`lua_rŸ©e
(
L
, -2, 1);

217 
	`lua_pushnû
(
L
);

221 
	}
}

224 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

225 
¨g
;

226 c⁄° *
«me
;

227 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

228 
lua_Debug
 
¨
;

229 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

230 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

231 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

232  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

233 
	`luaL_check™y
(
L
, 
¨g
+3);

234 
	`lua_£â›
(
L
, 
¨g
+3);

235 
	`check°ack
(
L
, 
L1
, 1);

236 
	`lua_xmove
(
L
, 
L1
, 1);

237 
«me
 = 
	`lua_£éoˇl
(
L1
, &
¨
, 
nv¨
);

238 i‡(
«me
 =
NULL
)

239 
	`lua_p›
(
L1
, 1);

240 
	`lua_push°rög
(
L
, 
«me
);

242 
	}
}

248 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

249 c⁄° *
«me
;

250 
n
 = ()
	`luaL_checköãgî
(
L
, 2);

251 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

252 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

253 i‡(
«me
 =
NULL
)  0;

254 
	`lua_push°rög
(
L
, 
«me
);

255 
	`lua_ö£π
(
L
, -(
gë
+1));

256  
gë
 + 1;

257 
	}
}

260 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

261  
	`auxupvÆue
(
L
, 1);

262 
	}
}

265 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

266 
	`luaL_check™y
(
L
, 3);

267  
	`auxupvÆue
(
L
, 0);

268 
	}
}

275 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

276 
nup
 = ()
	`luaL_checköãgî
(
L
, 
¨gnup
);

277 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

278 
	`luaL_¨gcheck
(
L
, (
	`lua_gëupvÆue
(L, 
¨gf
, 
nup
Ë!
NULL
), 
¨gnup
,

280  
nup
;

281 
	}
}

284 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

285 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

286 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

288 
	}
}

291 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

292 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

293 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

294 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

295 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

296 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

298 
	}
}

305 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

306 c⁄° *c⁄° 
hook«mes
[] =

308 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

309 
	`lua_pushthªad
(
L
);

310 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TFUNCTION
) {

311 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

312 i‡(
¨
->
cuºíéöe
 >= 0)

313 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

314 
	`lua_pushnû
(
L
);

315 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

316 
	`lua_ˇŒ
(
L
, 2, 0);

318 
	}
}

324 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

325 
mask
 = 0;

326 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

327 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

328 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

329 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

330  
mask
;

331 
	}
}

337 *
	$unmakemask
 (
mask
, *
smask
) {

338 
i
 = 0;

339 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

340 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

341 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

342 
smask
[
i
] = '\0';

343  
smask
;

344 
	}
}

347 
	$db_£thook
 (
lua_Sèã
 *
L
) {

348 
¨g
, 
mask
, 
cou¡
;

349 
lua_Hook
 
func
;

350 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

351 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

352 
	`lua_£â›
(
L
, 
¨g
+1);

353 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

356 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

357 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

358 
cou¡
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 3, 0);

359 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

361 i‡(
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
Ë=
LUA_TNIL
) {

362 
	`lua_¸óãèbÀ
(
L
, 0, 2);

363 
	`lua_pushvÆue
(
L
, -1);

364 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

365 
	`lua_push°rög
(
L
, "k");

366 
	`lua_£tfõld
(
L
, -2, "__mode");

367 
	`lua_pushvÆue
(
L
, -1);

368 
	`lua_£tmë©abÀ
(
L
, -2);

370 
	`check°ack
(
L
, 
L1
, 1);

371 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

372 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

373 
	`lua_øw£t
(
L
, -3);

374 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

376 
	}
}

379 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

380 
¨g
;

381 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

382 
buff
[5];

383 
mask
 = 
	`lua_gëhookmask
(
L1
);

384 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

385 i‡(
hook
 =
NULL
)

386 
	`lua_pushnû
(
L
);

387 i‡(
hook
 !
hookf
)

388 
	`lua_pushlôîÆ
(
L
, "external hook");

390 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

391 
	`check°ack
(
L
, 
L1
, 1);

392 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

393 
	`lua_øwgë
(
L
, -2);

394 
	`lua_ªmove
(
L
, -2);

396 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

397 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

399 
	}
}

402 
	$db_debug
 (
lua_Sèã
 *
L
) {

404 
buf„r
[250];

405 
	`lua_wrôe°rögîr‹
("%s", "lua_debug> ");

406 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

407 
	`°rcmp
(
buf„r
, "cont\n") == 0)

409 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

410 
	`lua_pˇŒ
(
L
, 0, 0, 0))

411 
	`lua_wrôe°rögîr‹
("%s\n", 
	`lua_to°rög
(
L
, -1));

412 
	`lua_£â›
(
L
, 0);

414 
	}
}

417 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

418 
¨g
;

419 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

420 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

421 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

422 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

424 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

425 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

428 
	}
}

431 c⁄° 
luaL_Reg
 
	gdblib
[] = {

432 {"debug", 
db_debug
},

433 {"gëu£rvÆue", 
db_gëu£rvÆue
},

434 {"gëhook", 
db_gëhook
},

435 {"gëöfo", 
db_gëöfo
},

436 {"gëloˇl", 
db_gëloˇl
},

437 {"gëªgi°ry", 
db_gëªgi°ry
},

438 {"gëmë©abÀ", 
db_gëmë©abÀ
},

439 {"gëupvÆue", 
db_gëupvÆue
},

440 {"upvÆuejoö", 
db_upvÆuejoö
},

441 {"upvÆueid", 
db_upvÆueid
},

442 {"£tu£rvÆue", 
db_£tu£rvÆue
},

443 {"£thook", 
db_£thook
},

444 {"£éoˇl", 
db_£éoˇl
},

445 {"£tmë©abÀ", 
db_£tmë©abÀ
},

446 {"£tupvÆue", 
db_£tupvÆue
},

447 {"åa˚back", 
db_åa˚back
},

448 {
NULL
, NULL}

452 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

453 
	`luaL_√wlib
(
L
, 
dblib
);

455 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldebug.c

7 
	#ldebug_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"lcode.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

34 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

38 
	#ci_func
(
ci
Ë(
	`˛LvÆue
((ci)->
func
))

	)

41 c⁄° *
fun˙ame‰omcode
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
,

42 c⁄° **
«me
);

45 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

46 
	`lua_as£π
(
	`isLua
(
ci
));

47  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

48 
	}
}

51 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

52  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

53 
	}
}

62 
	$sw≠exåa
 (
lua_Sèã
 *
L
) {

63 i‡(
L
->
°©us
 =
LUA_YIELD
) {

64 
CÆlInfo
 *
ci
 = 
L
->ci;

65 
StkId
 
ãmp
 = 
ci
->
func
;

66 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

67 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
ãmp
);

69 
	}
}

81 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

82 i‡(
func
 =
NULL
 || 
mask
 == 0) {

83 
mask
 = 0;

84 
func
 = 
NULL
;

86 i‡(
	`isLua
(
L
->
ci
))

87 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

88 
L
->
hook
 = 
func
;

89 
L
->
ba£hookcou¡
 = 
cou¡
;

90 
	`ª£thookcou¡
(
L
);

91 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

92 
	}
}

95 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

96  
L
->
hook
;

97 
	}
}

100 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

101  
L
->
hookmask
;

102 
	}
}

105 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

106  
L
->
ba£hookcou¡
;

107 
	}
}

110 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

111 
°©us
;

112 
CÆlInfo
 *
ci
;

113 i‡(
Àvñ
 < 0)  0;

114 
	`lua_lock
(
L
);

115 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

116 
Àvñ
--;

117 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

118 
°©us
 = 1;

119 
¨
->
i_ci
 = 
ci
;

121 
°©us
 = 0;

122 
	`lua_u∆ock
(
L
);

123  
°©us
;

124 
	}
}

127 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

128 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

129 i‡(
s
 =
NULL
)  "?";

130  
	`gë°r
(
s
);

131 
	}
}

134 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

135 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

136 i‡(
n
 >
	`ˇ°_öt
(
ci
->
u
.
l
.
ba£
 - ci->
func
Ë- 
≈¨ams
)

137  
NULL
;

139 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

142 
	}
}

145 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

146 
StkId
 *
pos
) {

147 c⁄° *
«me
 = 
NULL
;

148 
StkId
 
ba£
;

149 i‡(
	`isLua
(
ci
)) {

150 i‡(
n
 < 0)

151  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

153 
ba£
 = 
ci
->
u
.
l
.base;

154 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

158 
ba£
 = 
ci
->
func
 + 1;

159 i‡(
«me
 =
NULL
) {

160 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

161 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

162 
«me
 = "(*temporary)";

164  
NULL
;

166 *
pos
 = 
ba£
 + (
n
 - 1);

167  
«me
;

168 
	}
}

171 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

172 c⁄° *
«me
;

173 
	`lua_lock
(
L
);

174 
	`sw≠exåa
(
L
);

175 i‡(
¨
 =
NULL
) {

176 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

177 
«me
 = 
NULL
;

179 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

182 
StkId
 
pos
 = 
NULL
;

183 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

184 i‡(
«me
) {

185 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

186 
	`≠i_ö¸_t›
(
L
);

189 
	`sw≠exåa
(
L
);

190 
	`lua_u∆ock
(
L
);

191  
«me
;

192 
	}
}

195 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

196 
StkId
 
pos
 = 
NULL
;

197 c⁄° *
«me
;

198 
	`lua_lock
(
L
);

199 
	`sw≠exåa
(
L
);

200 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

201 i‡(
«me
) {

202 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

203 
L
->
t›
--;

205 
	`sw≠exåa
(
L
);

206 
	`lua_u∆ock
(
L
);

207  
«me
;

208 
	}
}

211 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

212 i‡(
	`noLuaClosuª
(
˛
)) {

213 
¨
->
sour˚
 = "=[C]";

214 
¨
->
löedeföed
 = -1;

215 
¨
->
œ°löedeföed
 = -1;

216 
¨
->
wh©
 = "C";

219 
PrŸo
 *
p
 = 
˛
->
l
.p;

220 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

221 
¨
->
löedeföed
 = 
p
->linedefined;

222 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

223 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

225 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

226 
	}
}

229 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

230 i‡(
	`noLuaClosuª
(
f
)) {

231 
	`£äûvÆue
(
L
->
t›
);

232 
	`≠i_ö¸_t›
(
L
);

235 
i
;

236 
TVÆue
 
v
;

237 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

238 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

239 
	`£thvÆue
(
L
, L->
t›
, 
t
);

240 
	`≠i_ö¸_t›
(
L
);

241 
	`£tbvÆue
(&
v
, 1);

242 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

243 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

245 
	}
}

248 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

249 i‡(
ci
 =
NULL
)

250  
NULL
;

251 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FIN
) {

252 *
«me
 = "__gc";

256 i‡(!(
ci
->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

257  
	`fun˙ame‰omcode
(
L
, 
ci
->
¥evious
, 
«me
);

258  
NULL
;

259 
	}
}

262 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

263 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

264 
°©us
 = 1;

265 ; *
wh©
; what++) {

266 *
wh©
) {

268 
	`funcöfo
(
¨
, 
f
);

272 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

276 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

277 i‡(
	`noLuaClosuª
(
f
)) {

278 
¨
->
isv¨¨g
 = 1;

279 
¨
->
≈¨ams
 = 0;

282 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

283 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

288 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

292 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
, &¨->
«me
);

293 i‡(
¨
->
«mewh©
 =
NULL
) {

294 
¨
->
«mewh©
 = "";

295 
¨
->
«me
 = 
NULL
;

302 : 
°©us
 = 0;

305  
°©us
;

306 
	}
}

309 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

310 
°©us
;

311 
Closuª
 *
˛
;

312 
CÆlInfo
 *
ci
;

313 
StkId
 
func
;

314 
	`lua_lock
(
L
);

315 
	`sw≠exåa
(
L
);

316 i‡(*
wh©
 == '>') {

317 
ci
 = 
NULL
;

318 
func
 = 
L
->
t›
 - 1;

319 
	`≠i_check
(
L
, 
	`âisfun˘i⁄
(
func
), "functionÉxpected");

320 
wh©
++;

321 
L
->
t›
--;

324 
ci
 = 
¨
->
i_ci
;

325 
func
 = 
ci
->func;

326 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

328 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

329 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

330 i‡(
	`°rchr
(
wh©
, 'f')) {

331 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

332 
	`≠i_ö¸_t›
(
L
);

334 
	`sw≠exåa
(
L
);

335 i‡(
	`°rchr
(
wh©
, 'L'))

336 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

337 
	`lua_u∆ock
(
L
);

338  
°©us
;

339 
	}
}

348 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

349 c⁄° **
«me
);

355 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

356 i‡(
	`ISK
(
c
)) {

357 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

358 i‡(
	`âis°rög
(
kvÆue
)) {

359 *
«me
 = 
	`svÆue
(
kvÆue
);

365 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

366 i‡(
wh©
 && *what == 'c') {

371 *
«me
 = "?";

372 
	}
}

375 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

376 i‡(
pc
 < 
jm±¨gë
)

378  
pc
;

379 
	}
}

385 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

386 
pc
;

387 
£åeg
 = -1;

388 
jm±¨gë
 = 0;

389 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

390 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

391 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

392 
a
 = 
	`GETARG_A
(
i
);

393 
›
) {

394 
OP_LOADNIL
: {

395 
b
 = 
	`GETARG_B
(
i
);

396 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

397 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

400 
OP_TFORCALL
: {

401 i‡(
ªg
 >
a
 + 2)

402 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

405 
OP_CALL
:

406 
OP_TAILCALL
: {

407 i‡(
ªg
 >
a
)

408 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

411 
OP_JMP
: {

412 
b
 = 
	`GETARG_sBx
(
i
);

413 
de°
 = 
pc
 + 1 + 
b
;

415 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

416 i‡(
de°
 > 
jm±¨gë
)

417 
jm±¨gë
 = 
de°
;

422 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

423 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

427  
£åeg
;

428 
	}
}

431 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

432 c⁄° **
«me
) {

433 
pc
;

434 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

435 i‡(*
«me
)

438 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

439 i‡(
pc
 != -1) {

440 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

441 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

442 
›
) {

443 
OP_MOVE
: {

444 
b
 = 
	`GETARG_B
(
i
);

445 i‡(
b
 < 
	`GETARG_A
(
i
))

446  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

449 
OP_GETTABUP
:

450 
OP_GETTABLE
: {

451 
k
 = 
	`GETARG_C
(
i
);

452 
t
 = 
	`GETARG_B
(
i
);

453 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

454 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

455 : 
	`upvÆ«me
(
p
, 
t
);

456 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

457  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

459 
OP_GETUPVAL
: {

460 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

463 
OP_LOADK
:

464 
OP_LOADKX
: {

465 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

466 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

467 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

468 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

473 
OP_SELF
: {

474 
k
 = 
	`GETARG_C
(
i
);

475 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

481  
NULL
;

482 
	}
}

491 c⁄° *
	$fun˙ame‰omcode
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
,

492 c⁄° **
«me
) {

493 
TMS
 
tm
 = (TMS)0;

494 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

495 
pc
 = 
	`cuºíçc
(
ci
);

496 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

497 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
) {

498 *
«me
 = "?";

501 
	`GET_OPCODE
(
i
)) {

502 
OP_CALL
:

503 
OP_TAILCALL
:

504  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

505 
OP_TFORCALL
: {

506 *
«me
 = "for iterator";

510 
OP_SELF
: 
OP_GETTABUP
: 
OP_GETTABLE
:

511 
tm
 = 
TM_INDEX
;

513 
OP_SETTABUP
: 
OP_SETTABLE
:

514 
tm
 = 
TM_NEWINDEX
;

516 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_MOD
:

517 
OP_POW
: 
OP_DIV
: 
OP_IDIV
: 
OP_BAND
:

518 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
: {

519 
off£t
 = 
	`ˇ°_öt
(
	`GET_OPCODE
(
i
)Ë- ca°_öt(
OP_ADD
);

520 
tm
 = 
	`ˇ°
(
TMS
, 
off£t
 + 
	`ˇ°_öt
(
TM_ADD
));

523 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

524 
OP_BNOT
: 
tm
 = 
TM_BNOT
; ;

525 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

526 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

527 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

528 
OP_LT
: 
tm
 = 
TM_LT
; ;

529 
OP_LE
: 
tm
 = 
TM_LE
; ;

531  
NULL
;

533 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

535 
	}
}

546 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

547 
±rdiff_t
 
i
 = 
o
 - 
ci
->
u
.
l
.
ba£
;

548  (0 <
i
 && i < (
ci
->
t›
 - ci->
u
.
l
.
ba£
Ë&& ci->u.l.ba£ + i =
o
);

549 
	}
}

557 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

558 c⁄° **
«me
) {

559 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

560 
i
;

561 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

562 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

563 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

567  
NULL
;

568 
	}
}

571 c⁄° *
	$v¨öfo
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

572 c⁄° *
«me
 = 
NULL
;

573 
CÆlInfo
 *
ci
 = 
L
->ci;

574 c⁄° *
köd
 = 
NULL
;

575 i‡(
	`isLua
(
ci
)) {

576 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

577 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

578 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

579 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

581  (
köd
Ë? 
	`luaO_pushf°rög
(
L
, " (%†'%s')", köd, 
«me
) : "";

582 
	}
}

585 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

586 c⁄° *
t
 = 
	`luaT_objty≥«me
(
L
, 
o
);

587 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue%s", 
›
, 
t
, 
	`v¨öfo
(L, 
o
));

588 
	}
}

591 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

592 i‡(
	`âis°rög
(
p1
Ë|| 
	`cvt2°r
’1)Ëp1 = 
p2
;

593 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

594 
	}
}

597 
l_n‹ë
 
	$luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

598 c⁄° 
TVÆue
 *
p2
, c⁄° *
msg
) {

599 
lua_Numbî
 
ãmp
;

600 i‡(!
	`t⁄umbî
(
p1
, &
ãmp
))

601 
p2
 = 
p1
;

602 
	`luaG_ty≥îr‹
(
L
, 
p2
, 
msg
);

603 
	}
}

609 
l_n‹ë
 
	$luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

610 
lua_I¡egî
 
ãmp
;

611 i‡(!
	`toöãgî
(
p1
, &
ãmp
))

612 
p2
 = 
p1
;

613 
	`luaG_ru√º‹
(
L
, "numbî%†ha†nÿöãgîÑïª£¡©i⁄", 
	`v¨öfo
(L, 
p2
));

614 
	}
}

617 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

618 c⁄° *
t1
 = 
	`luaT_objty≥«me
(
L
, 
p1
);

619 c⁄° *
t2
 = 
	`luaT_objty≥«me
(
L
, 
p2
);

620 i‡(
	`°rcmp
(
t1
, 
t2
) == 0)

621 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

623 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

624 
	}
}

628 c⁄° *
	$luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
TSåög
 *
§c
,

629 
löe
) {

630 
buff
[
LUA_IDSIZE
];

631 i‡(
§c
)

632 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

634 
buff
[0] = '?'; buff[1] = '\0';

636  
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

637 
	}
}

640 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

641 i‡(
L
->
îrfunc
 != 0) {

642 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

643 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

644 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

645 
L
->
t›
++;

646 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 1);

648 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

649 
	}
}

652 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

653 
CÆlInfo
 *
ci
 = 
L
->ci;

654 c⁄° *
msg
;

655 
va_li°
 
¨gp
;

656 
	`luaC_checkGC
(
L
);

657 
	`va_°¨t
(
¨gp
, 
fmt
);

658 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

659 
	`va_íd
(
¨gp
);

660 i‡(
	`isLua
(
ci
))

661 
	`luaG_addöfo
(
L
, 
msg
, 
	`ci_func
(
ci
)->
p
->
sour˚
, 
	`cuºíéöe
(ci));

662 
	`luaG_îr‹msg
(
L
);

663 
	}
}

666 
	$luaG_åa˚exec
 (
lua_Sèã
 *
L
) {

667 
CÆlInfo
 *
ci
 = 
L
->ci;

668 
lu_byã
 
mask
 = 
L
->
hookmask
;

669 
cou¡hook
 = (--
L
->
hookcou¡
 =0 && (
mask
 & 
LUA_MASKCOUNT
));

670 i‡(
cou¡hook
)

671 
	`ª£thookcou¡
(
L
);

672 i‡(!(
mask
 & 
LUA_MASKLINE
))

674 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

675 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

678 i‡(
cou¡hook
)

679 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

680 i‡(
mask
 & 
LUA_MASKLINE
) {

681 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

682 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

683 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

684 i‡(
≈c
 == 0 ||

685 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

686 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

687 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

689 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

690 i‡(
L
->
°©us
 =
LUA_YIELD
) {

691 i‡(
cou¡hook
)

692 
L
->
hookcou¡
 = 1;

693 
ci
->
u
.
l
.
ßvedpc
--;

694 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

695 
ci
->
func
 = 
L
->
t›
 - 1;

696 
	`luaD_throw
(
L
, 
LUA_YIELD
);

698 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldebug.h

7 #i‚de‡
ldebug_h


8 
	#ldebug_h


	)

11 
	~"l°©e.h
"

14 
	#pcRñ
(
pc
, 
p
Ë(
	`ˇ°
(, (pcË- (p)->
code
Ë- 1)

	)

16 
	#gëfun˛öe
(
f
,
pc
Ë(((f)->
löeöfo
Ë? (f)->löeöfo[pc] : -1)

	)

18 
	#ª£thookcou¡
(
L
Ë(L->
hookcou¡
 = L->
ba£hookcou¡
)

	)

21 
LUAI_FUNC
 
l_n‹ë
 
luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
,

22 c⁄° *
›«me
);

23 
LUAI_FUNC
 
l_n‹ë
 
luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

24 c⁄° 
TVÆue
 *
p2
);

25 
LUAI_FUNC
 
l_n‹ë
 
luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

26 c⁄° 
TVÆue
 *
p2
,

27 c⁄° *
msg
);

28 
LUAI_FUNC
 
l_n‹ë
 
luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

29 c⁄° 
TVÆue
 *
p2
);

30 
LUAI_FUNC
 
l_n‹ë
 
luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

31 c⁄° 
TVÆue
 *
p2
);

32 
LUAI_FUNC
 
l_n‹ë
 
luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

33 
LUAI_FUNC
 c⁄° *
luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
,

34 
TSåög
 *
§c
, 
löe
);

35 
LUAI_FUNC
 
l_n‹ë
 
luaG_îr‹msg
 (
lua_Sèã
 *
L
);

36 
LUAI_FUNC
 
luaG_åa˚exec
 (
lua_Sèã
 *
L
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldo.c

7 
	#ldo_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<£tjmp.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lmem.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"Õ¨£r.h
"

28 
	~"l°©e.h
"

29 
	~"l°rög.h
"

30 
	~"…abÀ.h
"

31 
	~"…m.h
"

32 
	~"lundump.h
"

33 
	~"lvm.h
"

34 
	~"lzio.h
"

38 
	#îr‹°©us
(
s
Ë((sË> 
LUA_YIELD
)

	)

53 #i‡!
deföed
(
LUAI_THROW
)

55 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

58 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

59 
	#LUAI_TRY
(
L
,
c
,
a
) \

60 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

61 
	#luai_jmpbuf
 

	)

63 #ñi‡
deföed
(
LUA_USE_POSIX
)

66 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

67 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

68 
	#luai_jmpbuf
 
jmp_buf


	)

73 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

74 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

75 
	#luai_jmpbuf
 
jmp_buf


	)

84 
	slua_l⁄gjmp
 {

85 
lua_l⁄gjmp
 *
	m¥evious
;

86 
luai_jmpbuf
 
	mb
;

87 vﬁ©ûê
	m°©us
;

91 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

92 
îrcode
) {

93 
LUA_ERRMEM
: {

94 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

97 
LUA_ERRERR
: {

98 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

102 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

106 
L
->
t›
 = 
ﬁdt›
 + 1;

107 
	}
}

110 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

111 i‡(
L
->
îr‹Jmp
) {

112 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

113 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

116 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

117 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

118 i‡(
g
->
maöthªad
->
îr‹Jmp
) {

119 
	`£tobjs2s
(
L
, 
g
->
maöthªad
->
t›
++, L->top - 1);

120 
	`luaD_throw
(
g
->
maöthªad
, 
îrcode
);

123 i‡(
g
->
∑nic
) {

124 
	`£ãº‹obj
(
L
, 
îrcode
, L->
t›
);

125 i‡(
L
->
ci
->
t›
 < L->top)

126 
L
->
ci
->
t›
 = L->top;

127 
	`lua_u∆ock
(
L
);

128 
g
->
	`∑nic
(
L
);

130 
	`ab‹t
();

133 
	}
}

136 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

137 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

138 
lua_l⁄gjmp
 
lj
;

139 
lj
.
°©us
 = 
LUA_OK
;

140 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

141 
L
->
îr‹Jmp
 = &
lj
;

142 
	`LUAI_TRY
(
L
, &
lj
,

143 (*
f
)(
L
, 
ud
);

145 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

146 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

147  
lj
.
°©us
;

148 
	}
}

158 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

159 
CÆlInfo
 *
ci
;

160 
UpVÆ
 *
up
;

161 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

162 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
u
.
›í
.
√xt
)

163 
up
->
v
 = (up->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

164 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

165 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

166 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

167 i‡(
	`isLua
(
ci
))

168 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

170 
	}
}

174 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

177 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

178 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

179 
lim
 = 
L
->
°acksize
;

180 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

181 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

182 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

183 ; 
lim
 < 
√wsize
;Üim++)

184 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

185 
L
->
°acksize
 = 
√wsize
;

186 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

187 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

188 
	}
}

191 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

192 
size
 = 
L
->
°acksize
;

193 i‡(
size
 > 
LUAI_MAXSTACK
)

194 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

196 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

197 
√wsize
 = 2 * 
size
;

198 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

199 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

200 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

201 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

202 
	`luaG_ru√º‹
(
L
, "stack overflow");

205 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

207 
	}
}

210 
	$°acköu£
 (
lua_Sèã
 *
L
) {

211 
CÆlInfo
 *
ci
;

212 
StkId
 
lim
 = 
L
->
t›
;

213 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

214 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

216 
	`lua_as£π
(
lim
 <
L
->
°ack_œ°
);

217  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

218 
	}
}

221 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

222 
öu£
 = 
	`°acköu£
(
L
);

223 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

224 i‡(
goodsize
 > 
LUAI_MAXSTACK
)

225 
goodsize
 = 
LUAI_MAXSTACK
;

226 i‡(
L
->
°acksize
 > 
LUAI_MAXSTACK
)

227 
	`luaE_‰ìCI
(
L
);

229 
	`luaE_shrökCI
(
L
);

232 i‡(
öu£
 <(
LUAI_MAXSTACK
 - 
EXTRA_STACK
) &&

233 
goodsize
 < 
L
->
°acksize
)

234 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

236 
	`c⁄dmove°ack
(
L
,{},{});

237 
	}
}

240 
	$luaD_ö˘›
 (
lua_Sèã
 *
L
) {

241 
	`luaD_check°ack
(
L
, 1);

242 
L
->
t›
++;

243 
	}
}

253 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

254 
lua_Hook
 
hook
 = 
L
->hook;

255 i‡(
hook
 && 
L
->
Ælowhook
) {

256 
CÆlInfo
 *
ci
 = 
L
->ci;

257 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

258 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

259 
lua_Debug
 
¨
;

260 
¨
.
evít
 =Évent;

261 
¨
.
cuºíéöe
 = 
löe
;

262 
¨
.
i_ci
 = 
ci
;

263 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

264 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

265 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

266 
L
->
Ælowhook
 = 0;

267 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

268 
	`lua_u∆ock
(
L
);

269 (*
hook
)(
L
, &
¨
);

270 
	`lua_lock
(
L
);

271 
	`lua_as£π
(!
L
->
Ælowhook
);

272 
L
->
Ælowhook
 = 1;

273 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

274 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

275 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

277 
	}
}

280 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

281 
hook
 = 
LUA_HOOKCALL
;

282 
ci
->
u
.
l
.
ßvedpc
++;

283 i‡(
	`isLua
(
ci
->
¥evious
) &&

284 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

285 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

286 
hook
 = 
LUA_HOOKTAILCALL
;

288 
	`luaD_hook
(
L
, 
hook
, -1);

289 
ci
->
u
.
l
.
ßvedpc
--;

290 
	}
}

293 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

294 
i
;

295 
nfix¨gs
 = 
p
->
num∑øms
;

296 
StkId
 
ba£
, 
fixed
;

298 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

299 
ba£
 = 
L
->
t›
;

300 
i
 = 0; i < 
nfix¨gs
 && i < 
a˘uÆ
; i++) {

301 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

302 
	`£äûvÆue
(
fixed
 + 
i
);

304 ; 
i
 < 
nfix¨gs
; i++)

305 
	`£äûvÆue
(
L
->
t›
++);

306  
ba£
;

307 
	}
}

315 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

316 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

317 
StkId
 
p
;

318 i‡(!
	`âisfun˘i⁄
(
tm
))

319 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

321 
p
 = 
L
->
t›
;Ö > 
func
;Ö--)

322 
	`£tobjs2s
(
L
, 
p
,Ö-1);

323 
L
->
t›
++;

324 
	`£tobj2s
(
L
, 
func
, 
tm
);

325 
	}
}

334 
	$movîesu…s
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
fú°Resu…
, 
StkId
 
ªs
,

335 
ƒes
, 
w™ãd
) {

336 
w™ãd
) {

339 i‡(
ƒes
 == 0)

340 
fú°Resu…
 = 
luaO_nûobje˘
;

341 
	`£tobjs2s
(
L
, 
ªs
, 
fú°Resu…
);

344 
LUA_MULTRET
: {

345 
i
;

346 
i
 = 0; i < 
ƒes
; i++)

347 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

348 
L
->
t›
 = 
ªs
 + 
ƒes
;

352 
i
;

353 i‡(
w™ãd
 <
ƒes
) {

354 
i
 = 0; i < 
w™ãd
; i++)

355 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

358 
i
 = 0; i < 
ƒes
; i++)

359 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

360 ; 
i
 < 
w™ãd
; i++)

361 
	`£äûvÆue
(
ªs
 + 
i
);

366 
L
->
t›
 = 
ªs
 + 
w™ãd
;

368 
	}
}

376 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
, 
ƒes
) {

377 
StkId
 
ªs
;

378 
w™ãd
 = 
ci
->
ƒesu…s
;

379 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

380 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

381 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

382 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

383 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

385 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

387 
ªs
 = 
ci
->
func
;

388 
L
->
ci
 = ci->
¥evious
;

390  
	`movîesu…s
(
L
, 
fú°Resu…
, 
ªs
, 
ƒes
, 
w™ãd
);

391 
	}
}

395 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

399 
	#check°ackp
(
L
,
n
,
p
) \

400 
	`luaD_check°ackaux
(
L
, 
n
, \

401 
±rdiff_t
 
t__
 = 
	`ßve°ack
(
L
, 
p
); \

402 
	`luaC_checkGC
(
L
), \

403 
p
 = 
	`ª°‹e°ack
(
L
, 
t__
)Ë

	)

413 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

414 
lua_CFun˘i⁄
 
f
;

415 
CÆlInfo
 *
ci
;

416 
	`ây≥
(
func
)) {

417 
LUA_TCCL
:

418 
f
 = 
	`˛CvÆue
(
func
)->f;

419 
Cfunc
;

420 
LUA_TLCF
:

421 
f
 = 
	`fvÆue
(
func
);

422 
Cfunc
: {

423 
n
;

424 
	`check°ackp
(
L
, 
LUA_MINSTACK
, 
func
);

425 
ci
 = 
	`√xt_ci
(
L
);

426 
ci
->
ƒesu…s
 =Çresults;

427 
ci
->
func
 = func;

428 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

429 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

430 
ci
->
ˇŒ°©us
 = 0;

431 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

432 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

433 
	`lua_u∆ock
(
L
);

434 
n
 = (*
f
)(
L
);

435 
	`lua_lock
(
L
);

436 
	`≠i_check√Àms
(
L
, 
n
);

437 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

440 
LUA_TLCL
: {

441 
StkId
 
ba£
;

442 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

443 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

444 
fsize
 = 
p
->
max°acksize
;

445 
	`check°ackp
(
L
, 
fsize
, 
func
);

446 i‡(
p
->
is_v¨¨g
)

447 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

449 ; 
n
 < 
p
->
num∑øms
;Ç++)

450 
	`£äûvÆue
(
L
->
t›
++);

451 
ba£
 = 
func
 + 1;

453 
ci
 = 
	`√xt_ci
(
L
);

454 
ci
->
ƒesu…s
 =Çresults;

455 
ci
->
func
 = func;

456 
ci
->
u
.
l
.
ba£
 = base;

457 
L
->
t›
 = 
ci
->t› = 
ba£
 + 
fsize
;

458 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

459 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

460 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

461 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

462 
	`ˇŒhook
(
L
, 
ci
);

466 
	`check°ackp
(
L
, 1, 
func
);

467 
	`åyfuncTM
(
L
, 
func
);

468  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

471 
	}
}

481 
	$°ackîr‹
 (
lua_Sèã
 *
L
) {

482 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

483 
	`luaG_ru√º‹
(
L
, "C stack overflow");

484 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

485 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

486 
	}
}

495 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

496 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

497 
	`°ackîr‹
(
L
);

498 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

499 
	`luaV_execuã
(
L
);

500 
L
->
nCˇŒs
--;

501 
	}
}

507 
	$luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

508 
L
->
¬y
++;

509 
	`luaD_ˇŒ
(
L
, 
func
, 
nResu…s
);

510 
L
->
¬y
--;

511 
	}
}

518 
	$föishCˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

519 
CÆlInfo
 *
ci
 = 
L
->ci;

520 
n
;

522 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
 && 
L
->
¬y
 == 0);

524 
	`lua_as£π
((
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
Ë|| 
°©us
 =
LUA_YIELD
);

525 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

526 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

527 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

531 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

532 
	`lua_u∆ock
(
L
);

533 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
°©us
, ci->u.c.
˘x
);

534 
	`lua_lock
(
L
);

535 
	`≠i_check√Àms
(
L
, 
n
);

536 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

537 
	}
}

548 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

549 i‡(
ud
 !
NULL
)

550 
	`föishCˇŒ
(
L
, *(*)
ud
);

551 
L
->
ci
 !&L->
ba£_ci
) {

552 i‡(!
	`isLua
(
L
->
ci
))

553 
	`föishCˇŒ
(
L
, 
LUA_YIELD
);

555 
	`luaV_föishOp
(
L
);

556 
	`luaV_execuã
(
L
);

559 
	}
}

566 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

567 
CÆlInfo
 *
ci
;

568 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

569 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

570  
ci
;

572  
NULL
;

573 
	}
}

581 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

582 
StkId
 
ﬁdt›
;

583 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

584 i‡(
ci
 =
NULL
)  0;

586 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

587 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

588 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

589 
L
->
ci
 = ci;

590 
L
->
Ælowhook
 = 
	`gëﬂh
(
ci
->
ˇŒ°©us
);

591 
L
->
¬y
 = 0;

592 
	`luaD_shrök°ack
(
L
);

593 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

595 
	}
}

603 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
«rg
) {

604 
L
->
t›
 -
«rg
;

605 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

606 
	`≠i_ö¸_t›
(
L
);

607 
	`lua_u∆ock
(
L
);

608  
LUA_ERRRUN
;

609 
	}
}

619 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

620 
n
 = *(
	`ˇ°
(*, 
ud
));

621 
StkId
 
fú°Arg
 = 
L
->
t›
 - 
n
;

622 
CÆlInfo
 *
ci
 = 
L
->ci;

623 i‡(
L
->
°©us
 =
LUA_OK
) {

624 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

625 
	`luaV_execuã
(
L
);

628 
	`lua_as£π
(
L
->
°©us
 =
LUA_YIELD
);

629 
L
->
°©us
 = 
LUA_OK
;

630 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

631 i‡(
	`isLua
(
ci
))

632 
	`luaV_execuã
(
L
);

634 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

635 
	`lua_u∆ock
(
L
);

636 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
LUA_YIELD
, ci->u.c.
˘x
);

637 
	`lua_lock
(
L
);

638 
	`≠i_check√Àms
(
L
, 
n
);

639 
fú°Arg
 = 
L
->
t›
 - 
n
;

641 
	`luaD_posˇŒ
(
L
, 
ci
, 
fú°Arg
, 
n
);

643 
	`uƒﬁl
(
L
, 
NULL
);

645 
	}
}

648 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

649 
°©us
;

650 
ﬁd¬y
 = 
L
->
¬y
;

651 
	`lua_lock
(
L
);

652 i‡(
L
->
°©us
 =
LUA_OK
) {

653 i‡(
L
->
ci
 !&L->
ba£_ci
)

654  
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
«rgs
);

656 i‡(
L
->
°©us
 !
LUA_YIELD
)

657  
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
«rgs
);

658 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

659 i‡(
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

660  
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
«rgs
);

661 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

662 
L
->
¬y
 = 0;

663 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

664 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, &
«rgs
);

665 i‡(
°©us
 == -1)

666 
°©us
 = 
LUA_ERRRUN
;

668 
	`îr‹°©us
(
°©us
Ë&& 
	`ªcovî
(
L
, status)) {

670 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, &status);

672 i‡(
	`îr‹°©us
(
°©us
)) {

673 
L
->
°©us
 = 
	`ˇ°_byã
(status);

674 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

675 
L
->
ci
->
t›
 = L->top;

677 
	`lua_as£π
(
°©us
 =
L
->status);

679 
L
->
¬y
 = 
ﬁd¬y
;

680 
L
->
nCˇŒs
--;

681 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

682 
	`lua_u∆ock
(
L
);

683  
°©us
;

684 
	}
}

687 
LUA_API
 
	$lua_isyõldabÀ
 (
lua_Sèã
 *
L
) {

688  (
L
->
¬y
 == 0);

689 
	}
}

692 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

693 
lua_KFun˘i⁄
 
k
) {

694 
CÆlInfo
 *
ci
 = 
L
->ci;

695 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

696 
	`lua_lock
(
L
);

697 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

698 i‡(
L
->
¬y
 > 0) {

699 i‡(
L
 !
	`G
(L)->
maöthªad
)

700 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

702 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

704 
L
->
°©us
 = 
LUA_YIELD
;

705 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

706 i‡(
	`isLua
(
ci
)) {

707 
	`≠i_check
(
L
, 
k
 =
NULL
, "hooks cannot continueáfter yielding");

710 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

711 
ci
->
u
.
c
.
˘x
 = ctx;

712 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

713 
	`luaD_throw
(
L
, 
LUA_YIELD
);

715 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

716 
	`lua_u∆ock
(
L
);

718 
	}
}

721 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

722 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

723 
°©us
;

724 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

725 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

726 
ﬁd_¬y
 = 
L
->
¬y
;

727 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

728 
L
->
îrfunc
 = 
ef
;

729 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
func
, 
u
);

730 i‡(
°©us
 !
LUA_OK
) {

731 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

732 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

733 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

734 
L
->
ci
 = 
ﬁd_ci
;

735 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

736 
L
->
¬y
 = 
ﬁd_¬y
;

737 
	`luaD_shrök°ack
(
L
);

739 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

740  
°©us
;

741 
	}
}

748 
	sSP¨£r
 {

749 
ZIO
 *
	mz
;

750 
Mbuf„r
 
	mbuff
;

751 
Dynd©a
 
	mdyd
;

752 c⁄° *
	mmode
;

753 c⁄° *
	m«me
;

757 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

758 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

759 
	`luaO_pushf°rög
(
L
,

760 "©ãm±Åÿlﬂdá %†chunk (modêi†'%s')", 
x
, 
mode
);

761 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

763 
	}
}

766 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

767 
LClosuª
 *
˛
;

768 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

769 
c
 = 
	`zgëc
(
p
->
z
);

770 i‡(
c
 =
LUA_SIGNATURE
[0]) {

771 
	`checkmode
(
L
, 
p
->
mode
, "binary");

772 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
,Ö->
«me
);

775 
	`checkmode
(
L
, 
p
->
mode
, "text");

776 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

778 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

779 
	`luaF_öôupvÆs
(
L
, 
˛
);

780 
	}
}

783 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

784 c⁄° *
mode
) {

785 
SP¨£r
 
p
;

786 
°©us
;

787 
L
->
¬y
++;

788 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

789 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

790 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

791 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

792 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

793 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

794 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

795 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

796 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

797 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

798 
L
->
¬y
--;

799  
°©us
;

800 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldo.h

7 #i‚de‡
ldo_h


8 
	#ldo_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

13 
	~"lzio.h
"

23 
	#luaD_check°ackaux
(
L
,
n
,
¥e
,
pos
) \

24 i‡(
L
->
°ack_œ°
 - L->
t›
 <(
n
)) \

25 { 
¥e
; 
	`luaD_grow°ack
(
L
, 
n
); 
pos
; } { 
	`c⁄dmove°ack
(L,¥e,pos); }

	)

28 
	#luaD_check°ack
(
L
,
n
Ë
	`luaD_check°ackaux
(L,n,()0,()0)

	)

32 
	#ßve°ack
(
L
,
p
Ë((*)’Ë- (*)L->
°ack
)

	)

33 
	#ª°‹e°ack
(
L
,
n
Ë((
TVÆue
 *)((*)L->
°ack
 + (n)))

	)

37 (*
	tPfunc
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
);

39 
LUAI_FUNC
 
	`luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

40 c⁄° *
mode
);

41 
LUAI_FUNC
 
	`luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
);

42 
LUAI_FUNC
 
	`luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
);

43 
LUAI_FUNC
 
	`luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

44 
LUAI_FUNC
 
	`luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

45 
LUAI_FUNC
 
	`luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

46 
±rdiff_t
 
ﬁdt›
,Öådiff_à
ef
);

47 
LUAI_FUNC
 
	`luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
,

48 
ƒes
);

49 
LUAI_FUNC
 
	`luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
);

50 
LUAI_FUNC
 
	`luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
);

51 
LUAI_FUNC
 
	`luaD_shrök°ack
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
	`luaD_ö˘›
 (
lua_Sèã
 *
L
);

54 
LUAI_FUNC
 
l_n‹ë
 
	`luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
);

55 
LUAI_FUNC
 
	`luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/ldump.c

7 
	#ldump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lobje˘.h
"

18 
	~"l°©e.h
"

19 
	~"lundump.h
"

23 
lua_Sèã
 *
	mL
;

24 
lua_Wrôî
 
	mwrôî
;

25 *
	md©a
;

26 
	m°rù
;

27 
	m°©us
;

28 } 
	tDumpSèã
;

35 
	#DumpVe˘‹
(
v
,
n
,
D
Ë
	`DumpBlock
(v,“)*((v)[0]),D)

	)

37 
	#DumpLôîÆ
(
s
,
D
Ë
	`DumpBlock
(s, (sË- (), D)

	)

40 
	$DumpBlock
 (c⁄° *
b
, 
size_t
 
size
, 
DumpSèã
 *
D
) {

41 i‡(
D
->
°©us
 =0 && 
size
 > 0) {

42 
	`lua_u∆ock
(
D
->
L
);

43 
D
->
°©us
 = (*D->
wrôî
)(D->
L
, 
b
, 
size
, D->
d©a
);

44 
	`lua_lock
(
D
->
L
);

46 
	}
}

49 
	#DumpV¨
(
x
,
D
Ë
	`DumpVe˘‹
(&x,1,D)

	)

52 
	$DumpByã
 (
y
, 
DumpSèã
 *
D
) {

53 
lu_byã
 
x
 = (lu_byã)
y
;

54 
	`DumpV¨
(
x
, 
D
);

55 
	}
}

58 
	$DumpI¡
 (
x
, 
DumpSèã
 *
D
) {

59 
	`DumpV¨
(
x
, 
D
);

60 
	}
}

63 
	$DumpNumbî
 (
lua_Numbî
 
x
, 
DumpSèã
 *
D
) {

64 
	`DumpV¨
(
x
, 
D
);

65 
	}
}

68 
	$DumpI¡egî
 (
lua_I¡egî
 
x
, 
DumpSèã
 *
D
) {

69 
	`DumpV¨
(
x
, 
D
);

70 
	}
}

73 
	$DumpSåög
 (c⁄° 
TSåög
 *
s
, 
DumpSèã
 *
D
) {

74 i‡(
s
 =
NULL
)

75 
	`DumpByã
(0, 
D
);

77 
size_t
 
size
 = 
	`ts¶í
(
s
) + 1;

78 c⁄° *
°r
 = 
	`gë°r
(
s
);

79 i‡(
size
 < 0xFF)

80 
	`DumpByã
(
	`ˇ°_öt
(
size
), 
D
);

82 
	`DumpByã
(0xFF, 
D
);

83 
	`DumpV¨
(
size
, 
D
);

85 
	`DumpVe˘‹
(
°r
, 
size
 - 1, 
D
);

87 
	}
}

90 
	$DumpCode
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

91 
	`DumpI¡
(
f
->
sizecode
, 
D
);

92 
	`DumpVe˘‹
(
f
->
code
, f->
sizecode
, 
D
);

93 
	}
}

96 
DumpFun˘i⁄
(c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
);

98 
	$DumpC⁄°™ts
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

99 
i
;

100 
n
 = 
f
->
sizek
;

101 
	`DumpI¡
(
n
, 
D
);

102 
i
 = 0; i < 
n
; i++) {

103 c⁄° 
TVÆue
 *
o
 = &
f
->
k
[
i
];

104 
	`DumpByã
(
	`ây≥
(
o
), 
D
);

105 
	`ây≥
(
o
)) {

106 
LUA_TNIL
:

108 
LUA_TBOOLEAN
:

109 
	`DumpByã
(
	`bvÆue
(
o
), 
D
);

111 
LUA_TNUMFLT
:

112 
	`DumpNumbî
(
	`ÊtvÆue
(
o
), 
D
);

114 
LUA_TNUMINT
:

115 
	`DumpI¡egî
(
	`ivÆue
(
o
), 
D
);

117 
LUA_TSHRSTR
:

118 
LUA_TLNGSTR
:

119 
	`DumpSåög
(
	`tsvÆue
(
o
), 
D
);

122 
	`lua_as£π
(0);

125 
	}
}

128 
	$DumpPrŸos
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

129 
i
;

130 
n
 = 
f
->
sizï
;

131 
	`DumpI¡
(
n
, 
D
);

132 
i
 = 0; i < 
n
; i++)

133 
	`DumpFun˘i⁄
(
f
->
p
[
i
], f->
sour˚
, 
D
);

134 
	}
}

137 
	$DumpUpvÆues
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

138 
i
, 
n
 = 
f
->
sizeupvÆues
;

139 
	`DumpI¡
(
n
, 
D
);

140 
i
 = 0; i < 
n
; i++) {

141 
	`DumpByã
(
f
->
upvÆues
[
i
].
ö°ack
, 
D
);

142 
	`DumpByã
(
f
->
upvÆues
[
i
].
idx
, 
D
);

144 
	}
}

147 
	$DumpDebug
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

148 
i
, 
n
;

149 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

150 
	`DumpI¡
(
n
, 
D
);

151 
	`DumpVe˘‹
(
f
->
löeöfo
, 
n
, 
D
);

152 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

153 
	`DumpI¡
(
n
, 
D
);

154 
i
 = 0; i < 
n
; i++) {

155 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
, 
D
);

156 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
, 
D
);

157 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
, 
D
);

159 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

160 
	`DumpI¡
(
n
, 
D
);

161 
i
 = 0; i < 
n
; i++)

162 
	`DumpSåög
(
f
->
upvÆues
[
i
].
«me
, 
D
);

163 
	}
}

166 
	$DumpFun˘i⁄
 (c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
) {

167 i‡(
D
->
°rù
 || 
f
->
sour˚
 =
psour˚
)

168 
	`DumpSåög
(
NULL
, 
D
);

170 
	`DumpSåög
(
f
->
sour˚
, 
D
);

171 
	`DumpI¡
(
f
->
löedeföed
, 
D
);

172 
	`DumpI¡
(
f
->
œ°löedeföed
, 
D
);

173 
	`DumpByã
(
f
->
num∑øms
, 
D
);

174 
	`DumpByã
(
f
->
is_v¨¨g
, 
D
);

175 
	`DumpByã
(
f
->
max°acksize
, 
D
);

176 
	`DumpCode
(
f
, 
D
);

177 
	`DumpC⁄°™ts
(
f
, 
D
);

178 
	`DumpUpvÆues
(
f
, 
D
);

179 
	`DumpPrŸos
(
f
, 
D
);

180 
	`DumpDebug
(
f
, 
D
);

181 
	}
}

184 
	$DumpHódî
 (
DumpSèã
 *
D
) {

185 
	`DumpLôîÆ
(
LUA_SIGNATURE
, 
D
);

186 
	`DumpByã
(
LUAC_VERSION
, 
D
);

187 
	`DumpByã
(
LUAC_FORMAT
, 
D
);

188 
	`DumpLôîÆ
(
LUAC_DATA
, 
D
);

189 
	`DumpByã
((), 
D
);

190 
	`DumpByã
((
size_t
), 
D
);

191 
	`DumpByã
((
In°ru˘i⁄
), 
D
);

192 
	`DumpByã
((
lua_I¡egî
), 
D
);

193 
	`DumpByã
((
lua_Numbî
), 
D
);

194 
	`DumpI¡egî
(
LUAC_INT
, 
D
);

195 
	`DumpNumbî
(
LUAC_NUM
, 
D
);

196 
	}
}

202 
	$luaU_dump
(
lua_Sèã
 *
L
, c⁄° 
PrŸo
 *
f
, 
lua_Wrôî
 
w
, *
d©a
,

203 
°rù
) {

204 
DumpSèã
 
D
;

205 
D
.
L
 = L;

206 
D
.
wrôî
 = 
w
;

207 
D
.
d©a
 = data;

208 
D
.
°rù
 = strip;

209 
D
.
°©us
 = 0;

210 
	`DumpHódî
(&
D
);

211 
	`DumpByã
(
f
->
sizeupvÆues
, &
D
);

212 
	`DumpFun˘i⁄
(
f
, 
NULL
, &
D
);

213  
D
.
°©us
;

214 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lfunc.c

7 
	#lfunc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lfunc.h
"

18 
	~"lgc.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

25 
CClosuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

26 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
));

27 
CClosuª
 *
c
 = 
	`gco2c˛
(
o
);

28 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

29  
c
;

30 
	}
}

33 
LClosuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

34 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
));

35 
LClosuª
 *
c
 = 
	`gco2l˛
(
o
);

36 
c
->
p
 = 
NULL
;

37 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

38 
n
--Ë
c
->
upvÆs
[n] = 
NULL
;

39  
c
;

40 
	}
}

45 
	$luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

46 
i
;

47 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

48 
UpVÆ
 *
uv
 = 
	`luaM_√w
(
L
, UpVal);

49 
uv
->
ªfcou¡
 = 1;

50 
uv
->
v
 = &uv->
u
.
vÆue
;

51 
	`£äûvÆue
(
uv
->
v
);

52 
˛
->
upvÆs
[
i
] = 
uv
;

54 
	}
}

57 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

58 
UpVÆ
 **
µ
 = &
L
->
›íupvÆ
;

59 
UpVÆ
 *
p
;

60 
UpVÆ
 *
uv
;

61 
	`lua_as£π
(
	`isötwups
(
L
Ë|| L->
›íupvÆ
 =
NULL
);

62 *
µ
 !
NULL
 && (
p
 = *µ)->
v
 >
Àvñ
) {

63 
	`lua_as£π
(
	`upis›í
(
p
));

64 i‡(
p
->
v
 =
Àvñ
)

65  
p
;

66 
µ
 = &
p
->
u
.
›í
.
√xt
;

69 
uv
 = 
	`luaM_√w
(
L
, 
UpVÆ
);

70 
uv
->
ªfcou¡
 = 0;

71 
uv
->
u
.
›í
.
√xt
 = *
µ
;

72 
uv
->
u
.
›í
.
touched
 = 1;

73 *
µ
 = 
uv
;

74 
uv
->
v
 = 
Àvñ
;

75 i‡(!
	`isötwups
(
L
)) {

76 
L
->
twups
 = 
	`G
(L)->twups;

77 
	`G
(
L
)->
twups
 = L;

79  
uv
;

80 
	}
}

83 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

84 
UpVÆ
 *
uv
;

85 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = L->›íupvÆ)->
v
 >
Àvñ
) {

86 
	`lua_as£π
(
	`upis›í
(
uv
));

87 
L
->
›íupvÆ
 = 
uv
->
u
.
›í
.
√xt
;

88 i‡(
uv
->
ªfcou¡
 == 0)

89 
	`luaM_‰ì
(
L
, 
uv
);

91 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

92 
uv
->
v
 = &uv->
u
.
vÆue
;

93 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

96 
	}
}

99 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

100 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (
PrŸo
));

101 
PrŸo
 *
f
 = 
	`gco2p
(
o
);

102 
f
->
k
 = 
NULL
;

103 
f
->
sizek
 = 0;

104 
f
->
p
 = 
NULL
;

105 
f
->
sizï
 = 0;

106 
f
->
code
 = 
NULL
;

107 
f
->
ˇche
 = 
NULL
;

108 
f
->
sizecode
 = 0;

109 
f
->
löeöfo
 = 
NULL
;

110 
f
->
sizñöeöfo
 = 0;

111 
f
->
upvÆues
 = 
NULL
;

112 
f
->
sizeupvÆues
 = 0;

113 
f
->
num∑øms
 = 0;

114 
f
->
is_v¨¨g
 = 0;

115 
f
->
max°acksize
 = 0;

116 
f
->
locv¨s
 = 
NULL
;

117 
f
->
sizñocv¨s
 = 0;

118 
f
->
löedeföed
 = 0;

119 
f
->
œ°löedeföed
 = 0;

120 
f
->
sour˚
 = 
NULL
;

121  
f
;

122 
	}
}

125 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

126 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

127 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

128 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

129 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

130 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

131 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

132 
	`luaM_‰ì
(
L
, 
f
);

133 
	}
}

140 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

141 
i
;

142 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

143 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

144 
loˇl_numbî
--;

145 i‡(
loˇl_numbî
 == 0)

146  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

149  
NULL
;

150 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lfunc.h

7 #i‚de‡
lfunc_h


8 
	#lfunc_h


	)

11 
	~"lobje˘.h
"

14 
	#sizeC˛osuª
(
n
Ë(
	`ˇ°
(, (
CClosuª
)) + \

15 
	`ˇ°
(, (
TVÆue
)*((
n
)-1)))

	)

17 
	#sizeL˛osuª
(
n
Ë(
	`ˇ°
(, (
LClosuª
)) + \

18 
	`ˇ°
(, (
TVÆue
 *)*((
n
)-1)))

	)

22 
	#isötwups
(
L
Ë(L->
twups
 !L)

	)

29 
	#MAXUPVAL
 255

	)

35 
	sUpVÆ
 {

36 
TVÆue
 *
	mv
;

37 
lu_mem
 
	mªfcou¡
;

40 
UpVÆ
 *
	m√xt
;

41 
	mtouched
;

42 } 
	m›í
;

43 
TVÆue
 
	mvÆue
;

44 } 
	mu
;

47 
	#upis›í
(
up
Ë((up)->
v
 !&(up)->
u
.
vÆue
)

	)

50 
LUAI_FUNC
 
PrŸo
 *
luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
);

51 
LUAI_FUNC
 
CClosuª
 *
luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

52 
LUAI_FUNC
 
LClosuª
 *
luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

53 
LUAI_FUNC
 
luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
);

54 
LUAI_FUNC
 
UpVÆ
 *
luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

55 
LUAI_FUNC
 
luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

56 
LUAI_FUNC
 
luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
);

57 
LUAI_FUNC
 c⁄° *
luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
func
, 
loˇl_numbî
,

58 
pc
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lgc.c

7 
	#lgc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lgc.h
"

21 
	~"lmem.h
"

22 
	~"lobje˘.h
"

23 
	~"l°©e.h
"

24 
	~"l°rög.h
"

25 
	~"…abÀ.h
"

26 
	~"…m.h
"

33 
	#GCSösidótomic
 (
GCS∑u£
 + 1)

	)

39 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

42 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

45 
	#GCFINALIZECOST
 
GCSWEEPCOST


	)

52 
	#STEPMULADJ
 200

	)

59 
	#PAUSEADJ
 100

	)

66 
	#maskcﬁ‹s
 (~(
	`bômask
(
BLACKBIT
Ë| 
WHITEBITS
))

	)

67 
	#makewhôe
(
g
,
x
) \

68 (
x
->
m¨ked
 = 
	`ˇ°_byã
((x->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

70 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(x->
m¨ked
, 
WHITEBITS
)

	)

71 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(x->
m¨ked
, 
BLACKBIT
)

	)

74 
	#vÆiswhôe
(
x
Ë(
	`iscﬁÀ˘abÀ
(xË&& 
	`iswhôe
(
	`gcvÆue
(x)))

	)

76 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

79 
	#checkc⁄si°ícy
(
obj
) \

80 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

83 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

84 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

86 
	#m¨kobje˘
(
g
,
t
Ë{ i‡(
	`iswhôe
—)Ë
	`ªÆlym¨kobje˘
(g, 
	`obj2gco
—)); }

	)

92 
	#m¨kobje˘N
(
g
,
t
Ë{ i‡—Ë
	`m¨kobje˘
(g,t); }

	)

94 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

107 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

113 
	#lökg˛i°
(
o
,
p
Ë((o)->
g˛i°
 = (p), (pË
	`obj2gco
(o))

	)

125 
	$ªmovì¡ry
 (
Node
 *
n
) {

126 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

127 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

128 
	`£tdódvÆue
(
	`wgkey
(
n
));

129 
	}
}

139 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

140 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

141 i‡(
	`âis°rög
(
o
)) {

142 
	`m¨kobje˘
(
g
, 
	`tsvÆue
(
o
));

145  
	`iswhôe
(
	`gcvÆue
(
o
));

146 
	}
}

155 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

156 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

157 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

158 i‡(
	`kìpöv¨ü¡
(
g
))

159 
	`ªÆlym¨kobje˘
(
g
, 
v
);

161 
	`lua_as£π
(
	`isswìµha£
(
g
));

162 
	`makewhôe
(
g
, 
o
);

164 
	}
}

171 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

172 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

173 
	`lua_as£π
(
	`isbœck
(
t
Ë&& !
	`isdód
(
g
,Å));

174 
	`bœck2gøy
(
t
);

175 
	`lökg˛i°
(
t
, 
g
->
gøyagaö
);

176 
	}
}

185 
	$luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

186 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

187 
GCObje˘
 *
o
 = 
	`gcvÆue
(
uv
->
v
);

188 
	`lua_as£π
(!
	`upis›í
(
uv
));

189 i‡(
	`kìpöv¨ü¡
(
g
))

190 
	`m¨kobje˘
(
g
, 
o
);

191 
	}
}

194 
	$luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

195 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

196 
	`lua_as£π
(
g
->
Ælgc
 =
o
);

197 
	`whôe2gøy
(
o
);

198 
g
->
Ælgc
 = 
o
->
√xt
;

199 
o
->
√xt
 = 
g
->
fixedgc
;

200 
g
->
fixedgc
 = 
o
;

201 
	}
}

208 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
) {

209 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

210 
GCObje˘
 *
o
 = 
	`ˇ°
(GCObje˘ *, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

211 
o
->
m¨ked
 = 
	`luaC_whôe
(
g
);

212 
o
->
â
 =Åt;

213 
o
->
√xt
 = 
g
->
Ælgc
;

214 
g
->
Ælgc
 = 
o
;

215  
o
;

216 
	}
}

235 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

236 
ªíåy
:

237 
	`whôe2gøy
(
o
);

238 
o
->
â
) {

239 
LUA_TSHRSTR
: {

240 
	`gøy2bœck
(
o
);

241 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
shæí
);

244 
LUA_TLNGSTR
: {

245 
	`gøy2bœck
(
o
);

246 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
u
.
 gÀn
);

249 
LUA_TUSERDATA
: {

250 
TVÆue
 
uvÆue
;

251 
	`m¨kobje˘N
(
g
, 
	`gco2u
(
o
)->
më©abÀ
);

252 
	`gøy2bœck
(
o
);

253 
g
->
GCmemåav
 +
	`sizeud©a
(
	`gco2u
(
o
));

254 
	`gëu£rvÆue
(
g
->
maöthªad
, 
	`gco2u
(
o
), &
uvÆue
);

255 i‡(
	`vÆiswhôe
(&
uvÆue
)) {

256 
o
 = 
	`gcvÆue
(&
uvÆue
);

257 
ªíåy
;

261 
LUA_TLCL
: {

262 
	`lökg˛i°
(
	`gco2l˛
(
o
), 
g
->
gøy
);

265 
LUA_TCCL
: {

266 
	`lökg˛i°
(
	`gco2c˛
(
o
), 
g
->
gøy
);

269 
LUA_TTABLE
: {

270 
	`lökg˛i°
(
	`gco2t
(
o
), 
g
->
gøy
);

273 
LUA_TTHREAD
: {

274 
	`lökg˛i°
(
	`gco2th
(
o
), 
g
->
gøy
);

277 
LUA_TPROTO
: {

278 
	`lökg˛i°
(
	`gco2p
(
o
), 
g
->
gøy
);

281 : 
	`lua_as£π
(0); ;

283 
	}
}

289 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

290 
i
;

291 
i
=0; i < 
LUA_NUMTAGS
; i++)

292 
	`m¨kobje˘N
(
g
, g->
mt
[
i
]);

293 
	}
}

299 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

300 
GCObje˘
 *
o
;

301 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = o->
√xt
)

302 
	`m¨kobje˘
(
g
, 
o
);

303 
	}
}

312 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

313 
lua_Sèã
 *
thªad
;

314 
lua_Sèã
 **
p
 = &
g
->
twups
;

315 (
thªad
 = *
p
Ë!
NULL
) {

316 
	`lua_as£π
(!
	`isbœck
(
thªad
));

317 i‡(
	`isgøy
(
thªad
Ë&&Åhªad->
›íupvÆ
 !
NULL
)

318 
p
 = &
thªad
->
twups
;

320 
UpVÆ
 *
uv
;

321 *
p
 = 
thªad
->
twups
;

322 
thªad
->
twups
 =Åhread;

323 
uv
 = 
thªad
->
›íupvÆ
; uv !
NULL
; uv = uv->
u
.
›í
.
√xt
) {

324 i‡(
uv
->
u
.
›í
.
touched
) {

325 
	`m¨kvÆue
(
g
, 
uv
->
v
);

326 
uv
->
u
.
›í
.
touched
 = 0;

331 
	}
}

337 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

338 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

339 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

340 
	`m¨kobje˘
(
g
, g->
maöthªad
);

341 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

342 
	`m¨kmt
(
g
);

343 
	`m¨kbeög‚z
(
g
);

344 
	}
}

361 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

362 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

365 
has˛órs
 = (
h
->
sizóºay
 > 0);

366 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

367 
	`checkdódkey
(
n
);

368 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

369 
	`ªmovì¡ry
(
n
);

371 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

372 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

373 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

374 
has˛órs
 = 1;

377 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

378 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

379 i‡(
has˛órs
)

380 
	`lökg˛i°
(
h
, 
g
->
wók
);

381 
	}
}

394 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

395 
m¨ked
 = 0;

396 
has˛órs
 = 0;

397 
hasww
 = 0;

398 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

399 
i
;

401 
i
 = 0; i < 
h
->
sizóºay
; i++) {

402 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

403 
m¨ked
 = 1;

404 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

408 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

409 
	`checkdódkey
(
n
);

410 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

411 
	`ªmovì¡ry
(
n
);

412 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

413 
has˛órs
 = 1;

414 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

415 
hasww
 = 1;

417 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

418 
m¨ked
 = 1;

419 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

423 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

424 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

425 i‡(
hasww
)

426 
	`lökg˛i°
(
h
, 
g
->
ïhemî⁄
);

427 i‡(
has˛órs
)

428 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

429  
m¨ked
;

430 
	}
}

433 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

434 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

435 
i
;

436 
i
 = 0; i < 
h
->
sizóºay
; i++)

437 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

438 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

439 
	`checkdódkey
(
n
);

440 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

441 
	`ªmovì¡ry
(
n
);

443 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

444 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

445 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

448 
	}
}

451 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

452 c⁄° *
wókkey
, *
wókvÆue
;

453 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

454 
	`m¨kobje˘N
(
g
, 
h
->
më©abÀ
);

455 i‡(
mode
 && 
	`âis°rög
(mode) &&

456 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

457 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

458 (
wókkey
 || 
wókvÆue
))) {

459 
	`bœck2gøy
(
h
);

460 i‡(!
wókkey
)

461 
	`åavî£wókvÆue
(
g
, 
h
);

462 i‡(!
wókvÆue
)

463 
	`åavî£ïhemî⁄
(
g
, 
h
);

465 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

468 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

469  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

470 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`Ælocsizíode
(
h
));

471 
	}
}

479 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

480 
i
;

481 i‡(
f
->
ˇche
 && 
	`iswhôe
(f->cache))

482 
f
->
ˇche
 = 
NULL
;

483 
	`m¨kobje˘N
(
g
, 
f
->
sour˚
);

484 
i
 = 0; i < 
f
->
sizek
; i++)

485 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

486 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

487 
	`m¨kobje˘N
(
g
, 
f
->
upvÆues
[
i
].
«me
);

488 
i
 = 0; i < 
f
->
sizï
; i++)

489 
	`m¨kobje˘N
(
g
, 
f
->
p
[
i
]);

490 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

491 
	`m¨kobje˘N
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

492  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

493 (
PrŸo
 *Ë* 
f
->
sizï
 +

494 (
TVÆue
Ë* 
f
->
sizek
 +

495 (Ë* 
f
->
sizñöeöfo
 +

496 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

497 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

498 
	}
}

501 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

502 
i
;

503 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

504 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

505  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

506 
	}
}

514 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

515 
i
;

516 
	`m¨kobje˘N
(
g
, 
˛
->
p
);

517 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

518 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

519 i‡(
uv
 !
NULL
) {

520 i‡(
	`upis›í
(
uv
Ë&& 
g
->
gc°©e
 !
GCSösidótomic
)

521 
uv
->
u
.
›í
.
touched
 = 1;

523 
	`m¨kvÆue
(
g
, 
uv
->
v
);

526  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

527 
	}
}

530 
lu_mem
 
	$åavî£thªad
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

531 
StkId
 
o
 = 
th
->
°ack
;

532 i‡(
o
 =
NULL
)

534 
	`lua_as£π
(
g
->
gc°©e
 =
GCSösidótomic
 ||

535 
th
->
›íupvÆ
 =
NULL
 || 
	`isötwups
(th));

536 ; 
o
 < 
th
->
t›
; o++)

537 
	`m¨kvÆue
(
g
, 
o
);

538 i‡(
g
->
gc°©e
 =
GCSösidótomic
) {

539 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

540 ; 
o
 < 
lim
; o++)

541 
	`£äûvÆue
(
o
);

543 i‡(!
	`isötwups
(
th
Ë&&Åh->
›íupvÆ
 !
NULL
) {

544 
th
->
twups
 = 
g
->twups;

545 
g
->
twups
 = 
th
;

548 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
)

549 
	`luaD_shrök°ack
(
th
);

550  ((
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
 +

551 (
CÆlInfo
Ë* 
th
->
nci
);

552 
	}
}

559 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

560 
lu_mem
 
size
;

561 
GCObje˘
 *
o
 = 
g
->
gøy
;

562 
	`lua_as£π
(
	`isgøy
(
o
));

563 
	`gøy2bœck
(
o
);

564 
o
->
â
) {

565 
LUA_TTABLE
: {

566 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

567 
g
->
gøy
 = 
h
->
g˛i°
;

568 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

571 
LUA_TLCL
: {

572 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

573 
g
->
gøy
 = 
˛
->
g˛i°
;

574 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

577 
LUA_TCCL
: {

578 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

579 
g
->
gøy
 = 
˛
->
g˛i°
;

580 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

583 
LUA_TTHREAD
: {

584 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

585 
g
->
gøy
 = 
th
->
g˛i°
;

586 
	`lökg˛i°
(
th
, 
g
->
gøyagaö
);

587 
	`bœck2gøy
(
o
);

588 
size
 = 
	`åavî£thªad
(
g
, 
th
);

591 
LUA_TPROTO
: {

592 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

593 
g
->
gøy
 = 
p
->
g˛i°
;

594 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

597 : 
	`lua_as£π
(0); ;

599 
g
->
GCmemåav
 +
size
;

600 
	}
}

603 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

604 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

605 
	}
}

608 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

609 
ch™ged
;

611 
GCObje˘
 *
w
;

612 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

613 
g
->
ïhemî⁄
 = 
NULL
;

614 
ch™ged
 = 0;

615 (
w
 = 
√xt
Ë!
NULL
) {

616 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

617 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

618 
	`¥›ag©óŒ
(
g
);

619 
ch™ged
 = 1;

622 } 
ch™ged
);

623 
	}
}

639 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

640 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

641 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

642 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

643 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

644 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

645 
	`£äûvÆue
(
	`gvÆ
(
n
));

647 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

648 
	`ªmovì¡ry
(
n
);

651 
	}
}

658 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

659 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

660 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

661 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

662 
i
;

663 
i
 = 0; i < 
h
->
sizóºay
; i++) {

664 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

665 i‡(
	`is˛óªd
(
g
, 
o
))

666 
	`£äûvÆue
(
o
);

668 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

669 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

670 
	`£äûvÆue
(
	`gvÆ
(
n
));

671 
	`ªmovì¡ry
(
n
);

675 
	}
}

678 
	$luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

679 
	`lua_as£π
(
uv
->
ªfcou¡
 > 0);

680 
uv
->
ªfcou¡
--;

681 i‡(
uv
->
ªfcou¡
 =0 && !
	`upis›í
(uv))

682 
	`luaM_‰ì
(
L
, 
uv
);

683 
	}
}

686 
	$‰ìL˛osuª
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

687 
i
;

688 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

689 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

690 i‡(
uv
)

691 
	`luaC_upvdeccou¡
(
L
, 
uv
);

693 
	`luaM_‰ìmem
(
L
, 
˛
, 
	`sizeL˛osuª
(˛->
nupvÆues
));

694 
	}
}

697 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

698 
o
->
â
) {

699 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

700 
LUA_TLCL
: {

701 
	`‰ìL˛osuª
(
L
, 
	`gco2l˛
(
o
));

704 
LUA_TCCL
: {

705 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

708 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

709 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

710 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

711 
LUA_TSHRSTR
:

712 
	`luaS_ªmove
(
L
, 
	`gco2ts
(
o
));

713 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
shæí
));

715 
LUA_TLNGSTR
: {

716 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
u
.
 gÀn
));

719 : 
	`lua_as£π
(0);

721 
	}
}

724 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

725 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

735 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

736 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

737 
ow
 = 
	`Ÿhîwhôe
(
g
);

738 
whôe
 = 
	`luaC_whôe
(
g
);

739 *
p
 !
NULL
 && 
cou¡
-- > 0) {

740 
GCObje˘
 *
cuº
 = *
p
;

741 
m¨ked
 = 
cuº
->marked;

742 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

743 *
p
 = 
cuº
->
√xt
;

744 
	`‰ìobj
(
L
, 
cuº
);

747 
cuº
->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
maskcﬁ‹s
Ë| 
whôe
);

748 
p
 = &
cuº
->
√xt
;

751  (*
p
 =
NULL
) ? NULL :Ö;

752 
	}
}

758 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
) {

759 
GCObje˘
 **
ﬁd
 = 
p
;

761 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

762 } 
p
 =
ﬁd
);

763  
p
;

764 
	}
}

778 
	$checkSizes
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

779 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

780 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

781 i‡(
g
->
°π
.
nu£
 < g->°π.
size
 / 4)

782 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 / 2);

783 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

785 
	}
}

788 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

789 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

790 
	`lua_as£π
(
	`toföÆize
(
o
));

791 
g
->
tobe‚z
 = 
o
->
√xt
;

792 
o
->
√xt
 = 
g
->
Ælgc
;

793 
g
->
Ælgc
 = 
o
;

794 
	`ª£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

795 i‡(
	`isswìµha£
(
g
))

796 
	`makewhôe
(
g
, 
o
);

797  
o
;

798 
	}
}

801 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

802 
	`UNUSED
(
ud
);

803 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 0);

804 
	}
}

807 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

808 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

809 c⁄° 
TVÆue
 *
tm
;

810 
TVÆue
 
v
;

811 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

812 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

813 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

814 
°©us
;

815 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

816 
ru¬ög
 = 
g
->
g¸u¬ög
;

817 
L
->
Ælowhook
 = 0;

818 
g
->
g¸u¬ög
 = 0;

819 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

820 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

821 
L
->
t›
 += 2;

822 
L
->
ci
->
ˇŒ°©us
 |
CIST_FIN
;

823 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

824 
L
->
ci
->
ˇŒ°©us
 &~
CIST_FIN
;

825 
L
->
Ælowhook
 = 
ﬁdah
;

826 
g
->
g¸u¬ög
 = 
ru¬ög
;

827 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

828 i‡(
°©us
 =
LUA_ERRRUN
) {

829 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

830 ? 
	`svÆue
(
L
->
t›
 - 1)

832 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

833 
°©us
 = 
LUA_ERRGCMM
;

835 
	`luaD_throw
(
L
, 
°©us
);

838 
	}
}

844 
	$ru«„wföÆizîs
 (
lua_Sèã
 *
L
) {

845 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

846 
i
;

847 
	`lua_as£π
(!
g
->
tobe‚z
 || g->
gcfönum
 > 0);

848 
i
 = 0; 
g
->
tobe‚z
 && i < g->
gcfönum
; i++)

849 
	`GCTM
(
L
, 1);

850 
g
->
gcfönum
 = (!g->
tobe‚z
) ? 0

851 : 
g
->
gcfönum
 * 2;

852  
i
;

853 
	}
}

859 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
) {

860 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

861 
g
->
tobe‚z
)

862 
	`GCTM
(
L
, 0);

863 
	}
}

869 
GCObje˘
 **
	$födœ°
 (
GCObje˘
 **
p
) {

870 *
p
 !
NULL
)

871 
p
 = &(*p)->
√xt
;

872  
p
;

873 
	}
}

880 
	$£∑øãtobe‚z
 (
globÆ_Sèã
 *
g
, 
Æl
) {

881 
GCObje˘
 *
cuº
;

882 
GCObje˘
 **
p
 = &
g
->
föobj
;

883 
GCObje˘
 **
œ°√xt
 = 
	`födœ°
(&
g
->
tobe‚z
);

884 (
cuº
 = *
p
Ë!
NULL
) {

885 
	`lua_as£π
(
	`toföÆize
(
cuº
));

886 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

887 
p
 = &
cuº
->
√xt
;

889 *
p
 = 
cuº
->
√xt
;

890 
cuº
->
√xt
 = *
œ°√xt
;

891 *
œ°√xt
 = 
cuº
;

892 
œ°√xt
 = &
cuº
->
√xt
;

895 
	}
}

902 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

903 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

904 i‡(
	`toföÆize
(
o
) ||

905 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

908 
GCObje˘
 **
p
;

909 i‡(
	`isswìµha£
(
g
)) {

910 
	`makewhôe
(
g
, 
o
);

911 i‡(
g
->
swìpgc
 =&
o
->
√xt
)

912 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->sweepgc);

915 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &(*p)->
√xt
) { }

916 *
p
 = 
o
->
√xt
;

917 
o
->
√xt
 = 
g
->
föobj
;

918 
g
->
föobj
 = 
o
;

919 
	`l_£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

921 
	}
}

940 
	$£çau£
 (
globÆ_Sèã
 *
g
) {

941 
l_mem
 
thªshﬁd
, 
debt
;

942 
l_mem
 
e°im©e
 = 
g
->
GCe°im©e
 / 
PAUSEADJ
;

943 
	`lua_as£π
(
e°im©e
 > 0);

944 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

945 ? 
e°im©e
 * 
g
->
g˝au£


946 : 
MAX_LMEM
;

947 
debt
 = 
	`gëtŸÆbyãs
(
g
Ë- 
thªshﬁd
;

948 
	`luaE_£tdebt
(
g
, 
debt
);

949 
	}
}

959 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

960 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

961 
g
->
gc°©e
 = 
GCSsw∑Œgc
;

962 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
);

963 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, &g->
Ælgc
, 1);

964 
	}
}

967 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

968 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

969 
	`£∑øãtobe‚z
(
g
, 1);

970 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

971 
	`ˇŒÆÕídögföÆizîs
(
L
);

972 
	`lua_as£π
(
g
->
tobe‚z
 =
NULL
);

973 
g
->
cuºítwhôe
 = 
WHITEBITS
;

974 
g
->
gcköd
 = 
KGC_NORMAL
;

975 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

976 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

977 
	`swìpwhﬁñi°
(
L
, &
g
->
fixedgc
);

978 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

979 
	}
}

982 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

983 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

984 
l_mem
 
w‹k
;

985 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

986 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

987 
	`lua_as£π
(
g
->
ïhemî⁄
 =
NULL
 && g->
wók
 == NULL);

988 
	`lua_as£π
(!
	`iswhôe
(
g
->
maöthªad
));

989 
g
->
gc°©e
 = 
GCSösidótomic
;

990 
g
->
GCmemåav
 = 0;

991 
	`m¨kobje˘
(
g
, 
L
);

993 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

994 
	`m¨kmt
(
g
);

996 
	`ªm¨kupvÆs
(
g
);

997 
	`¥›ag©óŒ
(
g
);

998 
w‹k
 = 
g
->
GCmemåav
;

999 
g
->
gøy
 = 
gøyagaö
;

1000 
	`¥›ag©óŒ
(
g
);

1001 
g
->
GCmemåav
 = 0;

1002 
	`c⁄vîgìphemî⁄s
(
g
);

1005 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

1006 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

1007 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

1008 
w‹k
 +
g
->
GCmemåav
;

1009 
	`£∑øãtobe‚z
(
g
, 0);

1010 
g
->
gcfönum
 = 1;

1011 
	`m¨kbeög‚z
(
g
);

1012 
	`¥›ag©óŒ
(
g
);

1013 
g
->
GCmemåav
 = 0;

1014 
	`c⁄vîgìphemî⁄s
(
g
);

1017 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1018 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1020 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1021 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1022 
	`luaS_˛órˇche
(
g
);

1023 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1024 
w‹k
 +
g
->
GCmemåav
;

1025  
w‹k
;

1026 
	}
}

1029 
lu_mem
 
	$swìp°ï
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
,

1030 
√xt°©e
, 
GCObje˘
 **
√xéi°
) {

1031 i‡(
g
->
swìpgc
) {

1032 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

1033 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1034 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

1035 i‡(
g
->
swìpgc
)

1036  (
GCSWEEPMAX
 * 
GCSWEEPCOST
);

1039 
g
->
gc°©e
 = 
√xt°©e
;

1040 
g
->
swìpgc
 = 
√xéi°
;

1042 
	}
}

1045 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1046 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1047 
g
->
gc°©e
) {

1048 
GCS∑u£
: {

1049 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1050 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1051 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1052  
g
->
GCmemåav
;

1054 
GCS¥›ag©e
: {

1055 
g
->
GCmemåav
 = 0;

1056 
	`lua_as£π
(
g
->
gøy
);

1057 
	`¥›ag©em¨k
(
g
);

1058 i‡(
g
->
gøy
 =
NULL
)

1059 
g
->
gc°©e
 = 
GCS©omic
;

1060  
g
->
GCmemåav
;

1062 
GCS©omic
: {

1063 
lu_mem
 
w‹k
;

1064 
	`¥›ag©óŒ
(
g
);

1065 
w‹k
 = 
	`©omic
(
L
);

1066 
	`íãrswìp
(
L
);

1067 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g); ;

1068  
w‹k
;

1070 
GCSsw∑Œgc
: {

1071  
	`swìp°ï
(
L
, 
g
, 
GCSswpföobj
, &g->
föobj
);

1073 
GCSswpföobj
: {

1074  
	`swìp°ï
(
L
, 
g
, 
GCSsw±obe‚z
, &g->
tobe‚z
);

1076 
GCSsw±obe‚z
: {

1077  
	`swìp°ï
(
L
, 
g
, 
GCSsw≥nd
, 
NULL
);

1079 
GCSsw≥nd
: {

1080 
	`makewhôe
(
g
, g->
maöthªad
);

1081 
	`checkSizes
(
L
, 
g
);

1082 
g
->
gc°©e
 = 
GCSˇŒfö
;

1085 
GCSˇŒfö
: {

1086 i‡(
g
->
tobe‚z
 && g->
gcköd
 !
KGC_EMERGENCY
) {

1087 
n
 = 
	`ru«„wföÆizîs
(
L
);

1088  (
n
 * 
GCFINALIZECOST
);

1091 
g
->
gc°©e
 = 
GCS∑u£
;

1095 : 
	`lua_as£π
(0);  0;

1097 
	}
}

1104 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1105 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1106 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1107 
	`sögÀ°ï
(
L
);

1108 
	}
}

1115 
l_mem
 
	$gëdebt
 (
globÆ_Sèã
 *
g
) {

1116 
l_mem
 
debt
 = 
g
->
GCdebt
;

1117 
°ïmul
 = 
g
->
gc°ïmul
;

1118 i‡(
debt
 <= 0)  0;

1120 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1121 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1122  
debt
;

1124 
	}
}

1129 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1130 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1131 
l_mem
 
debt
 = 
	`gëdebt
(
g
);

1132 i‡(!
g
->
g¸u¬ög
) {

1133 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
 * 10);

1137 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1138 
debt
 -
w‹k
;

1139 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1140 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1141 
	`£çau£
(
g
);

1143 
debt
 = (debà/ 
g
->
gc°ïmul
Ë* 
STEPMULADJ
;

1144 
	`luaE_£tdebt
(
g
, 
debt
);

1145 
	`ru«„wföÆizîs
(
L
);

1147 
	}
}

1159 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1160 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1161 
	`lua_as£π
(
g
->
gcköd
 =
KGC_NORMAL
);

1162 i‡(
i£mîgícy
Ë
g
->
gcköd
 = 
KGC_EMERGENCY
;

1163 i‡(
	`kìpöv¨ü¡
(
g
)) {

1164 
	`íãrswìp
(
L
);

1167 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1168 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1169 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCSˇŒfö
));

1171 
	`lua_as£π
(
g
->
GCe°im©e
 =
	`gëtŸÆbyãs
(g));

1172 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1173 
g
->
gcköd
 = 
KGC_NORMAL
;

1174 
	`£çau£
(
g
);

1175 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lgc.h

7 #i‚de‡
lgc_h


8 
	#lgc_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

30 #i‡!
deföed
(
GCSTEPSIZE
)

32 
	#GCSTEPSIZE
 (
	`ˇ°_öt
(100 * (
TSåög
)))

	)

39 
	#GCS¥›ag©e
 0

	)

40 
	#GCS©omic
 1

	)

41 
	#GCSsw∑Œgc
 2

	)

42 
	#GCSswpföobj
 3

	)

43 
	#GCSsw±obe‚z
 4

	)

44 
	#GCSsw≥nd
 5

	)

45 
	#GCSˇŒfö
 6

	)

46 
	#GCS∑u£
 7

	)

49 
	#isswìµha£
(
g
) \

50 (
GCSsw∑Œgc
 <(
g
)->
gc°©e
 && (g)->gc°©ê<
GCSsw≥nd
)

	)

61 
	#kìpöv¨ü¡
(
g
Ë((g)->
gc°©e
 <
GCS©omic
)

	)

67 
	#ª£tbôs
(
x
,
m
Ë((xË&
	`ˇ°
(
lu_byã
, ~(m)))

	)

68 
	#£tbôs
(
x
,
m
Ë((xË|(m))

	)

69 
	#ã°bôs
(
x
,
m
Ë((xË& (m))

	)

70 
	#bômask
(
b
Ë(1<<(b))

	)

71 
	#bô2mask
(
b1
,
b2
Ë(
	`bômask
(b1Ë| bômask(b2))

	)

72 
	#l_£tbô
(
x
,
b
Ë
	`£tbôs
(x, 
	`bômask
(b))

	)

73 
	#ª£tbô
(
x
,
b
Ë
	`ª£tbôs
(x, 
	`bômask
(b))

	)

74 
	#ã°bô
(
x
,
b
Ë
	`ã°bôs
(x, 
	`bômask
(b))

	)

78 
	#WHITE0BIT
 0

	)

79 
	#WHITE1BIT
 1

	)

80 
	#BLACKBIT
 2

	)

81 
	#FINALIZEDBIT
 3

	)

84 
	#WHITEBITS
 
	`bô2mask
(
WHITE0BIT
, 
WHITE1BIT
)

	)

87 
	#iswhôe
(
x
Ë
	`ã°bôs
((x)->
m¨ked
, 
WHITEBITS
)

	)

88 
	#isbœck
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
BLACKBIT
)

	)

89 
	#isgøy
(
x
) \

90 (!
	`ã°bôs
((
x
)->
m¨ked
, 
WHITEBITS
 | 
	`bômask
(
BLACKBIT
)))

	)

92 
	#toföÆize
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
FINALIZEDBIT
)

	)

94 
	#Ÿhîwhôe
(
g
Ë((g)->
cuºítwhôe
 ^ 
WHITEBITS
)

	)

95 
	#isdódm
(
ow
,
m
Ë(!(((mË^ 
WHITEBITS
Ë& (ow)))

	)

96 
	#isdód
(
g
,
v
Ë
	`isdódm
(
	`Ÿhîwhôe
(g), (v)->
m¨ked
)

	)

98 
	#ch™gewhôe
(
x
Ë((x)->
m¨ked
 ^
WHITEBITS
)

	)

99 
	#gøy2bœck
(
x
Ë
	`l_£tbô
((x)->
m¨ked
, 
BLACKBIT
)

	)

101 
	#luaC_whôe
(
g
Ë
	`ˇ°
(
lu_byã
, (g)->
cuºítwhôe
 & 
WHITEBITS
)

	)

110 
	#luaC_c⁄dGC
(
L
,
¥e
,
pos
) \

111 { i‡(
	`G
(
L
)->
GCdebt
 > 0Ë{ 
¥e
; 
	`luaC_°ï
(L); 
pos
;}; \

112 
	`c⁄dch™gemem
(
L
,
¥e
,
pos
); }

	)

115 
	#luaC_checkGC
(
L
Ë
	`luaC_c⁄dGC
(L,()0,()0)

	)

118 
	#luaC_b¨rõr
(
L
,
p
,
v
) ( \

119 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

120 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),
	`gcvÆue
(
v
)Ë: 
	`ˇ°_void
(0))

	)

122 
	#luaC_b¨rõrback
(
L
,
p
,
v
) ( \

123 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

124 
	`luaC_b¨rõrback_
(
L
,
p
Ë: 
	`ˇ°_void
(0))

	)

126 
	#luaC_objb¨rõr
(
L
,
p
,
o
) ( \

127 (
	`isbœck
(
p
Ë&& 
	`iswhôe
(
o
)) ? \

128 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),obj2gco(
o
)Ë: 
	`ˇ°_void
(0))

	)

130 
	#luaC_upvÆb¨rõr
(
L
,
uv
) ( \

131 (
	`iscﬁÀ˘abÀ
((
uv
)->
v
Ë&& !
	`upis›í
(uv)) ? \

132 
	`luaC_upvÆb¨rõr_
(
L
,
uv
Ë: 
	`ˇ°_void
(0))

	)

134 
LUAI_FUNC
 
luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
);

135 
LUAI_FUNC
 
luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
);

136 
LUAI_FUNC
 
luaC_°ï
 (
lua_Sèã
 *
L
);

137 
LUAI_FUNC
 
luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
);

138 
LUAI_FUNC
 
luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
);

139 
LUAI_FUNC
 
GCObje˘
 *
luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
);

140 
LUAI_FUNC
 
luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
);

141 
LUAI_FUNC
 
luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
o
);

142 
LUAI_FUNC
 
luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

143 
LUAI_FUNC
 
luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
);

144 
LUAI_FUNC
 
luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/linit.c

8 
	#löô_c


	)

9 
	#LUA_LIB


	)

27 
	~"Õªfix.h
"

30 
	~<°ddef.h
>

32 
	~"lua.h
"

34 
	~"luÆib.h
"

35 
	~"œuxlib.h
"

42 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

43 {"_G", 
lua›í_ba£
},

44 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

45 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

46 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

47 {
LUA_IOLIBNAME
, 
lua›í_io
},

48 {
LUA_OSLIBNAME
, 
lua›í_os
},

49 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

50 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

51 {
LUA_UTF8LIBNAME
, 
lua›í_utf8
},

52 {
LUA_DBLIBNAME
, 
lua›í_debug
},

53 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

54 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

56 {
NULL
, NULL}

60 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

61 c⁄° 
luaL_Reg
 *
lib
;

63 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

64 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

65 
	`lua_p›
(
L
, 1);

67 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/liolib.c

7 
	#liﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<loˇÀ.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

32 #i‡!
deföed
(
l_checkmode
)

35 #i‡!
deföed
(
L_MODEEXT
)

36 
	#L_MODEEXT
 "b"

	)

40 
	$l_checkmode
 (c⁄° *
mode
) {

41  (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 &&

42 (*
mode
 != '+' || (++mode, 1)) &&

43 (
	`°r•n
(
mode
, 
L_MODEEXT
Ë=
	`°æí
(mode)));

44 
	}
}

55 #i‡!
deföed
(
l_p›í
)

57 #i‡
deföed
(
LUA_USE_POSIX
)

59 
	#l_p›í
(
L
,
c
,
m
Ë(
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

60 
	#l_p˛o£
(
L
,
fûe
Ë(
	`p˛o£
(fûe))

	)

62 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

64 
	#l_p›í
(
L
,
c
,
m
Ë(
	`_p›í
(c,m))

	)

65 
	#l_p˛o£
(
L
,
fûe
Ë(
	`_p˛o£
(fûe))

	)

70 
	#l_p›í
(
L
,
c
,
m
) \

71 (()(()
c
, 
m
), \

72 
	`luaL_îr‹
(
L
, "'popen'Çot supported"), \

73 (
FILE
*)0)

	)

74 
	#l_p˛o£
(
L
,
fûe
Ë(()L, ()fûe, -1)

	)

83 #i‡!
deföed
(
l_gëc
)

85 #i‡
deföed
(
LUA_USE_POSIX
)

86 
	#l_gëc
(
f
Ë
	`gëc_u∆ocked
(f)

	)

87 
	#l_lockfûe
(
f
Ë
	`Êockfûe
(f)

	)

88 
	#l_u∆ockfûe
(
f
Ë
	`fu∆ockfûe
(f)

	)

90 
	#l_gëc
(
f
Ë
	`gëc
(f)

	)

91 
	#l_lockfûe
(
f
Ë(()0)

	)

92 
	#l_u∆ockfûe
(
f
Ë(()0)

	)

104 #i‡!
deföed
(
l_f£ek
)

106 #i‡
deföed
(
LUA_USE_POSIX
)

108 
	~<sys/ty≥s.h
>

110 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

111 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

112 
	#l_£eknum
 
off_t


	)

114 #ñi‡
deföed
(
LUA_USE_WINDOWS
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

115 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

118 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

119 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

120 
	#l_£eknum
 
__öt64


	)

125 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

126 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

127 
	#l_£eknum
 

	)

136 
	#IO_PREFIX
 "_IO_"

	)

137 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

138 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

139 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

142 
luaL_Såóm
 
	tLSåóm
;

145 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

147 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

150 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

151 
LSåóm
 *
p
;

152 
	`luaL_check™y
(
L
, 1);

153 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

154 i‡(
p
 =
NULL
)

155 
	`lua_pushnû
(
L
);

156 i‡(
	`is˛o£d
(
p
))

157 
	`lua_pushlôîÆ
(
L
, "closed file");

159 
	`lua_pushlôîÆ
(
L
, "file");

161 
	}
}

164 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

165 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

166 i‡(
	`is˛o£d
(
p
))

167 
	`lua_pushlôîÆ
(
L
, "file (closed)");

169 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

171 
	}
}

174 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

175 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

176 i‡(
	`is˛o£d
(
p
))

177 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

178 
	`lua_as£π
(
p
->
f
);

179  
p
->
f
;

180 
	}
}

188 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

189 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

190 
p
->
˛o£f
 = 
NULL
;

191 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

192  
p
;

193 
	}
}

201 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

202 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

203 vﬁ©ûê
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

204 
p
->
˛o£f
 = 
NULL
;

205  (*
cf
)(
L
);

206 
	}
}

209 
	$f_˛o£
 (
lua_Sèã
 *
L
) {

210 
	`tofûe
(
L
);

211  
	`aux_˛o£
(
L
);

212 
	}
}

215 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

216 i‡(
	`lua_i¢⁄e
(
L
, 1))

217 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

218  
	`f_˛o£
(
L
);

219 
	}
}

222 
	$f_gc
 (
lua_Sèã
 *
L
) {

223 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

224 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

225 
	`aux_˛o£
(
L
);

227 
	}
}

233 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

234 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

235 
ªs
 = 
	`f˛o£
(
p
->
f
);

236  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

237 
	}
}

240 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

241 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

242 
p
->
f
 = 
NULL
;

243 
p
->
˛o£f
 = &
io_f˛o£
;

244  
p
;

245 
	}
}

248 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

249 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

250 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

251 i‡(
p
->
f
 =
NULL
)

252 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê'%s' (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

253 
	}
}

256 
	$io_›í
 (
lua_Sèã
 *
L
) {

257 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

258 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

259 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

260 c⁄° *
md
 = 
mode
;

261 
	`luaL_¨gcheck
(
L
, 
	`l_checkmode
(
md
), 2, "invalid mode");

262 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

263  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

264 
	}
}

270 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

271 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

272  
	`luaL_exe¸esu…
(
L
, 
	`l_p˛o£
(L, 
p
->
f
));

273 
	}
}

276 
	$io_p›í
 (
lua_Sèã
 *
L
) {

277 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

278 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

279 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

280 
p
->
f
 = 
	`l_p›í
(
L
, 
fûíame
, 
mode
);

281 
p
->
˛o£f
 = &
io_p˛o£
;

282  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

283 
	}
}

286 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

287 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

288 
p
->
f
 = 
	`tmpfûe
();

289  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

290 
	}
}

293 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

294 
LSåóm
 *
p
;

295 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

296 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

297 i‡(
	`is˛o£d
(
p
))

298 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
IOPREF_LEN
);

299  
p
->
f
;

300 
	}
}

303 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

304 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

305 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

306 i‡(
fûíame
)

307 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

309 
	`tofûe
(
L
);

310 
	`lua_pushvÆue
(
L
, 1);

312 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

315 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

317 
	}
}

320 
	$io_öput
 (
lua_Sèã
 *
L
) {

321  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

322 
	}
}

325 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

326  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

327 
	}
}

330 
io_ªadlöe
 (
lua_Sèã
 *
L
);

337 
	#MAXARGLINE
 250

	)

339 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

340 
n
 = 
	`lua_gët›
(
L
) - 1;

341 
	`luaL_¨gcheck
(
L
, 
n
 <
MAXARGLINE
, MAXARGLINE + 2, "too manyárguments");

342 
	`lua_pushöãgî
(
L
, 
n
);

343 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

344 
	`lua_rŸ©e
(
L
, 2, 2);

345 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

346 
	}
}

349 
	$f_löes
 (
lua_Sèã
 *
L
) {

350 
	`tofûe
(
L
);

351 
	`aux_löes
(
L
, 0);

353 
	}
}

356 
	$io_löes
 (
lua_Sèã
 *
L
) {

357 
to˛o£
;

358 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

359 i‡(
	`lua_i¢û
(
L
, 1)) {

360 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

361 
	`lua_ª∂a˚
(
L
, 1);

362 
	`tofûe
(
L
);

363 
to˛o£
 = 0;

366 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

367 
	`›ícheck
(
L
, 
fûíame
, "r");

368 
	`lua_ª∂a˚
(
L
, 1);

369 
to˛o£
 = 1;

371 
	`aux_löes
(
L
, 
to˛o£
);

373 
	}
}

384 #i‡!
deföed
 (
L_MAXLENNUM
)

385 
	#L_MAXLENNUM
 200

	)

391 
FILE
 *
	mf
;

392 
	mc
;

393 
	mn
;

394 
	mbuff
[
L_MAXLENNUM
 + 1];

395 } 
	tRN
;

401 
	$√xtc
 (
RN
 *
∫
) {

402 i‡(
∫
->
n
 >
L_MAXLENNUM
) {

403 
∫
->
buff
[0] = '\0';

407 
∫
->
buff
[∫->
n
++] =Ñn->
c
;

408 
∫
->
c
 = 
	`l_gëc
‘n->
f
);

411 
	}
}

417 
	$ã°2
 (
RN
 *
∫
, c⁄° *
£t
) {

418 i‡(
∫
->
c
 =
£t
[0] ||Ñn->c == set[1])

419  
	`√xtc
(
∫
);

421 
	}
}

427 
	$ªaddigôs
 (
RN
 *
∫
, 
hex
) {

428 
cou¡
 = 0;

429 (
hex
 ? 
	`isxdigô
(
∫
->
c
Ë: 
	`isdigô
‘n->c)Ë&& 
	`√xtc
(rn))

430 
cou¡
++;

431  
cou¡
;

432 
	}
}

440 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

441 
RN
 
∫
;

442 
cou¡
 = 0;

443 
hex
 = 0;

444 
de˝
[2];

445 
∫
.
f
 = f;Ñn.
n
 = 0;

446 
de˝
[0] = 
	`lua_gëloˇÀde˝oöt
();

447 
de˝
[1] = '.';

448 
	`l_lockfûe
(
∫
.
f
);

449 dÿ{ 
∫
.
c
 = 
	`l_gëc
‘n.
f
); } 
	`is•a˚
(rn.c));

450 
	`ã°2
(&
∫
, "-+");

451 i‡(
	`ã°2
(&
∫
, "00")) {

452 i‡(
	`ã°2
(&
∫
, "xX")Ë
hex
 = 1;

453 
cou¡
 = 1;

455 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

456 i‡(
	`ã°2
(&
∫
, 
de˝
))

457 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

458 i‡(
cou¡
 > 0 && 
	`ã°2
(&
∫
, (
hex
 ? "pP" : "eE"))) {

459 
	`ã°2
(&
∫
, "-+");

460 
	`ªaddigôs
(&
∫
, 0);

462 
	`ungëc
(
∫
.
c
,Ñn.
f
);

463 
	`l_u∆ockfûe
(
∫
.
f
);

464 
∫
.
buff
[∫.
n
] = '\0';

465 i‡(
	`lua_°rögt⁄umbî
(
L
, 
∫
.
buff
))

468 
	`lua_pushnû
(
L
);

471 
	}
}

474 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

475 
c
 = 
	`gëc
(
f
);

476 
	`ungëc
(
c
, 
f
);

477 
	`lua_pushlôîÆ
(
L
, "");

478  (
c
 !
EOF
);

479 
	}
}

482 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

483 
luaL_Buf„r
 
b
;

484 
c
 = '\0';

485 
	`luaL_bufföô
(
L
, &
b
);

486 
c
 !
EOF
 && c != '\n') {

487 *
buff
 = 
	`luaL_¥ïbuf„r
(&
b
);

488 
i
 = 0;

489 
	`l_lockfûe
(
f
);

490 
i
 < 
LUAL_BUFFERSIZE
 && (
c
 = 
	`l_gëc
(
f
)Ë!
EOF
 && c != '\n')

491 
buff
[
i
++] = 
c
;

492 
	`l_u∆ockfûe
(
f
);

493 
	`luaL_addsize
(&
b
, 
i
);

495 i‡(!
ch›
 && 
c
 == '\n')

496 
	`luaL_addch¨
(&
b
, 
c
);

497 
	`luaL_pushªsu…
(&
b
);

499  (
c
 ='\n' || 
	`lua_øwÀn
(
L
, -1) > 0);

500 
	}
}

503 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

504 
size_t
 
ƒ
;

505 
luaL_Buf„r
 
b
;

506 
	`luaL_bufföô
(
L
, &
b
);

508 *
p
 = 
	`luaL_¥ïbuf„r
(&
b
);

509 
ƒ
 = 
	`‰ód
(
p
, (), 
LUAL_BUFFERSIZE
, 
f
);

510 
	`luaL_addsize
(&
b
, 
ƒ
);

511 } 
ƒ
 =
LUAL_BUFFERSIZE
);

512 
	`luaL_pushªsu…
(&
b
);

513 
	}
}

516 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

517 
size_t
 
ƒ
;

518 *
p
;

519 
luaL_Buf„r
 
b
;

520 
	`luaL_bufföô
(
L
, &
b
);

521 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

522 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

523 
	`luaL_addsize
(&
b
, 
ƒ
);

524 
	`luaL_pushªsu…
(&
b
);

525  (
ƒ
 > 0);

526 
	}
}

529 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

530 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

531 
suc˚ss
;

532 
n
;

533 
	`˛óªº
(
f
);

534 i‡(
«rgs
 == 0) {

535 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

536 
n
 = 
fú°
+1;

539 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

540 
suc˚ss
 = 1;

541 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

542 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

543 
size_t
 
l
 = (size_t)
	`luaL_checköãgî
(
L
, 
n
);

544 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

547 c⁄° *
p
 = 
	`luaL_check°rög
(
L
, 
n
);

548 i‡(*
p
 == '*')Ö++;

549 *
p
) {

551 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

554 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

557 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

560 
	`ªad_Æl
(
L
, 
f
);

561 
suc˚ss
 = 1;

564  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

569 i‡(
	`„º‹
(
f
))

570  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

571 i‡(!
suc˚ss
) {

572 
	`lua_p›
(
L
, 1);

573 
	`lua_pushnû
(
L
);

575  
n
 - 
fú°
;

576 
	}
}

579 
	$io_ªad
 (
lua_Sèã
 *
L
) {

580  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

581 
	}
}

584 
	$f_ªad
 (
lua_Sèã
 *
L
) {

585  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

586 
	}
}

589 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

590 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

591 
i
;

592 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

593 i‡(
	`is˛o£d
(
p
))

594  
	`luaL_îr‹
(
L
, "file isálready closed");

595 
	`lua_£â›
(
L
 , 1);

596 
	`luaL_check°ack
(
L
, 
n
, "too manyárguments");

597 
i
 = 1; i <
n
; i++)

598 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

599 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

600 
	`lua_as£π
(
n
 > 0);

601 i‡(
	`lua_toboﬁón
(
L
, -
n
))

602  
n
;

604 i‡(
n
 > 1) {

606  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

608 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

609 
	`lua_£â›
(
L
, 0);

610 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

611 
	`aux_˛o£
(
L
);

615 
	}
}

620 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

621 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

622 
°©us
 = 1;

623 ; 
«rgs
--; 
¨g
++) {

624 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

626 
Àn
 = 
	`lua_isöãgî
(
L
, 
¨g
)

627 ? 
	`Ârötf
(
f
, 
LUA_INTEGER_FMT
,

628 (
LUAI_UACINT
)
	`lua_toöãgî
(
L
, 
¨g
))

629 : 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
,

630 (
LUAI_UACNUMBER
)
	`lua_t⁄umbî
(
L
, 
¨g
));

631 
°©us
 = sètu†&& (
Àn
 > 0);

634 
size_t
 
l
;

635 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

636 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

639 i‡(
°©us
)  1;

640  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

641 
	}
}

644 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

645  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

646 
	}
}

649 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

650 
FILE
 *
f
 = 
	`tofûe
(
L
);

651 
	`lua_pushvÆue
(
L
, 1);

652  
	`g_wrôe
(
L
, 
f
, 2);

653 
	}
}

656 
	$f_£ek
 (
lua_Sèã
 *
L
) {

657 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

658 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

659 
FILE
 *
f
 = 
	`tofûe
(
L
);

660 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

661 
lua_I¡egî
 
p3
 = 
	`luaL_›töãgî
(
L
, 3, 0);

662 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

663 
	`luaL_¨gcheck
(
L
, (
lua_I¡egî
)
off£t
 =
p3
, 3,

665 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

666 i‡(
›
)

667  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

669 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
	`l_·ñl
(
f
));

672 
	}
}

675 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

676 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

677 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

678 
FILE
 *
f
 = 
	`tofûe
(
L
);

679 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

680 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

681 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], (
size_t
)
sz
);

682  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

683 
	}
}

687 
	$io_Êush
 (
lua_Sèã
 *
L
) {

688  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

689 
	}
}

692 
	$f_Êush
 (
lua_Sèã
 *
L
) {

693  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

694 
	}
}

700 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

701 {"˛o£", 
io_˛o£
},

702 {"Êush", 
io_Êush
},

703 {"öput", 
io_öput
},

704 {"löes", 
io_löes
},

705 {"›í", 
io_›í
},

706 {"ouçut", 
io_ouçut
},

707 {"p›í", 
io_p›í
},

708 {"ªad", 
io_ªad
},

709 {"tmpfûe", 
io_tmpfûe
},

710 {"ty≥", 
io_ty≥
},

711 {"wrôe", 
io_wrôe
},

712 {
NULL
, NULL}

719 c⁄° 
luaL_Reg
 
	gÊib
[] = {

720 {"˛o£", 
f_˛o£
},

721 {"Êush", 
f_Êush
},

722 {"löes", 
f_löes
},

723 {"ªad", 
f_ªad
},

724 {"£ek", 
f_£ek
},

725 {"£tvbuf", 
f_£tvbuf
},

726 {"wrôe", 
f_wrôe
},

727 {"__gc", 
f_gc
},

728 {"__to°rög", 
f_to°rög
},

729 {
NULL
, NULL}

733 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

734 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

735 
	`lua_pushvÆue
(
L
, -1);

736 
	`lua_£tfõld
(
L
, -2, "__index");

737 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

738 
	`lua_p›
(
L
, 1);

739 
	}
}

745 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

746 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

747 
p
->
˛o£f
 = &
io_no˛o£
;

748 
	`lua_pushnû
(
L
);

749 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

751 
	}
}

754 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

755 c⁄° *
‚ame
) {

756 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

757 
p
->
f
 = f;

758 
p
->
˛o£f
 = &
io_no˛o£
;

759 i‡(
k
 !
NULL
) {

760 
	`lua_pushvÆue
(
L
, -1);

761 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

763 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

764 
	}
}

767 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

768 
	`luaL_√wlib
(
L
, 
iﬁib
);

769 
	`¸óãmëa
(
L
);

771 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

772 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

773 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

775 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/llex.c

7 
	#Œex_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"l˘y≥.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lobje˘.h
"

24 
	~"Õ¨£r.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"lzio.h
"

32 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

36 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

40 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

51 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

54 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

57 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

58 
Mbuf„r
 *
b
 = 
ls
->
buff
;

59 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

60 
size_t
 
√wsize
;

61 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZE
/2)

62 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

63 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

64 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

66 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

67 
	}
}

70 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

71 
i
;

72 
TSåög
 *
e
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

73 
	`luaC_fix
(
L
, 
	`obj2gco
(
e
));

74 
i
=0; i<
NUM_RESERVED
; i++) {

75 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

76 
	`luaC_fix
(
L
, 
	`obj2gco
(
ts
));

77 
ts
->
exåa
 = 
	`ˇ°_byã
(
i
+1);

79 
	}
}

82 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

83 i‡(
tokí
 < 
FIRST_RESERVED
) {

84 
	`lua_as£π
(
tokí
 =
	`ˇ°_uch¨
(token));

85  
	`luaO_pushf°rög
(
ls
->
L
, "'%c'", 
tokí
);

88 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

89 i‡(
tokí
 < 
TK_EOS
)

90  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
s
);

92  
s
;

94 
	}
}

97 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

98 
tokí
) {

99 
TK_NAME
: 
TK_STRING
:

100 
TK_FLT
: 
TK_INT
:

101 
	`ßve
(
ls
, '\0');

102  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
	`luaZ_buf„r
÷s->
buff
));

104  
	`luaX_tokí2°r
(
ls
, 
tokí
);

106 
	}
}

109 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

110 
msg
 = 
	`luaG_addöfo
(
ls
->
L
, msg,Üs->
sour˚
,Üs->
löíumbî
);

111 i‡(
tokí
)

112 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

113 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

114 
	}
}

117 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

118 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

119 
	}
}

127 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

128 
lua_Sèã
 *
L
 = 
ls
->L;

129 
TVÆue
 *
o
;

130 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

131 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

132 
o
 = 
	`luaH_£t
(
L
, 
ls
->
h
, L->
t›
 - 1);

133 i‡(
	`âi¢û
(
o
)) {

136 
	`£tbvÆue
(
o
, 1);

137 
	`luaC_checkGC
(
L
);

140 
ts
 = 
	`tsvÆue
(
	`key‰omvÆ
(
o
));

142 
L
->
t›
--;

143  
ts
;

144 
	}
}

151 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

152 
ﬁd
 = 
ls
->
cuºít
;

153 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

154 
	`√xt
(
ls
);

155 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

156 
	`√xt
(
ls
);

157 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

158 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

159 
	}
}

162 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

163 
fú°ch¨
) {

164 
ls
->
t
.
tokí
 = 0;

165 
ls
->
L
 = L;

166 
ls
->
cuºít
 = 
fú°ch¨
;

167 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

168 
ls
->
z
 = z;

169 
ls
->
fs
 = 
NULL
;

170 
ls
->
löíumbî
 = 1;

171 
ls
->
œ°löe
 = 1;

172 
ls
->
sour˚
 = source;

173 
ls
->
ívn
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

174 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

175 
	}
}

186 
	$check_√xt1
 (
LexSèã
 *
ls
, 
c
) {

187 i‡(
ls
->
cuºít
 =
c
) {

188 
	`√xt
(
ls
);

192 
	}
}

199 
	$check_√xt2
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

200 
	`lua_as£π
(
£t
[2] == '\0');

201 i‡(
ls
->
cuºít
 =
£t
[0] ||Üs->current == set[1]) {

202 
	`ßve_™d_√xt
(
ls
);

206 
	}
}

214 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

215 
TVÆue
 
obj
;

216 c⁄° *
expo
 = "Ee";

217 
fú°
 = 
ls
->
cuºít
;

218 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

219 
	`ßve_™d_√xt
(
ls
);

220 i‡(
fú°
 ='0' && 
	`check_√xt2
(
ls
, "xX"))

221 
expo
 = "Pp";

223 i‡(
	`check_√xt2
(
ls
, 
expo
))

224 
	`check_√xt2
(
ls
, "-+");

225 i‡(
	`lisxdigô
(
ls
->
cuºít
))

226 
	`ßve_™d_√xt
(
ls
);

227 i‡(
ls
->
cuºít
 == '.')

228 
	`ßve_™d_√xt
(
ls
);

231 
	`ßve
(
ls
, '\0');

232 i‡(
	`luaO_°r2num
(
	`luaZ_buf„r
(
ls
->
buff
), &
obj
) == 0)

233 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_FLT
);

234 i‡(
	`âisöãgî
(&
obj
)) {

235 
£möfo
->
i
 = 
	`ivÆue
(&
obj
);

236  
TK_INT
;

239 
	`lua_as£π
(
	`âisÊﬂt
(&
obj
));

240 
£möfo
->
r
 = 
	`ÊtvÆue
(&
obj
);

241  
TK_FLT
;

243 
	}
}

251 
	$skù_£p
 (
LexSèã
 *
ls
) {

252 
cou¡
 = 0;

253 
s
 = 
ls
->
cuºít
;

254 
	`lua_as£π
(
s
 == '[' || s == ']');

255 
	`ßve_™d_√xt
(
ls
);

256 
ls
->
cuºít
 == '=') {

257 
	`ßve_™d_√xt
(
ls
);

258 
cou¡
++;

260  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

261 
	}
}

264 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

265 
löe
 = 
ls
->
löíumbî
;

266 
	`ßve_™d_√xt
(
ls
);

267 i‡(
	`cuºIsNewlöe
(
ls
))

268 
	`ö˛öíumbî
(
ls
);

270 
ls
->
cuºít
) {

271 
EOZ
: {

272 c⁄° *
wh©
 = (
£möfo
 ? "string" : "comment");

273 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

274 "unföishedÜ⁄g %†(°¨tögáàlöê%d)", 
wh©
, 
löe
);

275 
	`Àxîr‹
(
ls
, 
msg
, 
TK_EOS
);

279 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

280 
	`ßve_™d_√xt
(
ls
);

281 
ídlo›
;

286 
	`ßve
(
ls
, '\n');

287 
	`ö˛öíumbî
(
ls
);

288 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

292 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

293 
	`√xt
(
ls
);

296 } 
ídlo›
:

297 i‡(
£möfo
)

298 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

299 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

300 
	}
}

303 
	$esccheck
 (
LexSèã
 *
ls
, 
c
, c⁄° *
msg
) {

304 i‡(!
c
) {

305 i‡(
ls
->
cuºít
 !
EOZ
)

306 
	`ßve_™d_√xt
(
ls
);

307 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

309 
	}
}

312 
	$gëhexa
 (
LexSèã
 *
ls
) {

313 
	`ßve_™d_√xt
(
ls
);

314 
	`esccheck
 (
ls
, 
	`lisxdigô
÷s->
cuºít
), "hexadecimal digitÉxpected");

315  
	`luaO_hexavÆue
(
ls
->
cuºít
);

316 
	}
}

319 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

320 
r
 = 
	`gëhexa
(
ls
);

321 
r
 = (∏<< 4Ë+ 
	`gëhexa
(
ls
);

322 
	`luaZ_buf‰emove
(
ls
->
buff
, 2);

323  
r
;

324 
	}
}

327 
	$ªadutf8esc
 (
LexSèã
 *
ls
) {

328 
r
;

329 
i
 = 4;

330 
	`ßve_™d_√xt
(
ls
);

331 
	`esccheck
(
ls
,Üs->
cuºít
 == '{', "missing '{'");

332 
r
 = 
	`gëhexa
(
ls
);

333 (
	`ßve_™d_√xt
(
ls
), 
	`lisxdigô
÷s->
cuºít
))) {

334 
i
++;

335 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
ls
->
cuºít
);

336 
	`esccheck
(
ls
, 
r
 <= 0x10FFFF, "UTF-8 valueÅooÜarge");

338 
	`esccheck
(
ls
,Üs->
cuºít
 == '}', "missing '}'");

339 
	`√xt
(
ls
);

340 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

341  
r
;

342 
	}
}

345 
	$utf8esc
 (
LexSèã
 *
ls
) {

346 
buff
[
UTF8BUFFSZ
];

347 
n
 = 
	`luaO_utf8esc
(
buff
, 
	`ªadutf8esc
(
ls
));

348 ; 
n
 > 0;Ç--)

349 
	`ßve
(
ls
, 
buff
[
UTF8BUFFSZ
 - 
n
]);

350 
	}
}

353 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

354 
i
;

355 
r
 = 0;

356 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

357 
r
 = 10*∏+ 
ls
->
cuºít
 - '0';

358 
	`ßve_™d_√xt
(
ls
);

360 
	`esccheck
(
ls
, 
r
 <
UCHAR_MAX
, "decimalÉscapeÅooÜarge");

361 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

362  
r
;

363 
	}
}

366 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

367 
	`ßve_™d_√xt
(
ls
);

368 
ls
->
cuºít
 !
dñ
) {

369 
ls
->
cuºít
) {

370 
EOZ
:

371 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

375 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

378 
c
;

379 
	`ßve_™d_√xt
(
ls
);

380 
ls
->
cuºít
) {

381 'a': 
c
 = '\a'; 
ªad_ßve
;

382 'b': 
c
 = '\b'; 
ªad_ßve
;

383 'f': 
c
 = '\f'; 
ªad_ßve
;

384 'n': 
c
 = '\n'; 
ªad_ßve
;

385 'r': 
c
 = '\r'; 
ªad_ßve
;

386 't': 
c
 = '\t'; 
ªad_ßve
;

387 'v': 
c
 = '\v'; 
ªad_ßve
;

388 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

389 'u': 
	`utf8esc
(
ls
); 
no_ßve
;

391 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

393 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

394 
EOZ
: 
no_ßve
;

396 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

397 
	`√xt
(
ls
);

398 
	`lis•a˚
(
ls
->
cuºít
)) {

399 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

400 
	`√xt
(
ls
);

402 
no_ßve
;

405 
	`esccheck
(
ls
, 
	`lisdigô
÷s->
cuºít
), "invalidÉscape sequence");

406 
c
 = 
	`ªadde˚sc
(
ls
);

407 
⁄ly_ßve
;

410 
ªad_ßve
:

411 
	`√xt
(
ls
);

413 
⁄ly_ßve
:

414 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

415 
	`ßve
(
ls
, 
c
);

417 
no_ßve
: ;

420 
	`ßve_™d_√xt
(
ls
);

423 
	`ßve_™d_√xt
(
ls
);

424 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

425 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

426 
	}
}

429 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

430 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

432 
ls
->
cuºít
) {

434 
	`ö˛öíumbî
(
ls
);

438 
	`√xt
(
ls
);

442 
	`√xt
(
ls
);

443 i‡(
ls
->
cuºít
 != '-')  '-';

445 
	`√xt
(
ls
);

446 i‡(
ls
->
cuºít
 == '[') {

447 
£p
 = 
	`skù_£p
(
ls
);

448 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

449 i‡(
£p
 >= 0) {

450 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

451 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

456 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

457 
	`√xt
(
ls
);

461 
£p
 = 
	`skù_£p
(
ls
);

462 i‡(
£p
 >= 0) {

463 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

464  
TK_STRING
;

466 i‡(
£p
 != -1)

467 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

471 
	`√xt
(
ls
);

472 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_EQ
;

476 
	`√xt
(
ls
);

477 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_LE
;

478 i‡(
	`check_√xt1
(
ls
, '<')Ë 
TK_SHL
;

482 
	`√xt
(
ls
);

483 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_GE
;

484 i‡(
	`check_√xt1
(
ls
, '>')Ë 
TK_SHR
;

488 
	`√xt
(
ls
);

489 i‡(
	`check_√xt1
(
ls
, '/')Ë 
TK_IDIV
;

493 
	`√xt
(
ls
);

494 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_NE
;

498 
	`√xt
(
ls
);

499 i‡(
	`check_√xt1
(
ls
, ':')Ë 
TK_DBCOLON
;

503 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

504  
TK_STRING
;

507 
	`ßve_™d_√xt
(
ls
);

508 i‡(
	`check_√xt1
(
ls
, '.')) {

509 i‡(
	`check_√xt1
(
ls
, '.'))

510  
TK_DOTS
;

511  
TK_CONCAT
;

513 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

514  
	`ªad_numîÆ
(
ls
, 
£möfo
);

518  
	`ªad_numîÆ
(
ls
, 
£möfo
);

520 
EOZ
: {

521  
TK_EOS
;

524 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

525 
TSåög
 *
ts
;

527 
	`ßve_™d_√xt
(
ls
);

528 } 
	`li¶Ænum
(
ls
->
cuºít
));

529 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

530 
	`luaZ_bufÊí
(
ls
->
buff
));

531 
£möfo
->
ts
 =Ås;

532 i‡(
	`i§e£rved
(
ts
))

533  
ts
->
exåa
 - 1 + 
FIRST_RESERVED
;

535  
TK_NAME
;

539 
c
 = 
ls
->
cuºít
;

540 
	`√xt
(
ls
);

541  
c
;

546 
	}
}

549 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

550 
ls
->
œ°löe
 =Üs->
löíumbî
;

551 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

552 
ls
->
t
 =Üs->
lookahód
;

553 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

556 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

557 
	}
}

560 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

561 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

562 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

563  
ls
->
lookahód
.
tokí
;

564 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/llex.h

7 #i‚de‡
Œex_h


8 
	#Œex_h


	)

10 
	~"lobje˘.h
"

11 
	~"lzio.h
"

14 
	#FIRST_RESERVED
 257

	)

17 #i‡!
deföed
(
LUA_ENV
)

18 
	#LUA_ENV
 "_ENV"

	)

26 
	eRESERVED
 {

28 
	mTK_AND
 = 
FIRST_RESERVED
, 
	mTK_BREAK
,

29 
	mTK_DO
, 
	mTK_ELSE
, 
	mTK_ELSEIF
, 
	mTK_END
, 
	mTK_FALSE
, 
	mTK_FOR
, 
	mTK_FUNCTION
,

30 
	mTK_GOTO
, 
	mTK_IF
, 
	mTK_IN
, 
	mTK_LOCAL
, 
	mTK_NIL
, 
	mTK_NOT
, 
	mTK_OR
, 
	mTK_REPEAT
,

31 
	mTK_RETURN
, 
	mTK_THEN
, 
	mTK_TRUE
, 
	mTK_UNTIL
, 
	mTK_WHILE
,

33 
	mTK_IDIV
, 
	mTK_CONCAT
, 
	mTK_DOTS
, 
	mTK_EQ
, 
	mTK_GE
, 
	mTK_LE
, 
	mTK_NE
,

34 
	mTK_SHL
, 
	mTK_SHR
,

35 
	mTK_DBCOLON
, 
	mTK_EOS
,

36 
	mTK_FLT
, 
	mTK_INT
, 
	mTK_NAME
, 
	mTK_STRING


40 
	#NUM_RESERVED
 (
	`ˇ°
(, 
TK_WHILE
-
FIRST_RESERVED
+1))

	)

44 
lua_Numbî
 
	mr
;

45 
lua_I¡egî
 
	mi
;

46 
TSåög
 *
	mts
;

47 } 
	tSemInfo
;

50 
	sTokí
 {

51 
	mtokí
;

52 
SemInfo
 
	m£möfo
;

53 } 
	tTokí
;

58 
	sLexSèã
 {

59 
	mcuºít
;

60 
	mlöíumbî
;

61 
	mœ°löe
;

62 
Tokí
 
	mt
;

63 
Tokí
 
	mlookahód
;

64 
FuncSèã
 *
	mfs
;

65 
lua_Sèã
 *
	mL
;

66 
ZIO
 *
	mz
;

67 
Mbuf„r
 *
	mbuff
;

68 
TabÀ
 *
	mh
;

69 
Dynd©a
 *
	mdyd
;

70 
TSåög
 *
	msour˚
;

71 
TSåög
 *
	mívn
;

72 } 
	tLexSèã
;

75 
LUAI_FUNC
 
luaX_öô
 (
lua_Sèã
 *
L
);

76 
LUAI_FUNC
 
luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
,

77 
TSåög
 *
sour˚
, 
fú°ch¨
);

78 
LUAI_FUNC
 
TSåög
 *
luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
);

79 
LUAI_FUNC
 
luaX_√xt
 (
LexSèã
 *
ls
);

80 
LUAI_FUNC
 
luaX_lookahód
 (
LexSèã
 *
ls
);

81 
LUAI_FUNC
 
l_n‹ë
 
luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
s
);

82 
LUAI_FUNC
 c⁄° *
luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/llimits.h

7 #i‚de‡
Œimôs_h


8 
	#Œimôs_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

15 
	~"lua.h
"

22 #i‡
deföed
(
LUAI_MEM
)

23 
LUAI_UMEM
 
	tlu_mem
;

24 
LUAI_MEM
 
	tl_mem
;

25 #ñi‡
LUAI_BITSINT
 >= 32

26 
size_t
 
	tlu_mem
;

27 
±rdiff_t
 
	tl_mem
;

29 
	tlu_mem
;

30 
	tl_mem
;

35 
	tlu_byã
;

39 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

42 
	#MAX_SIZE
 ((
size_t
Ë< (
lua_I¡egî
Ë? 
MAX_SIZET
 \

43 : (
size_t
)(
LUA_MAXINTEGER
))

	)

46 
	#MAX_LUMEM
 ((
lu_mem
)(~÷u_mem)0))

	)

48 
	#MAX_LMEM
 ((
l_mem
)(
MAX_LUMEM
 >> 1))

	)

51 
	#MAX_INT
 
INT_MAX


	)

59 
	#poöt2uöt
(
p
Ë(()((
size_t
)’Ë& 
UINT_MAX
))

	)

64 #i‡
deföed
(
LUAI_USER_ALIGNMENT_T
)

65 
LUAI_USER_ALIGNMENT_T
 
	tL_UmaxÆign
;

68 
lua_Numbî
 
	mn
;

69 
	mu
;

70 *
	ms
;

71 
lua_I¡egî
 
	mi
;

72 
	ml
;

73 } 
	tL_UmaxÆign
;

79 
LUAI_UACNUMBER
 
	tl_uacNumbî
;

80 
LUAI_UACINT
 
	tl_uacI¡
;

84 #i‡
deföed
(
lua_as£π
)

85 
	#check_exp
(
c
,
e
Ë(
	`lua_as£π
(c), (e))

	)

87 
	#lua_l⁄gas£π
(
c
Ë((cË? ()0 : 
	`lua_as£π
(0))

	)

89 
	#lua_as£π
(
c
Ë(()0)

	)

90 
	#check_exp
(
c
,
e
Ë”)

	)

91 
	#lua_l⁄gas£π
(
c
Ë(()0)

	)

97 #i‡!
deföed
(
luai_≠icheck
)

98 
	#luai_≠icheck
(
l
,
e
Ë
	`lua_as£π
”)

	)

101 
	#≠i_check
(
l
,
e
,
msg
Ë
	`luai_≠icheck
÷,”Ë&& msg)

	)

105 #i‡!
deföed
(
UNUSED
)

106 
	#UNUSED
(
x
Ë(()(x))

	)

111 
	#ˇ°
(
t
, 
exp
Ë(—)”xp))

	)

113 
	#ˇ°_void
(
i
Ë
	`ˇ°
(, (i))

	)

114 
	#ˇ°_byã
(
i
Ë
	`ˇ°
(
lu_byã
, (i))

	)

115 
	#ˇ°_num
(
i
Ë
	`ˇ°
(
lua_Numbî
, (i))

	)

116 
	#ˇ°_öt
(
i
Ë
	`ˇ°
(, (i))

	)

117 
	#ˇ°_uch¨
(
i
Ë
	`ˇ°
(, (i))

	)

121 #i‡!
deföed
(
l_ˇ°S2U
)

122 
	#l_ˇ°S2U
(
i
Ë((
lua_Unsig√d
)(i))

	)

130 #i‡!
deföed
(
l_ˇ°U2S
)

131 
	#l_ˇ°U2S
(
i
Ë((
lua_I¡egî
)(i))

	)

138 #i‡
deföed
(
__GNUC__
)

139 
	#l_n‹ë
 
	`__©åibuã__
((
n‹ëu∫
))

	)

140 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200

141 
	#l_n‹ë
 
	`__de˛•ec
(
n‹ëu∫
)

	)

143 
	#l_n‹ë
 

	)

152 #i‡!
deföed
(
LUAI_MAXCCALLS
)

153 
	#LUAI_MAXCCALLS
 200

	)

162 #i‡
LUAI_BITSINT
 >= 32

163 
	tIn°ru˘i⁄
;

165 
	tIn°ru˘i⁄
;

176 #i‡!
deföed
(
LUAI_MAXSHORTLEN
)

177 
	#LUAI_MAXSHORTLEN
 40

	)

187 #i‡!
deföed
(
MINSTRTABSIZE
)

188 
	#MINSTRTABSIZE
 128

	)

197 #i‡!
deföed
(
STRCACHE_N
)

198 
	#STRCACHE_N
 53

	)

199 
	#STRCACHE_M
 2

	)

204 #i‡!
deföed
(
LUA_MINBUFFER
)

205 
	#LUA_MINBUFFER
 32

	)

213 #i‡!
deföed
(
lua_lock
)

214 
	#lua_lock
(
L
Ë((Ë0)

	)

215 
	#lua_u∆ock
(
L
Ë((Ë0)

	)

222 #i‡!
deföed
(
luai_thªadyõld
)

223 
	#luai_thªadyõld
(
L
Ë{
	`lua_u∆ock
(L); 
	`lua_lock
(L);}

	)

232 #i‡!
deföed
(
luai_u£r°©e›í
)

233 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

236 #i‡!
deföed
(
luai_u£r°©e˛o£
)

237 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

240 #i‡!
deföed
(
luai_u£r°©ëhªad
)

241 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

244 #i‡!
deföed
(
luai_u£r°©e‰ì
)

245 
	#luai_u£r°©e‰ì
(
L
,
L1
Ë(()L)

	)

248 #i‡!
deföed
(
luai_u£r°©îesume
)

249 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

252 #i‡!
deföed
(
luai_u£r°©eyõld
)

253 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

263 #i‡!
deföed
(
luai_numidiv
)

264 
	#luai_numidiv
(
L
,
a
,
b
Ë(()L, 
	`l_Êo‹
(
	`luai_numdiv
(L,a,b)))

	)

268 #i‡!
deföed
(
luai_numdiv
)

269 
	#luai_numdiv
(
L
,
a
,
b
Ë(◊)/(b))

	)

279 #i‡!
deföed
(
luai_nummod
)

280 
	#luai_nummod
(
L
,
a
,
b
,
m
) \

281 { (
m
Ë
	`l_m©h›
(
fmod
)(
a
,
b
); i‡((m)*(bË< 0Ë(mË+(b); }

	)

285 #i‡!
deföed
(
luai_numpow
)

286 
	#luai_numpow
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
pow
)◊,b))

	)

290 #i‡!
deföed
(
luai_numadd
)

291 
	#luai_numadd
(
L
,
a
,
b
Ë(◊)+(b))

	)

292 
	#luai_numsub
(
L
,
a
,
b
Ë(◊)-(b))

	)

293 
	#luai_nummul
(
L
,
a
,
b
Ë(◊)*(b))

	)

294 
	#luai_numunm
(
L
,
a
Ë(-◊))

	)

295 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

296 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

297 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

298 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

308 #i‡!
deföed
(
HARDSTACKTESTS
)

309 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
Ë(()0)

	)

312 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
) \

313 { 
sz_
 = (
L
)->
°acksize
; 
¥e
; 
	`luaD_ªÆloc°ack
((L), sz_); 
pos
; }

	)

316 #i‡!
deföed
(
HARDMEMTESTS
)

317 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
Ë(()0)

	)

319 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
) \

320 { i‡(
	`G
(
L
)->
g¸u¬ög
Ë{ 
¥e
; 
	`luaC_fuŒgc
(L, 0); 
pos
; } }

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lmathlib.c

7 
	#lm©hlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

22 #unde‡
PI


23 
	#PI
 (
	`l_m©h›
(3.141592653589793238462643383279502884))

	)

26 #i‡!
deföed
(
l_ønd
)

27 #i‡
deföed
(
LUA_USE_POSIX
)

28 
	#l_ønd
(Ë
	`øndom
()

	)

29 
	#l_§™d
(
x
Ë
	`§™dom
(x)

	)

30 
	#L_RANDMAX
 2147483647

	)

32 
	#l_ønd
(Ë
	`ønd
()

	)

33 
	#l_§™d
(
x
Ë
	`§™d
(x)

	)

34 
	#L_RANDMAX
 
RAND_MAX


	)

39 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

40 i‡(
	`lua_isöãgî
(
L
, 1)) {

41 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 1);

42 i‡(
n
 < 0Ë¿(
lua_I¡egî
)(0u - (
lua_Unsig√d
)n);

43 
	`lua_pushöãgî
(
L
, 
n
);

46 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

48 
	}
}

50 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

51 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

53 
	}
}

55 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

56 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

58 
	}
}

60 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

61 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

63 
	}
}

65 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

66 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

68 
	}
}

70 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

71 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

73 
	}
}

75 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

76 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 1);

77 
lua_Numbî
 
x
 = 
	`luaL_›äumbî
(
L
, 2, 1);

78 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
y
, 
x
));

80 
	}
}

83 
	$m©h_toöt
 (
lua_Sèã
 *
L
) {

84 
vÆid
;

85 
lua_I¡egî
 
n
 = 
	`lua_toöãgîx
(
L
, 1, &
vÆid
);

86 i‡(
vÆid
)

87 
	`lua_pushöãgî
(
L
, 
n
);

89 
	`luaL_check™y
(
L
, 1);

90 
	`lua_pushnû
(
L
);

93 
	}
}

96 
	$pushnumöt
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
d
) {

97 
lua_I¡egî
 
n
;

98 i‡(
	`lua_numbîtoöãgî
(
d
, &
n
))

99 
	`lua_pushöãgî
(
L
, 
n
);

101 
	`lua_pushnumbî
(
L
, 
d
);

102 
	}
}

105 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

106 i‡(
	`lua_isöãgî
(
L
, 1))

107 
	`lua_£â›
(
L
, 1);

109 
lua_Numbî
 
d
 = 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(
L
, 1));

110 
	`pushnumöt
(
L
, 
d
);

113 
	}
}

116 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

117 i‡(
	`lua_isöãgî
(
L
, 1))

118 
	`lua_£â›
(
L
, 1);

120 
lua_Numbî
 
d
 = 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(
L
, 1));

121 
	`pushnumöt
(
L
, 
d
);

124 
	}
}

127 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

128 i‡(
	`lua_isöãgî
(
L
, 1) &&Üua_isinteger(L, 2)) {

129 
lua_I¡egî
 
d
 = 
	`lua_toöãgî
(
L
, 2);

130 i‡((
lua_Unsig√d
)
d
 + 1u <= 1u) {

131 
	`luaL_¨gcheck
(
L
, 
d
 != 0, 2, "zero");

132 
	`lua_pushöãgî
(
L
, 0);

135 
	`lua_pushöãgî
(
L
, 
	`lua_toöãgî
(L, 1Ë% 
d
);

138 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

139 
	`luaL_checknumbî
(
L
, 2)));

141 
	}
}

149 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

150 i‡(
	`lua_isöãgî
(
L
 ,1)) {

151 
	`lua_£â›
(
L
, 1);

152 
	`lua_pushnumbî
(
L
, 0);

155 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 1);

157 
lua_Numbî
 
ù
 = (
n
 < 0Ë? 
	`l_m©h›
(
˚û
)“Ë:Ü_m©h›(
Êo‹
)(n);

158 
	`pushnumöt
(
L
, 
ù
);

160 
	`lua_pushnumbî
(
L
, (
n
 =
ù
Ë? 
	`l_m©h›
(0.0) : (n - ip));

163 
	}
}

166 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

169 
	}
}

172 
	$m©h_u…
 (
lua_Sèã
 *
L
) {

173 
lua_I¡egî
 
a
 = 
	`luaL_checköãgî
(
L
, 1);

174 
lua_I¡egî
 
b
 = 
	`luaL_checköãgî
(
L
, 2);

175 
	`lua_pushboﬁón
(
L
, (
lua_Unsig√d
)
a
 < (lua_Unsig√d)
b
);

177 
	}
}

179 
	$m©h_log
 (
lua_Sèã
 *
L
) {

180 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

181 
lua_Numbî
 
ªs
;

182 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

183 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

185 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

186 #i‡!
	`deföed
(
LUA_USE_C89
)

187 i‡(
ba£
 =
	`l_m©h›
(2.0))

188 
ªs
 = 
	`l_m©h›
(
log2
)(
x
); 

190 i‡(
ba£
 =
	`l_m©h›
(10.0))

191 
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

193 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

195 
	`lua_pushnumbî
(
L
, 
ªs
);

197 
	}
}

199 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

200 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

202 
	}
}

204 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

205 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
	`l_m©h›
(180.0Ë/ 
PI
));

207 
	}
}

209 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

210 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
PI
 / 
	`l_m©h›
(180.0)));

212 
	}
}

215 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

216 
n
 = 
	`lua_gët›
(
L
);

217 
imö
 = 1;

218 
i
;

219 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

220 
i
 = 2; i <
n
; i++) {

221 i‡(
	`lua_com∑ª
(
L
, 
i
, 
imö
, 
LUA_OPLT
))

222 
imö
 = 
i
;

224 
	`lua_pushvÆue
(
L
, 
imö
);

226 
	}
}

229 
	$m©h_max
 (
lua_Sèã
 *
L
) {

230 
n
 = 
	`lua_gët›
(
L
);

231 
imax
 = 1;

232 
i
;

233 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

234 
i
 = 2; i <
n
; i++) {

235 i‡(
	`lua_com∑ª
(
L
, 
imax
, 
i
, 
LUA_OPLT
))

236 
imax
 = 
i
;

238 
	`lua_pushvÆue
(
L
, 
imax
);

240 
	}
}

247 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

248 
lua_I¡egî
 
low
, 
up
;

249 
r
 = ()
	`l_ønd
(Ë* (1.0 / (()
L_RANDMAX
 + 1.0));

250 
	`lua_gët›
(
L
)) {

252 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
r
);

256 
low
 = 1;

257 
up
 = 
	`luaL_checköãgî
(
L
, 1);

261 
low
 = 
	`luaL_checköãgî
(
L
, 1);

262 
up
 = 
	`luaL_checköãgî
(
L
, 2);

265 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

268 
	`luaL_¨gcheck
(
L
, 
low
 <
up
, 1, "interval isÉmpty");

269 
	`luaL_¨gcheck
(
L
, 
low
 >0 || 
up
 <
LUA_MAXINTEGER
 +Üow, 1,

271 
r
 *()(
up
 - 
low
) + 1.0;

272 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
r
 + 
low
);

274 
	}
}

277 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

278 
	`l_§™d
(()(
lua_I¡egî
)
	`luaL_checknumbî
(
L
, 1));

279 ()
	`l_ønd
();

281 
	}
}

284 
	$m©h_ty≥
 (
lua_Sèã
 *
L
) {

285 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

286 i‡(
	`lua_isöãgî
(
L
, 1))

287 
	`lua_pushlôîÆ
(
L
, "integer");

289 
	`lua_pushlôîÆ
(
L
, "float");

292 
	`luaL_check™y
(
L
, 1);

293 
	`lua_pushnû
(
L
);

296 
	}
}

304 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

306 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

307 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

309 
	}
}

311 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

312 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

314 
	}
}

316 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

317 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

319 
	}
}

321 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

322 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

323 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

324 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

326 
	}
}

328 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

329 
e
;

330 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

331 
	`lua_pushöãgî
(
L
, 
e
);

333 
	}
}

335 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

336 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

337 
ï
 = ()
	`luaL_checköãgî
(
L
, 2);

338 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

340 
	}
}

342 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

343 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

345 
	}
}

352 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

353 {"abs", 
m©h_abs
},

354 {"acos", 
m©h_acos
},

355 {"asö", 
m©h_asö
},

356 {"©™", 
m©h_©™
},

357 {"˚û", 
m©h_˚û
},

358 {"cos", 
m©h_cos
},

359 {"deg", 
m©h_deg
},

360 {"exp", 
m©h_exp
},

361 {"toöãgî", 
m©h_toöt
},

362 {"Êo‹", 
m©h_Êo‹
},

363 {"fmod", 
m©h_fmod
},

364 {"u…", 
m©h_u…
},

365 {"log", 
m©h_log
},

366 {"max", 
m©h_max
},

367 {"mö", 
m©h_mö
},

368 {"modf", 
m©h_modf
},

369 {"ød", 
m©h_ød
},

370 {"øndom", 
m©h_øndom
},

371 {"øndom£ed", 
m©h_øndom£ed
},

372 {"sö", 
m©h_sö
},

373 {"sqπ", 
m©h_sqπ
},

374 {"èn", 
m©h_èn
},

375 {"ty≥", 
m©h_ty≥
},

376 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

377 {"©™2", 
m©h_©™
},

378 {"cosh", 
m©h_cosh
},

379 {"söh", 
m©h_söh
},

380 {"ènh", 
m©h_ènh
},

381 {"pow", 
m©h_pow
},

382 {"‰exp", 
m©h_‰exp
},

383 {"ldexp", 
m©h_ldexp
},

384 {"log10", 
m©h_log10
},

387 {"pi", 
NULL
},

388 {"huge", 
NULL
},

389 {"maxöãgî", 
NULL
},

390 {"mööãgî", 
NULL
},

391 {
NULL
, NULL}

398 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

399 
	`luaL_√wlib
(
L
, 
m©hlib
);

400 
	`lua_pushnumbî
(
L
, 
PI
);

401 
	`lua_£tfõld
(
L
, -2, "pi");

402 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
HUGE_VAL
);

403 
	`lua_£tfõld
(
L
, -2, "huge");

404 
	`lua_pushöãgî
(
L
, 
LUA_MAXINTEGER
);

405 
	`lua_£tfõld
(
L
, -2, "maxinteger");

406 
	`lua_pushöãgî
(
L
, 
LUA_MININTEGER
);

407 
	`lua_£tfõld
(
L
, -2, "mininteger");

409 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lmem.c

7 
	#lmem_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lgc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

45 
	#MINSIZEARRAY
 4

	)

48 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

49 
limô
, c⁄° *
wh©
) {

50 *
√wblock
;

51 
√wsize
;

52 i‡(*
size
 >
limô
/2) {

53 i‡(*
size
 >
limô
)

54 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

55 
√wsize
 = 
limô
;

58 
√wsize
 = (*
size
)*2;

59 i‡(
√wsize
 < 
MINSIZEARRAY
)

60 
√wsize
 = 
MINSIZEARRAY
;

62 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

63 *
size
 = 
√wsize
;

64  
√wblock
;

65 
	}
}

68 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

69 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

70 
	}
}

77 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

78 *
√wblock
;

79 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

80 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

81 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

82 #i‡
	`deföed
(
HARDMEMTESTS
)

83 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

84 
	`luaC_fuŒgc
(
L
, 1);

86 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

87 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

88 
	`lua_as£π
(
nsize
 > 
ªÆosize
);

89 i‡(
g
->
vîsi⁄
) {

90 
	`luaC_fuŒgc
(
L
, 1);

91 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

93 i‡(
√wblock
 =
NULL
)

94 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

96 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

97 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

98  
√wblock
;

99 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lmem.h

7 #i‚de‡
lmem_h


8 
	#lmem_h


	)

11 
	~<°ddef.h
>

13 
	~"Œimôs.h
"

14 
	~"lua.h
"

30 
	#luaM_ªÆlocv
(
L
,
b
,
⁄
,
n
,
e
) \

31 ((((
n
Ë>(
size_t
Ë&& 
	`ˇ°
(size_t, (n)Ë+ 1 > 
MAX_SIZET
/(
e
)) \

32 ? 
	`luaM_toobig
(
L
Ë: 
	`ˇ°_void
(0)) , \

33 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(
e
), (
n
)*”)))

	)

38 
	#luaM_ªÆlocvch¨
(
L
,
b
,
⁄
,
n
) \

39 
	`ˇ°
(*, 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(), (
n
)*()))

	)

41 
	#luaM_‰ìmem
(
L
, 
b
, 
s
Ë
	`luaM_ªÆloc_
(L, (b), (s), 0)

	)

42 
	#luaM_‰ì
(
L
, 
b
Ë
	`luaM_ªÆloc_
(L, (b), (*(b)), 0)

	)

43 
	#luaM_‰ì¨øy
(
L
, 
b
, 
n
Ë
	`luaM_ªÆloc_
(L, (b), (n)*(*(b)), 0)

	)

45 
	#luaM_mÆloc
(
L
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
, 0, (s))

	)

46 
	#luaM_√w
(
L
,
t
Ë
	`ˇ°
— *, 
	`luaM_mÆloc
(L, —)))

	)

47 
	#luaM_√wve˘‹
(
L
,
n
,
t
) \

48 
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, 
NULL
, 0, 
n
, —)))

	)

50 
	#luaM_√wobje˘
(
L
,
èg
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
,Åag, (s))

	)

52 
	#luaM_growve˘‹
(
L
,
v
,
√Àms
,
size
,
t
,
limô
,
e
) \

53 i‡((
√Àms
)+1 > (
size
)) \

54 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_growaux_
(
L
,v,&(
size
),—),
limô
,
e
)))

	)

56 
	#luaM_ªÆlocve˘‹
(
L
, 
v
,
ﬁdn
,
n
,
t
) \

57 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, v, 
ﬁdn
, 
n
, —))))

	)

59 
LUAI_FUNC
 
l_n‹ë
 
luaM_toobig
 (
lua_Sèã
 *
L
);

62 
LUAI_FUNC
 *
luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
ﬁdsize
,

63 
size_t
 
size
);

64 
LUAI_FUNC
 *
luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
,

65 
size_t
 
size_ñem
, 
limô
,

66 c⁄° *
wh©
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/loadlib.c

11 
	#lﬂdlib_c


	)

12 
	#LUA_LIB


	)

14 
	~"Õªfix.h
"

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"lua.h
"

23 
	~"œuxlib.h
"

24 
	~"luÆib.h
"

31 #i‡!
deföed
 (
LUA_IGMARK
)

32 
	#LUA_IGMARK
 "-"

	)

42 #i‡!
deföed
(
LUA_CSUBSEP
)

43 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

46 #i‡!
deföed
(
LUA_LSUBSEP
)

47 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

52 
	#LUA_POF
 "lua›í_"

	)

55 
	#LUA_OFSEP
 "_"

	)

62 c⁄° 
	gCLIBS
 = 0;

64 
	#LIB_FAIL
 "›í"

	)

67 
	#£çrogdú
(
L
Ë(()0)

	)

77 
lsys_u∆ﬂdlib
 (*
lib
);

85 *
lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

92 
lua_CFun˘i⁄
 
lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

97 #i‡
deföed
(
LUA_USE_DLOPEN
)

107 
	~<dlf˙.h
>

114 #i‡
deföed
(
__GNUC__
)

115 
	#ˇ°_func
(
p
Ë(
	`__exãnsi⁄__
 (
lua_CFun˘i⁄
)’))

	)

117 
	#ˇ°_func
(
p
Ë((
lua_CFun˘i⁄
)’))

	)

121 
	$lsys_u∆ﬂdlib
 (*
lib
) {

122 
	`dl˛o£
(
lib
);

123 
	}
}

126 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

127 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

128 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

129  
lib
;

130 
	}
}

133 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

134 
lua_CFun˘i⁄
 
f
 = 
	`ˇ°_func
(
	`dlsym
(
lib
, 
sym
));

135 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

136  
f
;

137 
	}
}

143 #ñi‡
deföed
(
LUA_DL_DLL
)

150 
	~<wödows.h
>

156 #i‡!
deföed
(
LUA_LLE_FLAGS
)

157 
	#LUA_LLE_FLAGS
 0

	)

161 #unde‡
£çrogdú


168 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

169 
buff
[
MAX_PATH
 + 1];

170 *
lb
;

171 
DWORD
 
nsize
 = (
buff
)/();

172 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

173 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

174 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

176 *
lb
 = '\0';

177 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

178 
	`lua_ªmove
(
L
, -2);

180 
	}
}

185 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

186 
îr‹
 = 
	`GëLa°Eº‹
();

187 
buf„r
[128];

188 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

189 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

190 
	`lua_push°rög
(
L
, 
buf„r
);

192 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

193 
	}
}

195 
	$lsys_u∆ﬂdlib
 (*
lib
) {

196 
	`FªeLibøry
((
HMODULE
)
lib
);

197 
	}
}

200 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

201 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

202 ()(
£eglb
);

203 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

204  
lib
;

205 
	}
}

208 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

209 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

210 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

211  
f
;

212 
	}
}

224 #unde‡
LIB_FAIL


225 
	#LIB_FAIL
 "ab£¡"

	)

228 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

231 
	$lsys_u∆ﬂdlib
 (*
lib
) {

232 ()(
lib
);

233 
	}
}

236 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

237 ()(
∑th
); ()(
£eglb
);

238 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

239  
NULL
;

240 
	}
}

243 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

244 ()(
lib
); ()(
sym
);

245 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

246  
NULL
;

247 
	}
}

263 #i‡!
deföed
(
LUA_PATH_VAR
)

264 
	#LUA_PATH_VAR
 "LUA_PATH"

	)

267 #i‡!
deföed
(
LUA_CPATH_VAR
)

268 
	#LUA_CPATH_VAR
 "LUA_CPATH"

	)

272 
	#AUXMARK
 "\1"

	)

278 
	$n€nv
 (
lua_Sèã
 *
L
) {

279 
b
;

280 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

281 
b
 = 
	`lua_toboﬁón
(
L
, -1);

282 
	`lua_p›
(
L
, 1);

283  
b
;

284 
	}
}

290 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
,

291 c⁄° *
ív«me
,

292 c⁄° *
d·
) {

293 c⁄° *
nvî
 = 
	`lua_pushf°rög
(
L
, "%s%s", 
ív«me
, 
LUA_VERSUFFIX
);

294 c⁄° *
∑th
 = 
	`gëív
(
nvî
);

295 i‡(
∑th
 =
NULL
)

296 
∑th
 = 
	`gëív
(
ív«me
);

297 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

298 
	`lua_push°rög
(
L
, 
d·
);

301 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

302 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

303 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
d·
);

304 
	`lua_ªmove
(
L
, -2);

306 
	`£çrogdú
(
L
);

307 
	`lua_£tfõld
(
L
, -3, 
fõld«me
);

308 
	`lua_p›
(
L
, 1);

309 
	}
}

317 *
	$check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

318 *
∂ib
;

319 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

320 
	`lua_gëfõld
(
L
, -1, 
∑th
);

321 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

322 
	`lua_p›
(
L
, 2);

323  
∂ib
;

324 
	}
}

331 
	$addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

332 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

333 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

334 
	`lua_pushvÆue
(
L
, -1);

335 
	`lua_£tfõld
(
L
, -3, 
∑th
);

336 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

337 
	`lua_p›
(
L
, 1);

338 
	}
}

345 
	$g˘m
 (
lua_Sèã
 *
L
) {

346 
lua_I¡egî
 
n
 = 
	`luaL_Àn
(
L
, 1);

347 ; 
n
 >= 1;Ç--) {

348 
	`lua_øwgëi
(
L
, 1, 
n
);

349 
	`lsys_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

350 
	`lua_p›
(
L
, 1);

353 
	}
}

358 
	#ERRLIB
 1

	)

359 
	#ERRFUNC
 2

	)

372 
	$lookf‹func
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

373 *
ªg
 = 
	`check˛ib
(
L
, 
∑th
);

374 i‡(
ªg
 =
NULL
) {

375 
ªg
 = 
	`lsys_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

376 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

377 
	`addto˛ib
(
L
, 
∑th
, 
ªg
);

379 i‡(*
sym
 == '*') {

380 
	`lua_pushboﬁón
(
L
, 1);

384 
lua_CFun˘i⁄
 
f
 = 
	`lsys_sym
(
L
, 
ªg
, 
sym
);

385 i‡(
f
 =
NULL
)

386  
ERRFUNC
;

387 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

390 
	}
}

393 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

394 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

395 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

396 
°©
 = 
	`lookf‹func
(
L
, 
∑th
, 
öô
);

397 i‡(
°©
 == 0)

400 
	`lua_pushnû
(
L
);

401 
	`lua_ö£π
(
L
, -2);

402 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

405 
	}
}

416 
	$ªadabÀ
 (c⁄° *
fûíame
) {

417 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

418 i‡(
f
 =
NULL
)  0;

419 
	`f˛o£
(
f
);

421 
	}
}

424 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

425 c⁄° *
l
;

426 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

427 i‡(*
∑th
 ='\0'Ë 
NULL
;

428 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

429 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

430 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

431  
l
;

432 
	}
}

435 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

436 c⁄° *
∑th
,

437 c⁄° *
£p
,

438 c⁄° *
dú£p
) {

439 
luaL_Buf„r
 
msg
;

440 
	`luaL_bufföô
(
L
, &
msg
);

441 i‡(*
£p
 != '\0')

442 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

443 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

444 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

445 
LUA_PATH_MARK
, 
«me
);

446 
	`lua_ªmove
(
L
, -2);

447 i‡(
	`ªadabÀ
(
fûíame
))

448  
fûíame
;

449 
	`lua_pushf°rög
(
L
, "\n\äÿfûê'%s'", 
fûíame
);

450 
	`lua_ªmove
(
L
, -2);

451 
	`luaL_addvÆue
(&
msg
);

453 
	`luaL_pushªsu…
(&
msg
);

454  
NULL
;

455 
	}
}

458 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

459 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

460 
	`luaL_check°rög
(
L
, 2),

461 
	`luaL_›t°rög
(
L
, 3, "."),

462 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

463 i‡(
f
 !
NULL
)  1;

465 
	`lua_pushnû
(
L
);

466 
	`lua_ö£π
(
L
, -2);

469 
	}
}

472 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

473 c⁄° *
≤ame
,

474 c⁄° *
dú£p
) {

475 c⁄° *
∑th
;

476 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

477 
∑th
 = 
	`lua_to°rög
(
L
, -1);

478 i‡(
∑th
 =
NULL
)

479 
	`luaL_îr‹
(
L
, "'∑ckage.%s' mu° bê®°rög", 
≤ame
);

480  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

481 
	}
}

484 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

485 i‡(
°©
) {

486 
	`lua_push°rög
(
L
, 
fûíame
);

490  
	`luaL_îr‹
(
L
, "errorÜoading module '%s' from file '%s':\n\t%s",

491 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

492 
	}
}

495 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

496 c⁄° *
fûíame
;

497 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

498 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

499 i‡(
fûíame
 =
NULL
)  1;

500  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

501 
	}
}

512 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

513 c⁄° *
›ífunc
;

514 c⁄° *
m¨k
;

515 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

516 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

517 i‡(
m¨k
) {

518 
°©
;

519 
›ífunc
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

520 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", openfunc);

521 
°©
 = 
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

522 i‡(
°©
 !
ERRFUNC
)  stat;

523 
mod«me
 = 
m¨k
 + 1;

525 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

526  
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

527 
	}
}

530 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

531 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

532 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

533 i‡(
fûíame
 =
NULL
)  1;

534  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

535 
	}
}

538 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

539 c⁄° *
fûíame
;

540 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

541 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

542 
°©
;

543 i‡(
p
 =
NULL
)  0;

544 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

545 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

546 i‡(
fûíame
 =
NULL
)  1;

547 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

548 i‡(
°©
 !
ERRFUNC
)

549  
	`checklﬂd
(
L
, 0, 
fûíame
);

551 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ '%s' i¿fûê'%s'", 
«me
, 
fûíame
);

555 
	`lua_push°rög
(
L
, 
fûíame
);

557 
	}
}

560 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

561 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

562 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_PRELOAD_TABLE
);

563 i‡(
	`lua_gëfõld
(
L
, -1, 
«me
Ë=
LUA_TNIL
)

564 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

566 
	}
}

569 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

570 
i
;

571 
luaL_Buf„r
 
msg
;

572 
	`luaL_bufföô
(
L
, &
msg
);

574 i‡(
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "£¨chîs"Ë!
LUA_TTABLE
)

575 
	`luaL_îr‹
(
L
, "'package.searchers' must beáÅable");

577 
i
 = 1; ; i++) {

578 i‡(
	`lua_øwgëi
(
L
, 3, 
i
Ë=
LUA_TNIL
) {

579 
	`lua_p›
(
L
, 1);

580 
	`luaL_pushªsu…
(&
msg
);

581 
	`luaL_îr‹
(
L
, "moduÀ '%s'ÇŸ found:%s", 
«me
, 
	`lua_to°rög
(L, -1));

583 
	`lua_push°rög
(
L
, 
«me
);

584 
	`lua_ˇŒ
(
L
, 1, 2);

585 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

587 i‡(
	`lua_is°rög
(
L
, -2)) {

588 
	`lua_p›
(
L
, 1);

589 
	`luaL_addvÆue
(&
msg
);

592 
	`lua_p›
(
L
, 2);

594 
	}
}

597 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

598 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

599 
	`lua_£â›
(
L
, 1);

600 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

601 
	`lua_gëfõld
(
L
, 2, 
«me
);

602 i‡(
	`lua_toboﬁón
(
L
, -1))

605 
	`lua_p›
(
L
, 1);

606 
	`födlﬂdî
(
L
, 
«me
);

607 
	`lua_push°rög
(
L
, 
«me
);

608 
	`lua_ö£π
(
L
, -2);

609 
	`lua_ˇŒ
(
L
, 2, 1);

610 i‡(!
	`lua_i¢û
(
L
, -1))

611 
	`lua_£tfõld
(
L
, 2, 
«me
);

612 i‡(
	`lua_gëfõld
(
L
, 2, 
«me
Ë=
LUA_TNIL
) {

613 
	`lua_pushboﬁón
(
L
, 1);

614 
	`lua_pushvÆue
(
L
, -1);

615 
	`lua_£tfõld
(
L
, 2, 
«me
);

618 
	}
}

629 #i‡
deföed
(
LUA_COMPAT_MODULE
)

634 
	$£t_ív
 (
lua_Sèã
 *
L
) {

635 
lua_Debug
 
¨
;

636 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

637 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

638 
	`lua_iscfun˘i⁄
(
L
, -1))

639 
	`luaL_îr‹
(
L
, "'module'Çot called fromá Lua function");

640 
	`lua_pushvÆue
(
L
, -2);

641 
	`lua_£tupvÆue
(
L
, -2, 1);

642 
	`lua_p›
(
L
, 1);

643 
	}
}

646 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

647 
i
;

648 
i
 = 2; i <
n
; i++) {

649 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

650 
	`lua_pushvÆue
(
L
, 
i
);

651 
	`lua_pushvÆue
(
L
, -2);

652 
	`lua_ˇŒ
(
L
, 1, 0);

655 
	}
}

658 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

659 c⁄° *
dŸ
;

660 
	`lua_pushvÆue
(
L
, -1);

661 
	`lua_£tfõld
(
L
, -2, "_M");

662 
	`lua_push°rög
(
L
, 
mod«me
);

663 
	`lua_£tfõld
(
L
, -2, "_NAME");

664 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

665 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

666 
dŸ
++;

668 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

669 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

670 
	}
}

673 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

674 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

675 
œ°¨g
 = 
	`lua_gët›
(
L
);

676 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

678 i‡(
	`lua_gëfõld
(
L
, -1, "_NAME"Ë!
LUA_TNIL
)

679 
	`lua_p›
(
L
, 1);

681 
	`lua_p›
(
L
, 1);

682 
	`modöô
(
L
, 
mod«me
);

684 
	`lua_pushvÆue
(
L
, -1);

685 
	`£t_ív
(
L
);

686 
	`do›ti⁄s
(
L
, 
œ°¨g
);

688 
	}
}

691 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

692 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

693 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

694 
	`lua_¸óãèbÀ
(
L
, 0, 1);

695 
	`lua_pushvÆue
(
L
, -1);

696 
	`lua_£tmë©abÀ
(
L
, 1);

698 
	`lua_pushglobÆèbÀ
(
L
);

699 
	`lua_£tfõld
(
L
, -2, "__index");

701 
	}
}

708 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

709 {"lﬂdlib", 
Œ_lﬂdlib
},

710 {"£¨ch∑th", 
Œ_£¨ch∑th
},

711 #i‡
deföed
(
LUA_COMPAT_MODULE
)

712 {"£óŒ", 
Œ_£óŒ
},

715 {"¥ñﬂd", 
NULL
},

716 {"˝©h", 
NULL
},

717 {"∑th", 
NULL
},

718 {"£¨chîs", 
NULL
},

719 {"lﬂded", 
NULL
},

720 {
NULL
, NULL}

724 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

725 #i‡
deföed
(
LUA_COMPAT_MODULE
)

726 {"moduÀ", 
Œ_moduÀ
},

728 {"ªquúe", 
Œ_ªquúe
},

729 {
NULL
, NULL}

733 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

734 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

735 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

736 
i
;

738 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

740 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

741 
	`lua_pushvÆue
(
L
, -2);

742 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

743 
	`lua_øw£ti
(
L
, -2, 
i
+1);

745 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

746 
	`lua_pushvÆue
(
L
, -1);

747 
	`lua_£tfõld
(
L
, -3, "loaders");

749 
	`lua_£tfõld
(
L
, -2, "searchers");

750 
	}
}

757 
	$¸óã˛ib°abÀ
 (
lua_Sèã
 *
L
) {

758 
	`lua_√wèbÀ
(
L
);

759 
	`lua_¸óãèbÀ
(
L
, 0, 1);

760 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

761 
	`lua_£tfõld
(
L
, -2, "__gc");

762 
	`lua_£tmë©abÀ
(
L
, -2);

763 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

764 
	}
}

767 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

768 
	`¸óã˛ib°abÀ
(
L
);

769 
	`luaL_√wlib
(
L
, 
pk_funcs
);

770 
	`¸óã£¨chî°abÀ
(
L
);

772 
	`£ç©h
(
L
, "∑th", 
LUA_PATH_VAR
, 
LUA_PATH_DEFAULT
);

773 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATH_VAR
, 
LUA_CPATH_DEFAULT
);

775 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

776 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

777 
	`lua_£tfõld
(
L
, -2, "config");

779 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_LOADED_TABLE
);

780 
	`lua_£tfõld
(
L
, -2, "loaded");

782 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_PRELOAD_TABLE
);

783 
	`lua_£tfõld
(
L
, -2, "preload");

784 
	`lua_pushglobÆèbÀ
(
L
);

785 
	`lua_pushvÆue
(
L
, -2);

786 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

787 
	`lua_p›
(
L
, 1);

789 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lobject.c

7 
	#lobje˘_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<m©h.h
>

15 
	~<°d¨g.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"l˘y≥.h
"

23 
	~"ldebug.h
"

24 
	~"ldo.h
"

25 
	~"lmem.h
"

26 
	~"lobje˘.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"lvm.h
"

33 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

41 
	$luaO_öt2fb
 (
x
) {

42 
e
 = 0;

43 i‡(
x
 < 8)  x;

44 
x
 >= (8 << 4)) {

45 
x
 = (x + 0xf) >> 4;

46 
e
 += 4;

48 
x
 >= (8 << 1)) {

49 
x
 = (x + 1) >> 1;

50 
e
++;

52  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

53 
	}
}

57 
	$luaO_fb2öt
 (
x
) {

58  (
x
 < 8) ? x : ((x & 7) + 8) << ((x >> 3) - 1);

59 
	}
}

65 
	$luaO_˚ûlog2
 (
x
) {

66 c⁄° 
lu_byã
 
log_2
[256] = {

76 
l
 = 0;

77 
x
--;

78 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

79  
l
 + 
log_2
[
x
];

80 
	}
}

83 
lua_I¡egî
 
	$öèrôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_I¡egî
 
v1
,

84 
lua_I¡egî
 
v2
) {

85 
›
) {

86 
LUA_OPADD
:  
	`öt›
(+, 
v1
, 
v2
);

87 
LUA_OPSUB
: 
	`öt›
(-, 
v1
, 
v2
);

88 
LUA_OPMUL
: 
	`öt›
(*, 
v1
, 
v2
);

89 
LUA_OPMOD
:  
	`luaV_mod
(
L
, 
v1
, 
v2
);

90 
LUA_OPIDIV
:  
	`luaV_div
(
L
, 
v1
, 
v2
);

91 
LUA_OPBAND
:  
	`öt›
(&, 
v1
, 
v2
);

92 
LUA_OPBOR
:  
	`öt›
(|, 
v1
, 
v2
);

93 
LUA_OPBXOR
:  
	`öt›
(^, 
v1
, 
v2
);

94 
LUA_OPSHL
:  
	`luaV_shi·l
(
v1
, 
v2
);

95 
LUA_OPSHR
:  
	`luaV_shi·l
(
v1
, -
v2
);

96 
LUA_OPUNM
:  
	`öt›
(-, 0, 
v1
);

97 
LUA_OPBNOT
:  
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
v1
);

98 : 
	`lua_as£π
(0);  0;

100 
	}
}

103 
lua_Numbî
 
	$num¨ôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_Numbî
 
v1
,

104 
lua_Numbî
 
v2
) {

105 
›
) {

106 
LUA_OPADD
:  
	`luai_numadd
(
L
, 
v1
, 
v2
);

107 
LUA_OPSUB
:  
	`luai_numsub
(
L
, 
v1
, 
v2
);

108 
LUA_OPMUL
:  
	`luai_nummul
(
L
, 
v1
, 
v2
);

109 
LUA_OPDIV
:  
	`luai_numdiv
(
L
, 
v1
, 
v2
);

110 
LUA_OPPOW
:  
	`luai_numpow
(
L
, 
v1
, 
v2
);

111 
LUA_OPIDIV
:  
	`luai_numidiv
(
L
, 
v1
, 
v2
);

112 
LUA_OPUNM
:  
	`luai_numunm
(
L
, 
v1
);

113 
LUA_OPMOD
: {

114 
lua_Numbî
 
m
;

115 
	`luai_nummod
(
L
, 
v1
, 
v2
, 
m
);

116  
m
;

118 : 
	`lua_as£π
(0);  0;

120 
	}
}

123 
	$luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

124 
TVÆue
 *
ªs
) {

125 
›
) {

126 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

127 
LUA_OPSHL
: 
LUA_OPSHR
:

128 
LUA_OPBNOT
: {

129 
lua_I¡egî
 
i1
;Üua_I¡egî 
i2
;

130 i‡(
	`toöãgî
(
p1
, &
i1
Ë&&Åoöãgî(
p2
, &
i2
)) {

131 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
i1
, 
i2
));

136 
LUA_OPDIV
: 
LUA_OPPOW
: {

137 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

138 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

139 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

145 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

146 i‡(
	`âisöãgî
(
p1
Ë&&Åtisöãgî(
p2
)) {

147 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
	`ivÆue
(
p1
), ivÆue(
p2
)));

150 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

151 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

158 
	`lua_as£π
(
L
 !
NULL
);

159 
	`luaT_åyböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
	`ˇ°
(
TMS
, (
›
 - 
LUA_OPADD
Ë+ 
TM_ADD
));

160 
	}
}

163 
	$luaO_hexavÆue
 (
c
) {

164 i‡(
	`lisdigô
(
c
))  c - '0';

165  (
	`…ﬁowî
(
c
) - 'a') + 10;

166 
	}
}

169 
	$i¢eg
 (c⁄° **
s
) {

170 i‡(**
s
 == '-') { (*s)++;  1; }

171 i‡(**
s
 == '+') (*s)++;

173 
	}
}

183 #i‡!
deföed
(
lua_°rx2numbî
)

187 
	#MAXSIGDIG
 30

	)

193 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

194 
dŸ
 = 
	`lua_gëloˇÀde˝oöt
();

195 
lua_Numbî
 
r
 = 0.0;

196 
sigdig
 = 0;

197 
nosigdig
 = 0;

198 
e
 = 0;

199 
√g
;

200 
hasdŸ
 = 0;

201 *
íd±r
 = 
	`ˇ°
(*, 
s
);

202 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

203 
√g
 = 
	`i¢eg
(&
s
);

204 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

206 
s
 += 2; ; s++) {

207 i‡(*
s
 =
dŸ
) {

208 i‡(
hasdŸ
) ;

209 
hasdŸ
 = 1;

211 i‡(
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
))) {

212 i‡(
sigdig
 =0 && *
s
 == '0')

213 
nosigdig
++;

214 i‡(++
sigdig
 <
MAXSIGDIG
)

215 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ 
	`luaO_hexavÆue
(*
s
);

216 
e
++;

217 i‡(
hasdŸ
Ë
e
--;

221 i‡(
nosigdig
 + 
sigdig
 == 0)

223 *
íd±r
 = 
	`ˇ°
(*, 
s
);

224 
e
 *= 4;

225 i‡(*
s
 == 'p' || *s == 'P') {

226 
exp1
 = 0;

227 
√g1
;

228 
s
++;

229 
√g1
 = 
	`i¢eg
(&
s
);

230 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

232 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

233 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

234 i‡(
√g1
Ë
exp1
 = -exp1;

235 
e
 +
exp1
;

236 *
íd±r
 = 
	`ˇ°
(*, 
s
);

238 i‡(
√g
Ë
r
 = -r;

239  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

240 
	}
}

247 #i‡!
deföed
 (
L_MAXLENNUM
)

248 
	#L_MAXLENNUM
 200

	)

251 c⁄° *
	$l_°r2dloc
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
, 
mode
) {

252 *
íd±r
;

253 *
ªsu…
 = (
mode
 ='x'Ë? 
	`lua_°rx2numbî
(
s
, &
íd±r
)

254 : 
	`lua_°r2numbî
(
s
, &
íd±r
);

255 i‡(
íd±r
 =
s
Ë 
NULL
;

256 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

257  (*
íd±r
 ='\0'Ë?Énd±∏: 
NULL
;

258 
	}
}

274 c⁄° *
	$l_°r2d
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
) {

275 c⁄° *
íd±r
;

276 c⁄° *
pmode
 = 
	`°Ωbrk
(
s
, ".xXnN");

277 
mode
 = 
pmode
 ? 
	`…ﬁowî
(
	`ˇ°_uch¨
(*pmode)) : 0;

278 i‡(
mode
 == 'n')

279  
NULL
;

280 
íd±r
 = 
	`l_°r2dloc
(
s
, 
ªsu…
, 
mode
);

281 i‡(
íd±r
 =
NULL
) {

282 
buff
[
L_MAXLENNUM
 + 1];

283 c⁄° *
pdŸ
 = 
	`°rchr
(
s
, '.');

284 i‡(
	`°æí
(
s
Ë> 
L_MAXLENNUM
 || 
pdŸ
 =
NULL
)

285  
NULL
;

286 
	`°r˝y
(
buff
, 
s
);

287 
buff
[
pdŸ
 - 
s
] = 
	`lua_gëloˇÀde˝oöt
();

288 
íd±r
 = 
	`l_°r2dloc
(
buff
, 
ªsu…
, 
mode
);

289 i‡(
íd±r
 !
NULL
)

290 
íd±r
 = 
s
 + (íd±∏- 
buff
);

292  
íd±r
;

293 
	}
}

296 
	#MAXBY10
 
	`ˇ°
(
lua_Unsig√d
, 
LUA_MAXINTEGER
 / 10)

	)

297 
	#MAXLASTD
 
	`ˇ°_öt
(
LUA_MAXINTEGER
 % 10)

	)

299 c⁄° *
	$l_°r2öt
 (c⁄° *
s
, 
lua_I¡egî
 *
ªsu…
) {

300 
lua_Unsig√d
 
a
 = 0;

301 
em±y
 = 1;

302 
√g
;

303 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

304 
√g
 = 
	`i¢eg
(&
s
);

305 i‡(
s
[0] == '0' &&

306 (
s
[1] == 'x' || s[1] == 'X')) {

307 
s
 += 2;

308 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

309 
a
 =á * 16 + 
	`luaO_hexavÆue
(*
s
);

310 
em±y
 = 0;

314 ; 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

315 
d
 = *
s
 - '0';

316 i‡(
a
 >
MAXBY10
 && (®> MAXBY10 || 
d
 > 
MAXLASTD
 + 
√g
))

317  
NULL
;

318 
a
 =á * 10 + 
d
;

319 
em±y
 = 0;

322 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

323 i‡(
em±y
 || *
s
 !'\0'Ë 
NULL
;

325 *
ªsu…
 = 
	`l_ˇ°U2S
((
√g
Ë? 0u - 
a
 :á);

326  
s
;

328 
	}
}

331 
size_t
 
	$luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
) {

332 
lua_I¡egî
 
i
; 
lua_Numbî
 
n
;

333 c⁄° *
e
;

334 i‡((
e
 = 
	`l_°r2öt
(
s
, &
i
)Ë!
NULL
) {

335 
	`£tivÆue
(
o
, 
i
);

337 i‡((
e
 = 
	`l_°r2d
(
s
, &
n
)Ë!
NULL
) {

338 
	`£tÊtvÆue
(
o
, 
n
);

342  (
e
 - 
s
) + 1;

343 
	}
}

346 
	$luaO_utf8esc
 (*
buff
, 
x
) {

347 
n
 = 1;

348 
	`lua_as£π
(
x
 <= 0x10FFFF);

349 i‡(
x
 < 0x80)

350 
buff
[
UTF8BUFFSZ
 - 1] = 
	`ˇ°
(, 
x
);

352 
mfb
 = 0x3f;

354 
buff
[
UTF8BUFFSZ
 - (
n
++)] = 
	`ˇ°
(, 0x80 | (
x
 & 0x3f));

355 
x
 >>= 6;

356 
mfb
 >>= 1;

357 } 
x
 > 
mfb
);

358 
buff
[
UTF8BUFFSZ
 - 
n
] = 
	`ˇ°
(, (~
mfb
 << 1Ë| 
x
);

360  
n
;

361 
	}
}

365 
	#MAXNUMBER2STR
 50

	)

371 
	$luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

372 
buff
[
MAXNUMBER2STR
];

373 
size_t
 
Àn
;

374 
	`lua_as£π
(
	`âi¢umbî
(
obj
));

375 i‡(
	`âisöãgî
(
obj
))

376 
Àn
 = 
	`lua_öãgî2°r
(
buff
, (buff), 
	`ivÆue
(
obj
));

378 
Àn
 = 
	`lua_numbî2°r
(
buff
, (buff), 
	`ÊtvÆue
(
obj
));

379 #i‡!
	`deföed
(
LUA_COMPAT_FLOATSTRING
)

380 i‡(
buff
[
	`°r•n
(buff, "-0123456789")] == '\0') {

381 
buff
[
Àn
++] = 
	`lua_gëloˇÀde˝oöt
();

382 
buff
[
Àn
++] = '0';

386 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
buff
, 
Àn
));

387 
	}
}

390 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

391 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

392 
	`luaD_ö˘›
(
L
);

393 
	}
}

400 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

401 
n
 = 0;

403 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

404 i‡(
e
 =
NULL
) ;

405 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

406 *(
e
+1)) {

408 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

409 i‡(
s
 =
NULL
) s = "(null)";

410 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

414 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

415 i‡(
	`li•röt
(
	`ˇ°_uch¨
(
buff
)))

416 
	`push°r
(
L
, &
buff
, 1);

418 
	`luaO_pushf°rög
(
L
, "<\\%d>", 
	`ˇ°_uch¨
(
buff
));

422 
	`£tivÆue
(
L
->
t›
, 
	`va_¨g
(
¨gp
, ));

423 
t›2°r
;

426 
	`£tivÆue
(
L
->
t›
, 
	`ˇ°
(
lua_I¡egî
, 
	`va_¨g
(
¨gp
, 
l_uacI¡
)));

427 
t›2°r
;

430 
	`£tÊtvÆue
(
L
->
t›
, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

431 
t›2°r
:

432 
	`luaD_ö˘›
(
L
);

433 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

437 
buff
[4*(*) + 8];

438 *
p
 = 
	`va_¨g
(
¨gp
, *);

439 
l
 = 
	`lua_poöãr2°r
(
buff
, (buff), 
p
);

440 
	`push°r
(
L
, 
buff
, 
l
);

444 
buff
[
UTF8BUFFSZ
];

445 
l
 = 
	`luaO_utf8esc
(
buff
, 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, )));

446 
	`push°r
(
L
, 
buff
 + 
UTF8BUFFSZ
 - 
l
,Ü);

450 
	`push°r
(
L
, "%", 1);

454 
	`luaG_ru√º‹
(
L
, "invalid option '%%%c'Åo 'lua_pushfstring'",

455 *(
e
 + 1));

458 
n
 += 2;

459 
fmt
 = 
e
+2;

461 
	`luaD_check°ack
(
L
, 1);

462 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

463 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

464  
	`svÆue
(
L
->
t›
 - 1);

465 
	}
}

468 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

469 c⁄° *
msg
;

470 
va_li°
 
¨gp
;

471 
	`va_°¨t
(
¨gp
, 
fmt
);

472 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

473 
	`va_íd
(
¨gp
);

474  
msg
;

475 
	}
}

479 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

481 
	#RETS
 "..."

	)

482 
	#PRE
 "[°rög \""

	)

483 
	#POS
 "\"]"

	)

485 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

487 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

488 
size_t
 
l
 = 
	`°æí
(
sour˚
);

489 i‡(*
sour˚
 == '=') {

490 i‡(
l
 <
bufÊí
)

491 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

493 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

494 *
out
 = '\0';

497 i‡(*
sour˚
 == '@') {

498 i‡(
l
 <
bufÊí
)

499 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

501 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

502 
bufÊí
 -
	`LL
(
RETS
);

503 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

507 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

508 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

509 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

510 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

511 
	`add°r
(
out
, 
sour˚
, 
l
);

514 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

515 i‡(
l
 > 
bufÊí
)Ü = bufflen;

516 
	`add°r
(
out
, 
sour˚
, 
l
);

517 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

519 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

521 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lobject.h

8 #i‚de‡
lobje˘_h


9 
	#lobje˘_h


	)

12 
	~<°d¨g.h
>

15 
	~"Œimôs.h
"

16 
	~"lua.h
"

22 
	#LUA_TPROTO
 
LUA_NUMTAGS


	)

23 
	#LUA_TDEADKEY
 (
LUA_NUMTAGS
+1Ë

	)

28 
	#LUA_TOTALTAGS
 (
LUA_TPROTO
 + 2)

	)

47 
	#LUA_TLCL
 (
LUA_TFUNCTION
 | (0 << 4)Ë

	)

48 
	#LUA_TLCF
 (
LUA_TFUNCTION
 | (1 << 4)Ë

	)

49 
	#LUA_TCCL
 (
LUA_TFUNCTION
 | (2 << 4)Ë

	)

53 
	#LUA_TSHRSTR
 (
LUA_TSTRING
 | (0 << 4)Ë

	)

54 
	#LUA_TLNGSTR
 (
LUA_TSTRING
 | (1 << 4)Ë

	)

58 
	#LUA_TNUMFLT
 (
LUA_TNUMBER
 | (0 << 4)Ë

	)

59 
	#LUA_TNUMINT
 (
LUA_TNUMBER
 | (1 << 4)Ë

	)

63 
	#BIT_ISCOLLECTABLE
 (1 << 6)

	)

66 
	#˘b
(
t
Ë(—Ë| 
BIT_ISCOLLECTABLE
)

	)

72 
GCObje˘
 
	tGCObje˘
;

79 
	#Comm⁄Hódî
 
GCObje˘
 *
√xt
; 
lu_byã
 
â
;Üu_byã 
m¨ked


	)

85 
	sGCObje˘
 {

86 
	mComm⁄Hódî
;

100 
	uVÆue
 {

101 
GCObje˘
 *
	mgc
;

102 *
	mp
;

103 
	mb
;

104 
lua_CFun˘i⁄
 
	mf
;

105 
lua_I¡egî
 
	mi
;

106 
lua_Numbî
 
	mn
;

107 } 
	tVÆue
;

110 
	#TVÆuefõlds
 
VÆue
 
vÆue_
; 
â_


	)

113 
	slua_TVÆue
 {

114 
	mTVÆuefõlds
;

115 } 
	tTVÆue
;

120 
	#NILCONSTANT
 {
NULL
}, 
LUA_TNIL


	)

123 
	#vÆ_
(
o
Ë((o)->
vÆue_
)

	)

127 
	#πty≥
(
o
Ë((o)->
â_
)

	)

130 
	#nov¨ü¡
(
x
Ë((xË& 0x0F)

	)

133 
	#ây≥
(
o
Ë(
	`πty≥
(oË& 0x3F)

	)

136 
	#ânov
(
o
Ë(
	`nov¨ü¡
(
	`πty≥
(o)))

	)

140 
	#checkèg
(
o
,
t
Ë(
	`πty≥
(oË=—))

	)

141 
	#checkty≥
(
o
,
t
Ë(
	`ânov
(oË=—))

	)

142 
	#âi¢umbî
(
o
Ë
	`checkty≥
((o), 
LUA_TNUMBER
)

	)

143 
	#âisÊﬂt
(
o
Ë
	`checkèg
((o), 
LUA_TNUMFLT
)

	)

144 
	#âisöãgî
(
o
Ë
	`checkèg
((o), 
LUA_TNUMINT
)

	)

145 
	#âi¢û
(
o
Ë
	`checkèg
((o), 
LUA_TNIL
)

	)

146 
	#âisboﬁón
(
o
Ë
	`checkèg
((o), 
LUA_TBOOLEAN
)

	)

147 
	#âi¶ightu£rd©a
(
o
Ë
	`checkèg
((o), 
LUA_TLIGHTUSERDATA
)

	)

148 
	#âis°rög
(
o
Ë
	`checkty≥
((o), 
LUA_TSTRING
)

	)

149 
	#âisshr°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TSHRSTR
))

	)

150 
	#âi¶ng°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLNGSTR
))

	)

151 
	#âi°abÀ
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTABLE
))

	)

152 
	#âisfun˘i⁄
(
o
Ë
	`checkty≥
(o, 
LUA_TFUNCTION
)

	)

153 
	#âis˛osuª
(
o
Ë((
	`πty≥
(oË& 0x1FË=
LUA_TFUNCTION
)

	)

154 
	#âisC˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TCCL
))

	)

155 
	#âisL˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLCL
))

	)

156 
	#âi¶cf
(
o
Ë
	`checkèg
((o), 
LUA_TLCF
)

	)

157 
	#âisfuŒu£rd©a
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TUSERDATA
))

	)

158 
	#âi°hªad
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTHREAD
))

	)

159 
	#âisdódkey
(
o
Ë
	`checkèg
((o), 
LUA_TDEADKEY
)

	)

163 
	#ivÆue
(
o
Ë
	`check_exp
(
	`âisöãgî
(o), 
	`vÆ_
(o).
i
)

	)

164 
	#ÊtvÆue
(
o
Ë
	`check_exp
(
	`âisÊﬂt
(o), 
	`vÆ_
(o).
n
)

	)

165 
	#nvÆue
(
o
Ë
	`check_exp
(
	`âi¢umbî
(o), \

166 (
	`âisöãgî
(
o
Ë? 
	`ˇ°_num
(
	`ivÆue
(o)Ë: 
	`ÊtvÆue
(o)))

	)

167 
	#gcvÆue
(
o
Ë
	`check_exp
(
	`iscﬁÀ˘abÀ
(o), 
	`vÆ_
(o).
gc
)

	)

168 
	#pvÆue
(
o
Ë
	`check_exp
(
	`âi¶ightu£rd©a
(o), 
	`vÆ_
(o).
p
)

	)

169 
	#tsvÆue
(
o
Ë
	`check_exp
(
	`âis°rög
(o), 
	`gco2ts
(
	`vÆ_
(o).
gc
))

	)

170 
	#uvÆue
(
o
Ë
	`check_exp
(
	`âisfuŒu£rd©a
(o), 
	`gco2u
(
	`vÆ_
(o).
gc
))

	)

171 
	#˛vÆue
(
o
Ë
	`check_exp
(
	`âis˛osuª
(o), 
	`gco2˛
(
	`vÆ_
(o).
gc
))

	)

172 
	#˛LvÆue
(
o
Ë
	`check_exp
(
	`âisL˛osuª
(o), 
	`gco2l˛
(
	`vÆ_
(o).
gc
))

	)

173 
	#˛CvÆue
(
o
Ë
	`check_exp
(
	`âisC˛osuª
(o), 
	`gco2c˛
(
	`vÆ_
(o).
gc
))

	)

174 
	#fvÆue
(
o
Ë
	`check_exp
(
	`âi¶cf
(o), 
	`vÆ_
(o).
f
)

	)

175 
	#hvÆue
(
o
Ë
	`check_exp
(
	`âi°abÀ
(o), 
	`gco2t
(
	`vÆ_
(o).
gc
))

	)

176 
	#bvÆue
(
o
Ë
	`check_exp
(
	`âisboﬁón
(o), 
	`vÆ_
(o).
b
)

	)

177 
	#thvÆue
(
o
Ë
	`check_exp
(
	`âi°hªad
(o), 
	`gco2th
(
	`vÆ_
(o).
gc
))

	)

179 
	#dódvÆue
(
o
Ë
	`check_exp
(
	`âisdódkey
(o), 
	`ˇ°
(*, 
	`vÆ_
(o).
gc
))

	)

181 
	#l_isÁl£
(
o
Ë(
	`âi¢û
(oË|| (
	`âisboﬁón
(oË&& 
	`bvÆue
(oË=0))

	)

184 
	#iscﬁÀ˘abÀ
(
o
Ë(
	`πty≥
(oË& 
BIT_ISCOLLECTABLE
)

	)

188 
	#righât
(
obj
Ë(
	`ây≥
(objË=
	`gcvÆue
(obj)->
â
)

	)

190 
	#checklivíess
(
L
,
obj
) \

191 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
) || \

192 (
	`righât
(
obj
Ë&& (
L
 =
NULL
 || !
	`isdód
(
	`G
(L),
	`gcvÆue
(obj)))))

	)

196 
	#£ât_
(
o
,
t
Ë((o)->
â_
=—))

	)

198 
	#£tÊtvÆue
(
obj
,
x
) \

199 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
n
=(
x
); 
	`£ât_
(io, 
LUA_TNUMFLT
); }

	)

201 
	#chgÊtvÆue
(
obj
,
x
) \

202 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisÊﬂt
(io)); 
	`vÆ_
(io).
n
=(
x
); }

	)

204 
	#£tivÆue
(
obj
,
x
) \

205 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
i
=(
x
); 
	`£ât_
(io, 
LUA_TNUMINT
); }

	)

207 
	#chgivÆue
(
obj
,
x
) \

208 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisöãgî
(io)); 
	`vÆ_
(io).
i
=(
x
); }

	)

210 
	#£äûvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TNIL
)

	)

212 
	#£tfvÆue
(
obj
,
x
) \

213 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
f
=(
x
); 
	`£ât_
(io, 
LUA_TLCF
); }

	)

215 
	#£çvÆue
(
obj
,
x
) \

216 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
p
=(
x
); 
	`£ât_
(io, 
LUA_TLIGHTUSERDATA
); }

	)

218 
	#£tbvÆue
(
obj
,
x
) \

219 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
b
=(
x
); 
	`£ât_
(io, 
LUA_TBOOLEAN
); }

	)

221 
	#£tgcovÆue
(
L
,
obj
,
x
) \

222 { 
TVÆue
 *
io
 = (
obj
); 
GCObje˘
 *
i_g
=(
x
); \

223 
	`vÆ_
(
io
).
gc
 = 
i_g
; 
	`£ât_
(io, 
	`˘b
(i_g->
â
)); }

	)

225 
	#£tsvÆue
(
L
,
obj
,
x
) \

226 { 
TVÆue
 *
io
 = (
obj
); 
TSåög
 *
x_
 = (
x
); \

227 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(x_->
â
)); \

228 
	`checklivíess
(
L
,
io
); }

	)

230 
	#£tuvÆue
(
L
,
obj
,
x
) \

231 { 
TVÆue
 *
io
 = (
obj
); 
Ud©a
 *
x_
 = (
x
); \

232 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TUSERDATA
)); \

233 
	`checklivíess
(
L
,
io
); }

	)

235 
	#£âhvÆue
(
L
,
obj
,
x
) \

236 { 
TVÆue
 *
io
 = (
obj
); 
lua_Sèã
 *
x_
 = (
x
); \

237 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTHREAD
)); \

238 
	`checklivíess
(
L
,
io
); }

	)

240 
	#£t˛LvÆue
(
L
,
obj
,
x
) \

241 { 
TVÆue
 *
io
 = (
obj
); 
LClosuª
 *
x_
 = (
x
); \

242 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TLCL
)); \

243 
	`checklivíess
(
L
,
io
); }

	)

245 
	#£t˛CvÆue
(
L
,
obj
,
x
) \

246 { 
TVÆue
 *
io
 = (
obj
); 
CClosuª
 *
x_
 = (
x
); \

247 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TCCL
)); \

248 
	`checklivíess
(
L
,
io
); }

	)

250 
	#£thvÆue
(
L
,
obj
,
x
) \

251 { 
TVÆue
 *
io
 = (
obj
); 
TabÀ
 *
x_
 = (
x
); \

252 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTABLE
)); \

253 
	`checklivíess
(
L
,
io
); }

	)

255 
	#£tdódvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TDEADKEY
)

	)

259 
	#£tobj
(
L
,
obj1
,
obj2
) \

260 { 
TVÆue
 *
io1
=(
obj1
); *io1 = *(
obj2
); \

261 ()
L
; 
	`checklivíess
(L,
io1
); }

	)

269 
	#£tobjs2s
 
£tobj


	)

271 
	#£tobj2s
 
£tobj


	)

272 
	#£tsvÆue2s
 
£tsvÆue


	)

273 
	#£thvÆue2s
 
£thvÆue


	)

274 
	#£çtvÆue2s
 
£çtvÆue


	)

276 
	#£tobjt2t
 
£tobj


	)

278 
	#£tobj2n
 
£tobj


	)

279 
	#£tsvÆue2n
 
£tsvÆue


	)

282 
	#£tobj2t
(
L
,
o1
,
o2
Ë(()L, *(o1)=*(o2), 
	`checklivíess
(L,(o1)))

	)

294 
TVÆue
 *
	tStkId
;

303 
	sTSåög
 {

304 
	mComm⁄Hódî
;

305 
lu_byã
 
	mexåa
;

306 
lu_byã
 
	mshæí
;

307 
	mhash
;

309 
size_t
 
	m gÀn
;

310 
TSåög
 *
	mh√xt
;

311 } 
	mu
;

312 } 
	tTSåög
;

318 
	uUTSåög
 {

319 
L_UmaxÆign
 
	mdummy
;

320 
TSåög
 
	mtsv
;

321 } 
	tUTSåög
;

328 
	#gë°r
(
ts
) \

329 
	`check_exp
(((
ts
)->
exåa
), 
	`ˇ°
(*, (ts)Ë+ (
UTSåög
))

	)

333 
	#svÆue
(
o
Ë
	`gë°r
(
	`tsvÆue
(o))

	)

336 
	#ts¶í
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 ? (s)->
shæí
 : (s)->
u
.
 gÀn
)

	)

339 
	#v¶í
(
o
Ë
	`ts¶í
(
	`tsvÆue
(o))

	)

346 
	sUd©a
 {

347 
	mComm⁄Hódî
;

348 
lu_byã
 
	mâuv_
;

349 
TabÀ
 *
	mmë©abÀ
;

350 
size_t
 
	mÀn
;

351 
VÆue
 
	mu£r_
;

352 } 
	tUd©a
;

358 
	uUUd©a
 {

359 
L_UmaxÆign
 
	mdummy
;

360 
Ud©a
 
	muv
;

361 } 
	tUUd©a
;

368 
	#gëud©amem
(
u
) \

369 
	`check_exp
(((
u
)->
âuv_
), (
	`ˇ°
(*, (u)Ë+ (
UUd©a
)))

	)

371 
	#£tu£rvÆue
(
L
,
u
,
o
) \

372 { c⁄° 
TVÆue
 *
io
=(
o
); 
Ud©a
 *
iu
 = (
u
); \

373 
iu
->
u£r_
 = 
io
->
vÆue_
; iu->
âuv_
 = 
	`πty≥
(io); \

374 
	`checklivíess
(
L
,
io
); }

	)

377 
	#gëu£rvÆue
(
L
,
u
,
o
) \

378 { 
TVÆue
 *
io
=(
o
); c⁄° 
Ud©a
 *
iu
 = (
u
); \

379 
io
->
vÆue_
 = 
iu
->
u£r_
; 
	`£ât_
(io, iu->
âuv_
); \

380 
	`checklivíess
(
L
,
io
); }

	)

386 
	sUpvÆdesc
 {

387 
TSåög
 *
	m«me
;

388 
lu_byã
 
	mö°ack
;

389 
lu_byã
 
	midx
;

390 } 
	tUpvÆdesc
;

397 
	sLocV¨
 {

398 
TSåög
 *
	mv¨«me
;

399 
	m°¨çc
;

400 
	mídpc
;

401 } 
	tLocV¨
;

407 
	sPrŸo
 {

408 
	mComm⁄Hódî
;

409 
lu_byã
 
	mnum∑øms
;

410 
lu_byã
 
	mis_v¨¨g
;

411 
lu_byã
 
	mmax°acksize
;

412 
	msizeupvÆues
;

413 
	msizek
;

414 
	msizecode
;

415 
	msizñöeöfo
;

416 
	msizï
;

417 
	msizñocv¨s
;

418 
	mlöedeföed
;

419 
	mœ°löedeföed
;

420 
TVÆue
 *
	mk
;

421 
In°ru˘i⁄
 *
	mcode
;

422 
PrŸo
 **
	mp
;

423 *
	mlöeöfo
;

424 
LocV¨
 *
	mlocv¨s
;

425 
UpvÆdesc
 *
	mupvÆues
;

426 
LClosuª
 *
	mˇche
;

427 
TSåög
 *
	msour˚
;

428 
GCObje˘
 *
	mg˛i°
;

429 } 
	tPrŸo
;

436 
UpVÆ
 
	tUpVÆ
;

443 
	#ClosuªHódî
 \

444 
Comm⁄Hódî
; 
lu_byã
 
nupvÆues
; 
GCObje˘
 *
g˛i°


	)

446 
	sCClosuª
 {

447 
	mClosuªHódî
;

448 
lua_CFun˘i⁄
 
	mf
;

449 
TVÆue
 
	mupvÆue
[1];

450 } 
	tCClosuª
;

453 
	sLClosuª
 {

454 
	mClosuªHódî
;

455 
PrŸo
 *
	mp
;

456 
UpVÆ
 *
	mupvÆs
[1];

457 } 
	tLClosuª
;

460 
	uClosuª
 {

461 
CClosuª
 
	mc
;

462 
LClosuª
 
	ml
;

463 } 
	tClosuª
;

466 
	#isLfun˘i⁄
(
o
Ë
	`âisL˛osuª
(o)

	)

468 
	#gë¥Ÿo
(
o
Ë(
	`˛LvÆue
(o)->
p
)

	)

475 
	uTKey
 {

477 
	mTVÆuefõlds
;

478 
	m√xt
;

479 } 
	mnk
;

480 
TVÆue
 
	mtvk
;

481 } 
	tTKey
;

485 
	#£äodekey
(
L
,
key
,
obj
) \

486 { 
TKey
 *
k_
=(
key
); c⁄° 
TVÆue
 *
io_
=(
obj
); \

487 
k_
->
nk
.
vÆue_
 = 
io_
->vÆue_; k_->nk.
â_
 = io_->tt_; \

488 ()
L
; 
	`checklivíess
(L,
io_
); }

	)

491 
	sNode
 {

492 
TVÆue
 
	mi_vÆ
;

493 
TKey
 
	mi_key
;

494 } 
	tNode
;

497 
	sTabÀ
 {

498 
	mComm⁄Hódî
;

499 
lu_byã
 
	mÊags
;

500 
lu_byã
 
	mlsizíode
;

501 
	msizóºay
;

502 
TVÆue
 *
	m¨øy
;

503 
Node
 *
	mnode
;

504 
Node
 *
	mœ°‰ì
;

505 
TabÀ
 *
	mmë©abÀ
;

506 
GCObje˘
 *
	mg˛i°
;

507 } 
	tTabÀ
;

514 
	#lmod
(
s
,
size
) \

515 (
	`check_exp
((
size
&(size-1))==0, (
	`ˇ°
(, (
s
Ë& ((size)-1)))))

	)

518 
	#twŸo
(
x
Ë(1<<(x))

	)

519 
	#sizíode
(
t
Ë(
	`twŸo
(—)->
lsizíode
))

	)

525 
	#luaO_nûobje˘
 (&
luaO_nûobje˘_
)

	)

528 
LUAI_DDEC
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
;

531 
	#UTF8BUFFSZ
 8

	)

533 
LUAI_FUNC
 
luaO_öt2fb
 (
x
);

534 
LUAI_FUNC
 
luaO_fb2öt
 (
x
);

535 
LUAI_FUNC
 
luaO_utf8esc
 (*
buff
, 
x
);

536 
LUAI_FUNC
 
luaO_˚ûlog2
 (
x
);

537 
LUAI_FUNC
 
luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
,

538 c⁄° 
TVÆue
 *
p2
, TVÆuê*
ªs
);

539 
LUAI_FUNC
 
size_t
 
luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
);

540 
LUAI_FUNC
 
luaO_hexavÆue
 (
c
);

541 
LUAI_FUNC
 
luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
);

542 
LUAI_FUNC
 c⁄° *
luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

543 
va_li°
 
¨gp
);

544 
LUAI_FUNC
 c⁄° *
luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

545 
LUAI_FUNC
 
luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
Àn
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lopcodes.c

7 
	#l›codes_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"l›codes.h
"

20 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

68 
NULL


72 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

74 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

76 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

78 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

79 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

84 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

89 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

90 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

94 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

97 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

99 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

100 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

102 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

104 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

106 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

107 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

108 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

109 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

110 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

111 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

112 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

113 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

114 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

115 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

116 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

117 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

118 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

119 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

120 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

121 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

122 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lopcodes.h

7 #i‚de‡
l›codes_h


8 
	#l›codes_h


	)

10 
	~"Œimôs.h
"

32 
	eOpMode
 {
	miABC
, 
	miABx
, 
	miAsBx
, 
	miAx
};

38 
	#SIZE_C
 9

	)

39 
	#SIZE_B
 9

	)

40 
	#SIZE_Bx
 (
SIZE_C
 + 
SIZE_B
)

	)

41 
	#SIZE_A
 8

	)

42 
	#SIZE_Ax
 (
SIZE_C
 + 
SIZE_B
 + 
SIZE_A
)

	)

44 
	#SIZE_OP
 6

	)

46 
	#POS_OP
 0

	)

47 
	#POS_A
 (
POS_OP
 + 
SIZE_OP
)

	)

48 
	#POS_C
 (
POS_A
 + 
SIZE_A
)

	)

49 
	#POS_B
 (
POS_C
 + 
SIZE_C
)

	)

50 
	#POS_Bx
 
POS_C


	)

51 
	#POS_Ax
 
POS_A


	)

59 #i‡
SIZE_Bx
 < 
LUAI_BITSINT
-1

60 
	#MAXARG_Bx
 ((1<<
SIZE_Bx
)-1)

	)

61 
	#MAXARG_sBx
 (
MAXARG_Bx
>>1Ë

	)

63 
	#MAXARG_Bx
 
MAX_INT


	)

64 
	#MAXARG_sBx
 
MAX_INT


	)

67 #i‡
SIZE_Ax
 < 
LUAI_BITSINT
-1

68 
	#MAXARG_Ax
 ((1<<
SIZE_Ax
)-1)

	)

70 
	#MAXARG_Ax
 
MAX_INT


	)

74 
	#MAXARG_A
 ((1<<
SIZE_A
)-1)

	)

75 
	#MAXARG_B
 ((1<<
SIZE_B
)-1)

	)

76 
	#MAXARG_C
 ((1<<
SIZE_C
)-1)

	)

80 
	#MASK1
(
n
,
p
Ë((~((~(
In°ru˘i⁄
)0)<<“)))<<’))

	)

83 
	#MASK0
(
n
,
p
Ë(~
	`MASK1
“,p))

	)

89 
	#GET_OPCODE
(
i
Ë(
	`ˇ°
(
OpCode
, ((i)>>
POS_OP
Ë& 
	`MASK1
(
SIZE_OP
,0)))

	)

90 
	#SET_OPCODE
(
i
,
o
Ë((iË(((i)&
	`MASK0
(
SIZE_OP
,
POS_OP
)) | \

91 ((
	`ˇ°
(
In°ru˘i⁄
, 
o
)<<
POS_OP
)&
	`MASK1
(
SIZE_OP
,POS_OP))))

	)

93 
	#gë¨g
(
i
,
pos
,
size
Ë(
	`ˇ°
(, ((i)>>posË& 
	`MASK1
(size,0)))

	)

94 
	#£èrg
(
i
,
v
,
pos
,
size
Ë((iË(((i)&
	`MASK0
(size,pos)) | \

95 ((
	`ˇ°
(
In°ru˘i⁄
, 
v
)<<
pos
)&
	`MASK1
(
size
,pos))))

	)

97 
	#GETARG_A
(
i
Ë
	`gë¨g
(i, 
POS_A
, 
SIZE_A
)

	)

98 
	#SETARG_A
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_A
, 
SIZE_A
)

	)

100 
	#GETARG_B
(
i
Ë
	`gë¨g
(i, 
POS_B
, 
SIZE_B
)

	)

101 
	#SETARG_B
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_B
, 
SIZE_B
)

	)

103 
	#GETARG_C
(
i
Ë
	`gë¨g
(i, 
POS_C
, 
SIZE_C
)

	)

104 
	#SETARG_C
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_C
, 
SIZE_C
)

	)

106 
	#GETARG_Bx
(
i
Ë
	`gë¨g
(i, 
POS_Bx
, 
SIZE_Bx
)

	)

107 
	#SETARG_Bx
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Bx
, 
SIZE_Bx
)

	)

109 
	#GETARG_Ax
(
i
Ë
	`gë¨g
(i, 
POS_Ax
, 
SIZE_Ax
)

	)

110 
	#SETARG_Ax
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Ax
, 
SIZE_Ax
)

	)

112 
	#GETARG_sBx
(
i
Ë(
	`GETARG_Bx
(i)-
MAXARG_sBx
)

	)

113 
	#SETARG_sBx
(
i
,
b
Ë
	`SETARG_Bx
((i),
	`ˇ°
(, (b)+
MAXARG_sBx
))

	)

116 
	#CREATE_ABC
(
o
,
a
,
b
,
c
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

117 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

118 | (
	`ˇ°
(
In°ru˘i⁄
, 
b
)<<
POS_B
) \

119 | (
	`ˇ°
(
In°ru˘i⁄
, 
c
)<<
POS_C
))

	)

121 
	#CREATE_ABx
(
o
,
a
,
bc
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

122 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

123 | (
	`ˇ°
(
In°ru˘i⁄
, 
bc
)<<
POS_Bx
))

	)

125 
	#CREATE_Ax
(
o
,
a
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

126 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_Ax
))

	)

134 
	#BITRK
 (1 << (
SIZE_B
 - 1))

	)

137 
	#ISK
(
x
Ë((xË& 
BITRK
)

	)

140 
	#INDEXK
(
r
Ë(()‘Ë& ~
BITRK
)

	)

142 #i‡!
deföed
(
MAXINDEXRK
)

143 
	#MAXINDEXRK
 (
BITRK
 - 1)

	)

147 
	#RKASK
(
x
Ë((xË| 
BITRK
)

	)

153 
	#NO_REG
 
MAXARG_A


	)

171 
	mOP_MOVE
,

172 
	mOP_LOADK
,

173 
	mOP_LOADKX
,

174 
	mOP_LOADBOOL
,

175 
	mOP_LOADNIL
,

176 
	mOP_GETUPVAL
,

178 
	mOP_GETTABUP
,

179 
	mOP_GETTABLE
,

181 
	mOP_SETTABUP
,

182 
	mOP_SETUPVAL
,

183 
	mOP_SETTABLE
,

185 
	mOP_NEWTABLE
,

187 
	mOP_SELF
,

189 
	mOP_ADD
,

190 
	mOP_SUB
,

191 
	mOP_MUL
,

192 
	mOP_MOD
,

193 
	mOP_POW
,

194 
	mOP_DIV
,

195 
	mOP_IDIV
,

196 
	mOP_BAND
,

197 
	mOP_BOR
,

198 
	mOP_BXOR
,

199 
	mOP_SHL
,

200 
	mOP_SHR
,

201 
	mOP_UNM
,

202 
	mOP_BNOT
,

203 
	mOP_NOT
,

204 
	mOP_LEN
,

206 
	mOP_CONCAT
,

208 
	mOP_JMP
,

209 
	mOP_EQ
,

210 
	mOP_LT
,

211 
	mOP_LE
,

213 
	mOP_TEST
,

214 
	mOP_TESTSET
,

216 
	mOP_CALL
,

217 
	mOP_TAILCALL
,

218 
	mOP_RETURN
,

220 
	mOP_FORLOOP
,

222 
	mOP_FORPREP
,

224 
	mOP_TFORCALL
,

225 
	mOP_TFORLOOP
,

227 
	mOP_SETLIST
,

229 
	mOP_CLOSURE
,

231 
	mOP_VARARG
,

233 
	mOP_EXTRAARG


234 } 
	tOpCode
;

237 
	#NUM_OPCODES
 (
	`ˇ°
(, 
OP_EXTRAARG
Ë+ 1)

	)

274 
	eOpArgMask
 {

275 
	mOpArgN
,

276 
	mOpArgU
,

277 
	mOpArgR
,

278 
	mOpArgK


281 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
];

283 
	#gëOpMode
(
m
Ë(
	`ˇ°
(
OpMode
, 
luaP_›modes
[m] & 3))

	)

284 
	#gëBMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 4Ë& 3))

	)

285 
	#gëCMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 2Ë& 3))

	)

286 
	#ã°AMode
(
m
Ë(
luaP_›modes
[m] & (1 << 6))

	)

287 
	#ã°TMode
(
m
Ë(
luaP_›modes
[m] & (1 << 7))

	)

290 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1];

294 
	#LFIELDS_PER_FLUSH
 50

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/loslib.c

7 
	#lo¶ib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<loˇÀ.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

19 
	~"lua.h
"

21 
	~"œuxlib.h
"

22 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

34 
	#L_STRFTIMEC89
 "aAbBcdHIjmMpSUwWxXyYZ%"

	)

37 
	#L_STRFTIMEC99
 "aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%" \

38 "||" "EcECExEXEyEY" "OdOeOHOIOmOMOSOuOUOVOwOWOy"

	)

41 
	#L_STRFTIMEWIN
 "aAbBcdHIjmMpSUwWxXyYzZ%" \

42 "||" "#c#x#d#H#I#j#m#M#S#U#w#W#y#Y"

	)

44 #i‡
deföed
(
LUA_USE_WINDOWS
)

45 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEWIN


	)

46 #ñi‡
deföed
(
LUA_USE_C89
)

47 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC89


	)

49 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC99


	)

62 #i‡!
deföed
(
l_time_t
)

66 
	#l_timë
 
lua_I¡egî


	)

67 
	#l_pushtime
(
L
,
t
Ë
	`lua_pushöãgî
(L,(
lua_I¡egî
)—))

	)

69 
time_t
 
	$l_checktime
 (
lua_Sèã
 *
L
, 
¨g
) {

70 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

71 
	`luaL_¨gcheck
(
L
, (
time_t
)
t
 =t, 
¨g
, "time out-of-bounds");

72  (
time_t
)
t
;

73 
	}
}

78 #i‡!
deföed
(
l_gmtime
)

84 #i‡
deföed
(
LUA_USE_POSIX
)

86 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

87 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

92 
	#l_gmtime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`gmtime
—))

	)

93 
	#l_loˇ…ime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`loˇ…ime
—))

	)

109 #i‡!
deföed
(
lua_tm≤am
)

111 #i‡
deföed
(
LUA_USE_POSIX
)

113 
	~<uni°d.h
>

115 
	#LUA_TMPNAMBUFSIZE
 32

	)

117 #i‡!
deföed
(
LUA_TMPNAMTEMPLATE
)

118 
	#LUA_TMPNAMTEMPLATE
 "/tmp/lua_XXXXXX"

	)

121 
	#lua_tm≤am
(
b
,
e
) { \

122 
	`°r˝y
(
b
, 
LUA_TMPNAMTEMPLATE
); \

123 
e
 = 
	`mk°emp
(
b
); \

124 i‡(
e
 !-1Ë
	`˛o£
(e); \

125 
e
 = (ê=-1); }

	)

130 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

131 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

141 
	$os_execuã
 (
lua_Sèã
 *
L
) {

142 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

143 
°©
 = 
	`sy°em
(
cmd
);

144 i‡(
cmd
 !
NULL
)

145  
	`luaL_exe¸esu…
(
L
, 
°©
);

147 
	`lua_pushboﬁón
(
L
, 
°©
);

150 
	}
}

153 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

154 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

155  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

156 
	}
}

159 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

160 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

161 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

162  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

163 
	}
}

166 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

167 
buff
[
LUA_TMPNAMBUFSIZE
];

168 
îr
;

169 
	`lua_tm≤am
(
buff
, 
îr
);

170 i‡(
îr
)

171  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

172 
	`lua_push°rög
(
L
, 
buff
);

174 
	}
}

177 
	$os_gëív
 (
lua_Sèã
 *
L
) {

178 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

180 
	}
}

183 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

184 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

186 
	}
}

197 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

198 
	`lua_pushöãgî
(
L
, 
vÆue
);

199 
	`lua_£tfõld
(
L
, -2, 
key
);

200 
	}
}

202 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

203 i‡(
vÆue
 < 0)

205 
	`lua_pushboﬁón
(
L
, 
vÆue
);

206 
	`lua_£tfõld
(
L
, -2, 
key
);

207 
	}
}

213 
	$£èŒfõlds
 (
lua_Sèã
 *
L
, 
tm
 *
°m
) {

214 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

215 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

216 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

217 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

218 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
 + 1);

219 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
 + 1900);

220 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
 + 1);

221 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
 + 1);

222 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

223 
	}
}

226 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

227 
ªs
;

228 
ªs
 = (
	`lua_gëfõld
(
L
, -1, 
key
Ë=
LUA_TNIL
Ë? -1 : 
	`lua_toboﬁón
(L, -1);

229 
	`lua_p›
(
L
, 1);

230  
ªs
;

231 
	}
}

235 #i‡!
deföed
(
L_MAXDATEFIELD
)

236 
	#L_MAXDATEFIELD
 (
INT_MAX
 / 2)

	)

239 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
, 
dñè
) {

240 
i¢um
;

241 
t
 = 
	`lua_gëfõld
(
L
, -1, 
key
);

242 
lua_I¡egî
 
ªs
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

243 i‡(!
i¢um
) {

244 i‡(
t
 !
LUA_TNIL
)

245  
	`luaL_îr‹
(
L
, "fõld '%s' i†nŸá¿öãgî", 
key
);

246 i‡(
d
 < 0)

247  
	`luaL_îr‹
(
L
, "fõld '%s' missög i¿d©êèbÀ", 
key
);

248 
ªs
 = 
d
;

251 i‡(!(-
L_MAXDATEFIELD
 <
ªs
 &&Ñes <= L_MAXDATEFIELD))

252  
	`luaL_îr‹
(
L
, "fõld '%s' i†out-of-bound", 
key
);

253 
ªs
 -
dñè
;

255 
	`lua_p›
(
L
, 1);

256  ()
ªs
;

257 
	}
}

260 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
,

261 
±rdiff_t
 
c⁄vÀn
, *
buff
) {

262 c⁄° *
›ti⁄
 = 
LUA_STRFTIMEOPTIONS
;

263 
›Àn
 = 1;

264 ; *
›ti⁄
 !'\0' && 
›Àn
 <
c⁄vÀn
; option += oplen) {

265 i‡(*
›ti⁄
 == '|')

266 
›Àn
++;

267 i‡(
	`memcmp
(
c⁄v
, 
›ti⁄
, 
›Àn
) == 0) {

268 
	`mem˝y
(
buff
, 
c⁄v
, 
›Àn
);

269 
buff
[
›Àn
] = '\0';

270  
c⁄v
 + 
›Àn
;

273 
	`luaL_¨gîr‹
(
L
, 1,

274 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

275  
c⁄v
;

276 
	}
}

280 
	#SIZETIMEFMT
 250

	)

283 
	$os_d©e
 (
lua_Sèã
 *
L
) {

284 
size_t
 
¶í
;

285 c⁄° *
s
 = 
	`luaL_›é°rög
(
L
, 1, "%c", &
¶í
);

286 
time_t
 
t
 = 
	`luaL_›t
(
L
, 
l_checktime
, 2, 
	`time
(
NULL
));

287 c⁄° *
£
 = 
s
 + 
¶í
;

288 
tm
 
tmr
, *
°m
;

289 i‡(*
s
 == '!') {

290 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

291 
s
++;

294 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

295 i‡(
°m
 =
NULL
)

296  
	`luaL_îr‹
(
L
,

298 i‡(
	`°rcmp
(
s
, "*t") == 0) {

299 
	`lua_¸óãèbÀ
(
L
, 0, 9);

300 
	`£èŒfõlds
(
L
, 
°m
);

303 
cc
[4];

304 
luaL_Buf„r
 
b
;

305 
cc
[0] = '%';

306 
	`luaL_bufföô
(
L
, &
b
);

307 
s
 < 
£
) {

308 i‡(*
s
 != '%')

309 
	`luaL_addch¨
(&
b
, *
s
++);

311 
size_t
 
ª¶í
;

312 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
SIZETIMEFMT
);

313 
s
++;

314 
s
 = 
	`check›ti⁄
(
L
, s, 
£
 - s, 
cc
 + 1);

315 
ª¶í
 = 
	`°r·ime
(
buff
, 
SIZETIMEFMT
, 
cc
, 
°m
);

316 
	`luaL_addsize
(&
b
, 
ª¶í
);

319 
	`luaL_pushªsu…
(&
b
);

322 
	}
}

325 
	$os_time
 (
lua_Sèã
 *
L
) {

326 
time_t
 
t
;

327 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

328 
t
 = 
	`time
(
NULL
);

330 
tm
 
ts
;

331 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

332 
	`lua_£â›
(
L
, 1);

333 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0, 0);

334 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0, 0);

335 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12, 0);

336 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1, 0);

337 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1, 1);

338 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1, 1900);

339 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

340 
t
 = 
	`mktime
(&
ts
);

341 
	`£èŒfõlds
(
L
, &
ts
);

343 i‡(
t
 !(
time_t
)(
l_timë
)t ||Å == (time_t)(-1))

344  
	`luaL_îr‹
(
L
,

346 
	`l_pushtime
(
L
, 
t
);

348 
	}
}

351 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

352 
time_t
 
t1
 = 
	`l_checktime
(
L
, 1);

353 
time_t
 
t2
 = 
	`l_checktime
(
L
, 2);

354 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
	`dif·ime
(
t1
, 
t2
));

356 
	}
}

361 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

362 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

363 
LC_NUMERIC
, 
LC_TIME
};

364 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

365 "numîic", "time", 
NULL
};

366 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

367 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

368 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

370 
	}
}

373 
	$os_exô
 (
lua_Sèã
 *
L
) {

374 
°©us
;

375 i‡(
	`lua_isboﬁón
(
L
, 1))

376 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

378 
°©us
 = ()
	`luaL_›töãgî
(
L
, 1, 
EXIT_SUCCESS
);

379 i‡(
	`lua_toboﬁón
(
L
, 2))

380 
	`lua_˛o£
(
L
);

381 i‡(
L
Ë
	`exô
(
°©us
);

383 
	}
}

386 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

387 {"˛ock", 
os_˛ock
},

388 {"d©e", 
os_d©e
},

389 {"dif·ime", 
os_dif·ime
},

390 {"execuã", 
os_execuã
},

391 {"exô", 
os_exô
},

392 {"gëív", 
os_gëív
},

393 {"ªmove", 
os_ªmove
},

394 {"ª«me", 
os_ª«me
},

395 {"£éoˇÀ", 
os_£éoˇÀ
},

396 {"time", 
os_time
},

397 {"tm≤ame", 
os_tm≤ame
},

398 {
NULL
, NULL}

405 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

406 
	`luaL_√wlib
(
L
, 
sy¶ib
);

408 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lparser.c

7 
	#Õ¨£r_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"lcode.h
"

18 
	~"ldebug.h
"

19 
	~"ldo.h
"

20 
	~"lfunc.h
"

21 
	~"Œex.h
"

22 
	~"lmem.h
"

23 
	~"lobje˘.h
"

24 
	~"l›codes.h
"

25 
	~"Õ¨£r.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

34 
	#MAXVARS
 200

	)

37 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	#eq°r
(
a
,
b
Ë(◊Ë=(b))

	)

48 
	sBlockC¡
 {

49 
BlockC¡
 *
	m¥evious
;

50 
	mfú°œbñ
;

51 
	mfú°gŸo
;

52 
lu_byã
 
	m«˘v¨
;

53 
lu_byã
 
	mupvÆ
;

54 
lu_byã
 
	mi¶o›
;

55 } 
	tBlockC¡
;

62 
°©emít
 (
LexSèã
 *
ls
);

63 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

67 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

68 
ls
->
t
.
tokí
 = 0;

69 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

70 
	}
}

73 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

74 
	`luaX_sy¡axîr‹
(
ls
,

75 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

76 
	}
}

79 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

80 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

81 c⁄° *
msg
;

82 
löe
 = 
fs
->
f
->
löedeföed
;

83 c⁄° *
whîe
 = (
löe
 == 0)

85 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

86 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

87 
wh©
, 
limô
, 
whîe
);

88 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

89 
	}
}

92 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

93 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

94 
	}
}

97 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

98 i‡(
ls
->
t
.
tokí
 =
c
) {

99 
	`luaX_√xt
(
ls
);

103 
	}
}

106 
	$check
 (
LexSèã
 *
ls
, 
c
) {

107 i‡(
ls
->
t
.
tokí
 !
c
)

108 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

109 
	}
}

112 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

113 
	`check
(
ls
, 
c
);

114 
	`luaX_√xt
(
ls
);

115 
	}
}

118 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

122 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

123 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

124 i‡(
whîe
 =
ls
->
löíumbî
)

125 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

127 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

129 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

132 
	}
}

135 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

136 
TSåög
 *
ts
;

137 
	`check
(
ls
, 
TK_NAME
);

138 
ts
 = 
ls
->
t
.
£möfo
.ts;

139 
	`luaX_√xt
(
ls
);

140  
ts
;

141 
	}
}

144 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

145 
e
->
f
 =É->
t
 = 
NO_JUMP
;

146 
e
->
k
 = k;

147 
e
->
u
.
öfo
 = 
i
;

148 
	}
}

151 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

152 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

153 
	}
}

156 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

157 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

158 
	}
}

161 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

162 
FuncSèã
 *
fs
 = 
ls
->fs;

163 
PrŸo
 *
f
 = 
fs
->f;

164 
ﬁdsize
 = 
f
->
sizñocv¨s
;

165 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

166 
LocV¨
, 
SHRT_MAX
, "local variables");

167 
ﬁdsize
 < 
f
->
sizñocv¨s
)

168 
f
->
locv¨s
[
ﬁdsize
++].
v¨«me
 = 
NULL
;

169 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

170 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

171  
fs
->
∆ocv¨s
++;

172 
	}
}

175 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

176 
FuncSèã
 *
fs
 = 
ls
->fs;

177 
Dynd©a
 *
dyd
 = 
ls
->dyd;

178 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

179 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

180 
MAXVARS
, "local variables");

181 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

182 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

183 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

184 
	}
}

187 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

188 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

189 
	}
}

191 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

192 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

195 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

196 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

197 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

198  &
fs
->
f
->
locv¨s
[
idx
];

199 
	}
}

202 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

203 
FuncSèã
 *
fs
 = 
ls
->fs;

204 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

205 ; 
nv¨s
;Çvars--) {

206 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

208 
	}
}

211 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

212 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

213 
fs
->
«˘v¨
 > 
tﬁevñ
)

214 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

215 
	}
}

218 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

219 
i
;

220 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

221 
i
 = 0; i < 
fs
->
nups
; i++) {

222 i‡(
	`eq°r
(
up
[
i
].
«me
,Çame))  i;

225 
	}
}

228 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

229 
PrŸo
 *
f
 = 
fs
->f;

230 
ﬁdsize
 = 
f
->
sizeupvÆues
;

231 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

232 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

233 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

234 
ﬁdsize
 < 
f
->
sizeupvÆues
)

235 
f
->
upvÆues
[
ﬁdsize
++].
«me
 = 
NULL
;

236 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

237 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

238 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

239 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

240  
fs
->
nups
++;

241 
	}
}

244 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

245 
i
;

246 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

247 i‡(
	`eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

248  
i
;

251 
	}
}

258 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

259 
BlockC¡
 *
bl
 = 
fs
->bl;

260 
bl
->
«˘v¨
 > 
Àvñ
)

261 
bl
 = bl->
¥evious
;

262 
bl
->
upvÆ
 = 1;

263 
	}
}

270 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

271 i‡(
fs
 =
NULL
)

272 
	`öô_exp
(
v¨
, 
VVOID
, 0);

274 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

275 i‡(
v
 >= 0) {

276 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

277 i‡(!
ba£
)

278 
	`m¨kupvÆ
(
fs
, 
v
);

281 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

282 i‡(
idx
 < 0) {

283 
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0);

284 i‡(
v¨
->
k
 =
VVOID
)

287 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

289 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

292 
	}
}

295 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

296 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

297 
FuncSèã
 *
fs
 = 
ls
->fs;

298 
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1);

299 i‡(
v¨
->
k
 =
VVOID
) {

300 
expdesc
 
key
;

301 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

302 
	`lua_as£π
(
v¨
->
k
 !
VVOID
);

303 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

304 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

306 
	}
}

309 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

310 
FuncSèã
 *
fs
 = 
ls
->fs;

311 
exåa
 = 
nv¨s
 - 
√xps
;

312 i‡(
	`hasmu…ªt
(
e
->
k
)) {

313 
exåa
++;

314 i‡(
exåa
 < 0)Éxtra = 0;

315 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

316 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

319 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

320 i‡(
exåa
 > 0) {

321 
ªg
 = 
fs
->
‰ìªg
;

322 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

323 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

326 i‡(
√xps
 > 
nv¨s
)

327 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

328 
	}
}

331 
	$íãæevñ
 (
LexSèã
 *
ls
) {

332 
lua_Sèã
 *
L
 = 
ls
->L;

333 ++
L
->
nCˇŒs
;

334 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

335 
	}
}

338 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

341 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

342 
i
;

343 
FuncSèã
 *
fs
 = 
ls
->fs;

344 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

345 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

346 
	`lua_as£π
(
	`eq°r
(
gt
->
«me
, 
œbñ
->name));

347 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

348 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

349 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

351 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

352 
	`£mîr‹
(
ls
, 
msg
);

354 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

356 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

357 
gl
->
¨r
[
i
] = gl->arr[i + 1];

358 
gl
->
n
--;

359 
	}
}

365 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

366 
i
;

367 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

368 
Dynd©a
 *
dyd
 = 
ls
->dyd;

369 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

371 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

372 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

373 i‡(
	`eq°r
(
lb
->
«me
, 
gt
->name)) {

374 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

375 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

376 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

377 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

382 
	}
}

385 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

386 
löe
, 
pc
) {

387 
n
 = 
l
->n;

388 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

389 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

390 
l
->
¨r
[
n
].
«me
 =Çame;

391 
l
->
¨r
[
n
].
löe
 =Üine;

392 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

393 
l
->
¨r
[
n
].
pc
 =Öc;

394 
l
->
n
 =Ç + 1;

395  
n
;

396 
	}
}

403 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

404 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

405 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

406 
i
 < 
gl
->
n
) {

407 i‡(
	`eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

408 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

410 
i
++;

412 
	}
}

421 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

422 
i
 = 
bl
->
fú°gŸo
;

423 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

426 
i
 < 
gl
->
n
) {

427 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

428 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

429 i‡(
bl
->
upvÆ
)

430 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

431 
gt
->
«˘v¨
 = 
bl
->nactvar;

433 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

434 
i
++;

436 
	}
}

439 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

440 
bl
->
i¶o›
 = isloop;

441 
bl
->
«˘v¨
 = 
fs
->nactvar;

442 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

443 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

444 
bl
->
upvÆ
 = 0;

445 
bl
->
¥evious
 = 
fs
->bl;

446 
fs
->
bl
 = bl;

447 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

448 
	}
}

454 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

455 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

456 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

457 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

458 
	}
}

464 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

465 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

468 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

469 
	`£mîr‹
(
ls
, 
msg
);

470 
	}
}

473 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

474 
BlockC¡
 *
bl
 = 
fs
->bl;

475 
LexSèã
 *
ls
 = 
fs
->ls;

476 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

478 
j
 = 
	`luaK_jump
(
fs
);

479 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

480 
	`luaK_∑tchtohîe
(
fs
, 
j
);

482 i‡(
bl
->
i¶o›
)

483 
	`bªakœbñ
(
ls
);

484 
fs
->
bl
 = bl->
¥evious
;

485 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

486 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

487 
fs
->
‰ìªg
 = fs->
«˘v¨
;

488 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

489 i‡(
bl
->
¥evious
)

490 
	`movegŸosout
(
fs
, 
bl
);

491 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

492 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

493 
	}
}

499 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

500 
PrŸo
 *
˛p
;

501 
lua_Sèã
 *
L
 = 
ls
->L;

502 
FuncSèã
 *
fs
 = 
ls
->fs;

503 
PrŸo
 *
f
 = 
fs
->f;

504 i‡(
fs
->
≈
 >
f
->
sizï
) {

505 
ﬁdsize
 = 
f
->
sizï
;

506 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

507 
ﬁdsize
 < 
f
->
sizï
)

508 
f
->
p
[
ﬁdsize
++] = 
NULL
;

510 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

511 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

512  
˛p
;

513 
	}
}

522 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

523 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

524 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

525 
	`luaK_exp2√xåeg
(
fs
, 
v
);

526 
	}
}

529 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

530 
PrŸo
 *
f
;

531 
fs
->
¥ev
 = 
ls
->fs;

532 
fs
->
ls
 =Üs;

533 
ls
->
fs
 = fs;

534 
fs
->
pc
 = 0;

535 
fs
->
œ°èrgë
 = 0;

536 
fs
->
jpc
 = 
NO_JUMP
;

537 
fs
->
‰ìªg
 = 0;

538 
fs
->
nk
 = 0;

539 
fs
->
≈
 = 0;

540 
fs
->
nups
 = 0;

541 
fs
->
∆ocv¨s
 = 0;

542 
fs
->
«˘v¨
 = 0;

543 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

544 
fs
->
bl
 = 
NULL
;

545 
f
 = 
fs
->f;

546 
f
->
sour˚
 = 
ls
->source;

547 
f
->
max°acksize
 = 2;

548 
	`íãrblock
(
fs
, 
bl
, 0);

549 
	}
}

552 
	$˛o£_func
 (
LexSèã
 *
ls
) {

553 
lua_Sèã
 *
L
 = 
ls
->L;

554 
FuncSèã
 *
fs
 = 
ls
->fs;

555 
PrŸo
 *
f
 = 
fs
->f;

556 
	`luaK_ªt
(
fs
, 0, 0);

557 
	`Àaveblock
(
fs
);

558 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

559 
f
->
sizecode
 = 
fs
->
pc
;

560 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

561 
f
->
sizñöeöfo
 = 
fs
->
pc
;

562 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

563 
f
->
sizek
 = 
fs
->
nk
;

564 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

565 
f
->
sizï
 = 
fs
->
≈
;

566 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

567 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

568 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

569 
f
->
sizeupvÆues
 = 
fs
->
nups
;

570 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

571 
ls
->
fs
 = fs->
¥ev
;

572 
	`luaC_checkGC
(
L
);

573 
	}
}

587 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

588 
ls
->
t
.
tokí
) {

589 
TK_ELSE
: 
TK_ELSEIF
:

590 
TK_END
: 
TK_EOS
:

592 
TK_UNTIL
:  
wôhu¡û
;

595 
	}
}

598 
	$°©li°
 (
LexSèã
 *
ls
) {

600 !
	`block_fﬁlow
(
ls
, 1)) {

601 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

602 
	`°©emít
(
ls
);

605 
	`°©emít
(
ls
);

607 
	}
}

610 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

612 
FuncSèã
 *
fs
 = 
ls
->fs;

613 
expdesc
 
key
;

614 
	`luaK_exp2™yªgup
(
fs
, 
v
);

615 
	`luaX_√xt
(
ls
);

616 
	`check«me
(
ls
, &
key
);

617 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

618 
	}
}

621 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

623 
	`luaX_√xt
(
ls
);

624 
	`ex¥
(
ls
, 
v
);

625 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

626 
	`check√xt
(
ls
, ']');

627 
	}
}

637 
	sC⁄sC⁄åﬁ
 {

638 
expdesc
 
	mv
;

639 
expdesc
 *
	mt
;

640 
	mnh
;

641 
	m«
;

642 
	mto°‹e
;

646 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

648 
FuncSèã
 *
fs
 = 
ls
->fs;

649 
ªg
 = 
ls
->
fs
->
‰ìªg
;

650 
expdesc
 
key
, 
vÆ
;

651 
rkkey
;

652 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

653 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

654 
	`check«me
(
ls
, &
key
);

657 
	`yödex
(
ls
, &
key
);

658 
cc
->
nh
++;

659 
	`check√xt
(
ls
, '=');

660 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

661 
	`ex¥
(
ls
, &
vÆ
);

662 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

663 
fs
->
‰ìªg
 = 
ªg
;

664 
	}
}

667 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

668 i‡(
cc
->
v
.
k
 =
VVOID
) ;

669 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

670 
cc
->
v
.
k
 = 
VVOID
;

671 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

672 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

673 
cc
->
to°‹e
 = 0;

675 
	}
}

678 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

679 i‡(
cc
->
to°‹e
 == 0) ;

680 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

681 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

682 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

683 
cc
->
«
--;

686 i‡(
cc
->
v
.
k
 !
VVOID
)

687 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

688 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

690 
	}
}

693 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

695 
	`ex¥
(
ls
, &
cc
->
v
);

696 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

697 
cc
->
«
++;

698 
cc
->
to°‹e
++;

699 
	}
}

702 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

704 
ls
->
t
.
tokí
) {

705 
TK_NAME
: {

706 i‡(
	`luaX_lookahód
(
ls
) != '=')

707 
	`li°fõld
(
ls
, 
cc
);

709 
	`ªcfõld
(
ls
, 
cc
);

713 
	`ªcfõld
(
ls
, 
cc
);

717 
	`li°fõld
(
ls
, 
cc
);

721 
	}
}

724 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

727 
FuncSèã
 *
fs
 = 
ls
->fs;

728 
löe
 = 
ls
->
löíumbî
;

729 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

730 
C⁄sC⁄åﬁ
 
cc
;

731 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

732 
cc
.
t
 =Å;

733 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

734 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

735 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

736 
	`check√xt
(
ls
, '{');

738 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

739 i‡(
ls
->
t
.
tokí
 == '}') ;

740 
	`˛o£li°fõld
(
fs
, &
cc
);

741 
	`fõld
(
ls
, &
cc
);

742 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

743 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

744 
	`œ°li°fõld
(
fs
, &
cc
);

745 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

746 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

747 
	}
}

753 
	$∑æi°
 (
LexSèã
 *
ls
) {

755 
FuncSèã
 *
fs
 = 
ls
->fs;

756 
PrŸo
 *
f
 = 
fs
->f;

757 
≈¨ams
 = 0;

758 
f
->
is_v¨¨g
 = 0;

759 i‡(
ls
->
t
.
tokí
 != ')') {

761 
ls
->
t
.
tokí
) {

762 
TK_NAME
: {

763 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

764 
≈¨ams
++;

767 
TK_DOTS
: {

768 
	`luaX_√xt
(
ls
);

769 
f
->
is_v¨¨g
 = 1;

772 : 
	`luaX_sy¡axîr‹
(
ls
, "<name> or '...'Éxpected");

774 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

776 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

777 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

778 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

779 
	}
}

782 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

784 
FuncSèã
 
√w_fs
;

785 
BlockC¡
 
bl
;

786 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

787 
√w_fs
.
f
->
löedeföed
 = 
löe
;

788 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

789 
	`check√xt
(
ls
, '(');

790 i‡(
ismëhod
) {

791 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

792 
	`adju°loˇlv¨s
(
ls
, 1);

794 
	`∑æi°
(
ls
);

795 
	`check√xt
(
ls
, ')');

796 
	`°©li°
(
ls
);

797 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

798 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

799 
	`code˛osuª
(
ls
, 
e
);

800 
	`˛o£_func
(
ls
);

801 
	}
}

804 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

806 
n
 = 1;

807 
	`ex¥
(
ls
, 
v
);

808 
	`ã°√xt
(
ls
, ',')) {

809 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

810 
	`ex¥
(
ls
, 
v
);

811 
n
++;

813  
n
;

814 
	}
}

817 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

818 
FuncSèã
 *
fs
 = 
ls
->fs;

819 
expdesc
 
¨gs
;

820 
ba£
, 
≈¨ams
;

821 
ls
->
t
.
tokí
) {

823 
	`luaX_√xt
(
ls
);

824 i‡(
ls
->
t
.
tokí
 == ')')

825 
¨gs
.
k
 = 
VVOID
;

827 
	`ex∂i°
(
ls
, &
¨gs
);

828 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

830 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

834 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

837 
TK_STRING
: {

838 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

839 
	`luaX_√xt
(
ls
);

843 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

846 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

847 
ba£
 = 
f
->
u
.
öfo
;

848 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

849 
≈¨ams
 = 
LUA_MULTRET
;

851 i‡(
¨gs
.
k
 !
VVOID
)

852 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

853 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

855 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

856 
	`luaK_fixlöe
(
fs
, 
löe
);

857 
fs
->
‰ìªg
 = 
ba£
+1;

859 
	}
}

871 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

873 
ls
->
t
.
tokí
) {

875 
löe
 = 
ls
->
löíumbî
;

876 
	`luaX_√xt
(
ls
);

877 
	`ex¥
(
ls
, 
v
);

878 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

879 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

882 
TK_NAME
: {

883 
	`sögÀv¨
(
ls
, 
v
);

887 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

890 
	}
}

893 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

896 
FuncSèã
 *
fs
 = 
ls
->fs;

897 
löe
 = 
ls
->
löíumbî
;

898 
	`¥im¨yexp
(
ls
, 
v
);

900 
ls
->
t
.
tokí
) {

902 
	`fõld£l
(
ls
, 
v
);

906 
expdesc
 
key
;

907 
	`luaK_exp2™yªgup
(
fs
, 
v
);

908 
	`yödex
(
ls
, &
key
);

909 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

913 
expdesc
 
key
;

914 
	`luaX_√xt
(
ls
);

915 
	`check«me
(
ls
, &
key
);

916 
	`luaK_£lf
(
fs
, 
v
, &
key
);

917 
	`funˇrgs
(
ls
, 
v
, 
löe
);

920 '(': 
TK_STRING
: '{': {

921 
	`luaK_exp2√xåeg
(
fs
, 
v
);

922 
	`funˇrgs
(
ls
, 
v
, 
löe
);

928 
	}
}

931 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

934 
ls
->
t
.
tokí
) {

935 
TK_FLT
: {

936 
	`öô_exp
(
v
, 
VKFLT
, 0);

937 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

940 
TK_INT
: {

941 
	`öô_exp
(
v
, 
VKINT
, 0);

942 
v
->
u
.
ivÆ
 = 
ls
->
t
.
£möfo
.
i
;

945 
TK_STRING
: {

946 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

949 
TK_NIL
: {

950 
	`öô_exp
(
v
, 
VNIL
, 0);

953 
TK_TRUE
: {

954 
	`öô_exp
(
v
, 
VTRUE
, 0);

957 
TK_FALSE
: {

958 
	`öô_exp
(
v
, 
VFALSE
, 0);

961 
TK_DOTS
: {

962 
FuncSèã
 *
fs
 = 
ls
->fs;

963 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

965 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

969 
	`c⁄°ru˘‹
(
ls
, 
v
);

972 
TK_FUNCTION
: {

973 
	`luaX_√xt
(
ls
);

974 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

978 
	`suffixedexp
(
ls
, 
v
);

982 
	`luaX_√xt
(
ls
);

983 
	}
}

986 
UnO¥
 
	$gëun›r
 (
›
) {

987 
›
) {

988 
TK_NOT
:  
OPR_NOT
;

989 '-':  
OPR_MINUS
;

990 '~':  
OPR_BNOT
;

991 '#':  
OPR_LEN
;

992 :  
OPR_NOUNOPR
;

994 
	}
}

997 
BöO¥
 
	$gëbö›r
 (
›
) {

998 
›
) {

999 '+':  
OPR_ADD
;

1000 '-':  
OPR_SUB
;

1001 '*':  
OPR_MUL
;

1002 '%':  
OPR_MOD
;

1003 '^':  
OPR_POW
;

1004 '/':  
OPR_DIV
;

1005 
TK_IDIV
:  
OPR_IDIV
;

1006 '&':  
OPR_BAND
;

1007 '|':  
OPR_BOR
;

1008 '~':  
OPR_BXOR
;

1009 
TK_SHL
:  
OPR_SHL
;

1010 
TK_SHR
:  
OPR_SHR
;

1011 
TK_CONCAT
:  
OPR_CONCAT
;

1012 
TK_NE
:  
OPR_NE
;

1013 
TK_EQ
:  
OPR_EQ
;

1014 '<':  
OPR_LT
;

1015 
TK_LE
:  
OPR_LE
;

1016 '>':  
OPR_GT
;

1017 
TK_GE
:  
OPR_GE
;

1018 
TK_AND
:  
OPR_AND
;

1019 
TK_OR
:  
OPR_OR
;

1020 :  
OPR_NOBINOPR
;

1022 
	}
}

1026 
lu_byã
 
	mÀ·
;

1027 
lu_byã
 
	mright
;

1028 } 
	g¥i‹ôy
[] = {

1041 
	#UNARY_PRIORITY
 12

	)

1048 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1049 
BöO¥
 
›
;

1050 
UnO¥
 
u›
;

1051 
	`íãæevñ
(
ls
);

1052 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1053 i‡(
u›
 !
OPR_NOUNOPR
) {

1054 
löe
 = 
ls
->
löíumbî
;

1055 
	`luaX_√xt
(
ls
);

1056 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1057 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1059 
	`sim∂ìxp
(
ls
, 
v
);

1061 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1062 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1063 
expdesc
 
v2
;

1064 
BöO¥
 
√xt›
;

1065 
löe
 = 
ls
->
löíumbî
;

1066 
	`luaX_√xt
(
ls
);

1067 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1069 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1070 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1071 
›
 = 
√xt›
;

1073 
	`Àavñevñ
(
ls
);

1074  
›
;

1075 
	}
}

1078 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1079 
	`subex¥
(
ls
, 
v
, 0);

1080 
	}
}

1093 
	$block
 (
LexSèã
 *
ls
) {

1095 
FuncSèã
 *
fs
 = 
ls
->fs;

1096 
BlockC¡
 
bl
;

1097 
	`íãrblock
(
fs
, &
bl
, 0);

1098 
	`°©li°
(
ls
);

1099 
	`Àaveblock
(
fs
);

1100 
	}
}

1107 
	sLHS_assign
 {

1108 
LHS_assign
 *
	m¥ev
;

1109 
expdesc
 
	mv
;

1119 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1120 
FuncSèã
 *
fs
 = 
ls
->fs;

1121 
exåa
 = 
fs
->
‰ìªg
;

1122 
c⁄Êi˘
 = 0;

1123 ; 
lh
;Üh =Üh->
¥ev
) {

1124 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1126 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1127 
c⁄Êi˘
 = 1;

1128 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1129 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1132 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1133 
c⁄Êi˘
 = 1;

1134 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1138 i‡(
c⁄Êi˘
) {

1140 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1141 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1142 
	`luaK_ª£rvîegs
(
fs
, 1);

1144 
	}
}

1147 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1148 
expdesc
 
e
;

1149 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1150 i‡(
	`ã°√xt
(
ls
, ',')) {

1151 
LHS_assign
 
nv
;

1152 
nv
.
¥ev
 = 
lh
;

1153 
	`suffixedexp
(
ls
, &
nv
.
v
);

1154 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1155 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1156 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1158 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1161 
√xps
;

1162 
	`check√xt
(
ls
, '=');

1163 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1164 i‡(
√xps
 !
nv¨s
)

1165 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1167 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1168 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1172 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1173 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1174 
	}
}

1177 
	$c⁄d
 (
LexSèã
 *
ls
) {

1179 
expdesc
 
v
;

1180 
	`ex¥
(
ls
, &
v
);

1181 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1182 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1183  
v
.
f
;

1184 
	}
}

1187 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1188 
löe
 = 
ls
->
löíumbî
;

1189 
TSåög
 *
œbñ
;

1190 
g
;

1191 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1192 
œbñ
 = 
	`°r_check«me
(
ls
);

1194 
	`luaX_√xt
(
ls
);

1195 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1197 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1198 
	`födœbñ
(
ls
, 
g
);

1199 
	}
}

1203 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1204 
i
;

1205 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1206 i‡(
	`eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1207 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1209 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1210 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1213 
	}
}

1217 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1218 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1219 
	`°©emít
(
ls
);

1220 
	}
}

1223 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1225 
FuncSèã
 *
fs
 = 
ls
->fs;

1226 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1227 
l
;

1228 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1229 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1231 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
	`luaK_gëœbñ
(
fs
));

1232 
	`skùno›°©
(
ls
);

1233 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1235 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1237 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1238 
	}
}

1241 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1243 
FuncSèã
 *
fs
 = 
ls
->fs;

1244 
whûeöô
;

1245 
c⁄dexô
;

1246 
BlockC¡
 
bl
;

1247 
	`luaX_√xt
(
ls
);

1248 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1249 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1250 
	`íãrblock
(
fs
, &
bl
, 1);

1251 
	`check√xt
(
ls
, 
TK_DO
);

1252 
	`block
(
ls
);

1253 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1254 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1255 
	`Àaveblock
(
fs
);

1256 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1257 
	}
}

1260 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1262 
c⁄dexô
;

1263 
FuncSèã
 *
fs
 = 
ls
->fs;

1264 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1265 
BlockC¡
 
bl1
, 
bl2
;

1266 
	`íãrblock
(
fs
, &
bl1
, 1);

1267 
	`íãrblock
(
fs
, &
bl2
, 0);

1268 
	`luaX_√xt
(
ls
);

1269 
	`°©li°
(
ls
);

1270 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1271 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1272 i‡(
bl2
.
upvÆ
)

1273 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1274 
	`Àaveblock
(
fs
);

1275 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1276 
	`Àaveblock
(
fs
);

1277 
	}
}

1280 
	$exp1
 (
LexSèã
 *
ls
) {

1281 
expdesc
 
e
;

1282 
ªg
;

1283 
	`ex¥
(
ls
, &
e
);

1284 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1285 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1286 
ªg
 = 
e
.
u
.
öfo
;

1287  
ªg
;

1288 
	}
}

1291 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1293 
BlockC¡
 
bl
;

1294 
FuncSèã
 *
fs
 = 
ls
->fs;

1295 
¥ï
, 
ídf‹
;

1296 
	`adju°loˇlv¨s
(
ls
, 3);

1297 
	`check√xt
(
ls
, 
TK_DO
);

1298 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1299 
	`íãrblock
(
fs
, &
bl
, 0);

1300 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1301 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1302 
	`block
(
ls
);

1303 
	`Àaveblock
(
fs
);

1304 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1305 i‡(
i¢um
)

1306 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1308 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1309 
	`luaK_fixlöe
(
fs
, 
löe
);

1310 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1312 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1313 
	`luaK_fixlöe
(
fs
, 
löe
);

1314 
	}
}

1317 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1319 
FuncSèã
 *
fs
 = 
ls
->fs;

1320 
ba£
 = 
fs
->
‰ìªg
;

1321 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1322 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1323 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1324 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1325 
	`check√xt
(
ls
, '=');

1326 
	`exp1
(
ls
);

1327 
	`check√xt
(
ls
, ',');

1328 
	`exp1
(
ls
);

1329 i‡(
	`ã°√xt
(
ls
, ','))

1330 
	`exp1
(
ls
);

1332 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_ötK
(fs, 1));

1333 
	`luaK_ª£rvîegs
(
fs
, 1);

1335 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1336 
	}
}

1339 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1341 
FuncSèã
 *
fs
 = 
ls
->fs;

1342 
expdesc
 
e
;

1343 
nv¨s
 = 4;

1344 
löe
;

1345 
ba£
 = 
fs
->
‰ìªg
;

1347 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1348 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1349 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1351 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1352 
	`ã°√xt
(
ls
, ',')) {

1353 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1354 
nv¨s
++;

1356 
	`check√xt
(
ls
, 
TK_IN
);

1357 
löe
 = 
ls
->
löíumbî
;

1358 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1359 
	`luaK_check°ack
(
fs
, 3);

1360 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1361 
	}
}

1364 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1366 
FuncSèã
 *
fs
 = 
ls
->fs;

1367 
TSåög
 *
v¨«me
;

1368 
BlockC¡
 
bl
;

1369 
	`íãrblock
(
fs
, &
bl
, 1);

1370 
	`luaX_√xt
(
ls
);

1371 
v¨«me
 = 
	`°r_check«me
(
ls
);

1372 
ls
->
t
.
tokí
) {

1373 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1374 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1375 : 
	`luaX_sy¡axîr‹
(
ls
, "'=' or 'in'Éxpected");

1377 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1378 
	`Àaveblock
(
fs
);

1379 
	}
}

1382 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1384 
BlockC¡
 
bl
;

1385 
FuncSèã
 *
fs
 = 
ls
->fs;

1386 
expdesc
 
v
;

1387 
jf
;

1388 
	`luaX_√xt
(
ls
);

1389 
	`ex¥
(
ls
, &
v
);

1390 
	`check√xt
(
ls
, 
TK_THEN
);

1391 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1392 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1393 
	`íãrblock
(
fs
, &
bl
, 0);

1394 
	`gŸo°©
(
ls
, 
v
.
t
);

1395 
	`ã°√xt
(
ls
, ';')) {}

1396 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1397 
	`Àaveblock
(
fs
);

1401 
jf
 = 
	`luaK_jump
(
fs
);

1404 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1405 
	`íãrblock
(
fs
, &
bl
, 0);

1406 
jf
 = 
v
.
f
;

1408 
	`°©li°
(
ls
);

1409 
	`Àaveblock
(
fs
);

1410 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1411 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1412 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1413 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1414 
	}
}

1417 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1419 
FuncSèã
 *
fs
 = 
ls
->fs;

1420 
esˇ≥li°
 = 
NO_JUMP
;

1421 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1422 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1423 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1424 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1425 
	`block
(
ls
);

1426 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1427 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1428 
	}
}

1431 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1432 
expdesc
 
b
;

1433 
FuncSèã
 *
fs
 = 
ls
->fs;

1434 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1435 
	`adju°loˇlv¨s
(
ls
, 1);

1436 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1438 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1439 
	}
}

1442 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1444 
nv¨s
 = 0;

1445 
√xps
;

1446 
expdesc
 
e
;

1448 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1449 
nv¨s
++;

1450 } 
	`ã°√xt
(
ls
, ','));

1451 i‡(
	`ã°√xt
(
ls
, '='))

1452 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1454 
e
.
k
 = 
VVOID
;

1455 
√xps
 = 0;

1457 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1458 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1459 
	}
}

1462 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1464 
ismëhod
 = 0;

1465 
	`sögÀv¨
(
ls
, 
v
);

1466 
ls
->
t
.
tokí
 == '.')

1467 
	`fõld£l
(
ls
, 
v
);

1468 i‡(
ls
->
t
.
tokí
 == ':') {

1469 
ismëhod
 = 1;

1470 
	`fõld£l
(
ls
, 
v
);

1472  
ismëhod
;

1473 
	}
}

1476 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1478 
ismëhod
;

1479 
expdesc
 
v
, 
b
;

1480 
	`luaX_√xt
(
ls
);

1481 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1482 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1483 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1484 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1485 
	}
}

1488 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1490 
FuncSèã
 *
fs
 = 
ls
->fs;

1491 
LHS_assign
 
v
;

1492 
	`suffixedexp
(
ls
, &
v
.v);

1493 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1494 
v
.
¥ev
 = 
NULL
;

1495 
	`assignmít
(
ls
, &
v
, 1);

1498 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1499 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, &
v
.v), 1);

1501 
	}
}

1504 
	$ªt°©
 (
LexSèã
 *
ls
) {

1506 
FuncSèã
 *
fs
 = 
ls
->fs;

1507 
expdesc
 
e
;

1508 
fú°
, 
ƒë
;

1509 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1510 
fú°
 = 
ƒë
 = 0;

1512 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1513 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1514 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1515 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1516 
	`SET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
,&
e
), 
OP_TAILCALL
);

1517 
	`lua_as£π
(
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1519 
fú°
 = 
fs
->
«˘v¨
;

1520 
ƒë
 = 
LUA_MULTRET
;

1523 i‡(
ƒë
 == 1)

1524 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1526 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1527 
fú°
 = 
fs
->
«˘v¨
;

1528 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1532 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1533 
	`ã°√xt
(
ls
, ';');

1534 
	}
}

1537 
	$°©emít
 (
LexSèã
 *
ls
) {

1538 
löe
 = 
ls
->
löíumbî
;

1539 
	`íãæevñ
(
ls
);

1540 
ls
->
t
.
tokí
) {

1542 
	`luaX_√xt
(
ls
);

1545 
TK_IF
: {

1546 
	`if°©
(
ls
, 
löe
);

1549 
TK_WHILE
: {

1550 
	`whûe°©
(
ls
, 
löe
);

1553 
TK_DO
: {

1554 
	`luaX_√xt
(
ls
);

1555 
	`block
(
ls
);

1556 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1559 
TK_FOR
: {

1560 
	`f‹°©
(
ls
, 
löe
);

1563 
TK_REPEAT
: {

1564 
	`ª≥©°©
(
ls
, 
löe
);

1567 
TK_FUNCTION
: {

1568 
	`func°©
(
ls
, 
löe
);

1571 
TK_LOCAL
: {

1572 
	`luaX_√xt
(
ls
);

1573 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1574 
	`loˇlfunc
(
ls
);

1576 
	`loˇl°©
(
ls
);

1579 
TK_DBCOLON
: {

1580 
	`luaX_√xt
(
ls
);

1581 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1584 
TK_RETURN
: {

1585 
	`luaX_√xt
(
ls
);

1586 
	`ªt°©
(
ls
);

1589 
TK_BREAK
:

1590 
TK_GOTO
: {

1591 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1595 
	`ex¥°©
(
ls
);

1599 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1600 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1601 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1602 
	`Àavñevñ
(
ls
);

1603 
	}
}

1612 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1613 
BlockC¡
 
bl
;

1614 
expdesc
 
v
;

1615 
	`›í_func
(
ls
, 
fs
, &
bl
);

1616 
fs
->
f
->
is_v¨¨g
 = 1;

1617 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1618 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1619 
	`luaX_√xt
(
ls
);

1620 
	`°©li°
(
ls
);

1621 
	`check
(
ls
, 
TK_EOS
);

1622 
	`˛o£_func
(
ls
);

1623 
	}
}

1626 
LClosuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1627 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1628 
LexSèã
 
Àx°©e
;

1629 
FuncSèã
 
func°©e
;

1630 
LClosuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1631 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1632 
	`luaD_ö˘›
(
L
);

1633 
Àx°©e
.
h
 = 
	`luaH_√w
(
L
);

1634 
	`£thvÆue
(
L
, L->
t›
, 
Àx°©e
.
h
);

1635 
	`luaD_ö˘›
(
L
);

1636 
func°©e
.
f
 = 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1637 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1638 
	`lua_as£π
(
	`iswhôe
(
func°©e
.
f
));

1639 
Àx°©e
.
buff
 = buff;

1640 
Àx°©e
.
dyd
 = dyd;

1641 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1642 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1643 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1644 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1646 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1647 
L
->
t›
--;

1648  
˛
;

1649 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lparser.h

7 #i‚de‡
Õ¨£r_h


8 
	#Õ¨£r_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

26 
	mVVOID
,

28 
	mVNIL
,

29 
	mVTRUE
,

30 
	mVFALSE
,

31 
	mVK
,

32 
	mVKFLT
,

33 
	mVKINT
,

34 
	mVNONRELOC
,

36 
	mVLOCAL
,

37 
	mVUPVAL
,

38 
	mVINDEXED
,

42 
	mVJMP
,

44 
	mVRELOCABLE
,

46 
	mVCALL
,

47 
	mVVARARG


48 } 
	texpköd
;

51 
	#vkisv¨
(
k
Ë(
VLOCAL
 <(kË&& (kË<
VINDEXED
)

	)

52 
	#vkisöªg
(
k
Ë((kË=
VNONRELOC
 || (kË=
VLOCAL
)

	)

54 
	sexpdesc
 {

55 
expköd
 
	mk
;

57 
lua_I¡egî
 
	mivÆ
;

58 
lua_Numbî
 
	mnvÆ
;

59 
	möfo
;

61 
	midx
;

62 
lu_byã
 
	mt
;

63 
lu_byã
 
	mvt
;

64 } 
	möd
;

65 } 
	mu
;

66 
	mt
;

67 
	mf
;

68 } 
	texpdesc
;

72 
	sV¨desc
 {

73 
	midx
;

74 } 
	tV¨desc
;

78 
	sLabñdesc
 {

79 
TSåög
 *
	m«me
;

80 
	mpc
;

81 
	mlöe
;

82 
lu_byã
 
	m«˘v¨
;

83 } 
	tLabñdesc
;

87 
	sLabñli°
 {

88 
Labñdesc
 *
	m¨r
;

89 
	mn
;

90 
	msize
;

91 } 
	tLabñli°
;

95 
	sDynd©a
 {

97 
V¨desc
 *
	m¨r
;

98 
	mn
;

99 
	msize
;

100 } 
	ma˘v¨
;

101 
Labñli°
 
	mgt
;

102 
Labñli°
 
	mœbñ
;

103 } 
	tDynd©a
;

107 
	gBlockC¡
;

111 
	sFuncSèã
 {

112 
PrŸo
 *
	mf
;

113 
FuncSèã
 *
	m¥ev
;

114 
LexSèã
 *
	mls
;

115 
BlockC¡
 *
	mbl
;

116 
	mpc
;

117 
	mœ°èrgë
;

118 
	mjpc
;

119 
	mnk
;

120 
	m≈
;

121 
	mfú°loˇl
;

122 
	m∆ocv¨s
;

123 
lu_byã
 
	m«˘v¨
;

124 
lu_byã
 
	mnups
;

125 
lu_byã
 
	m‰ìªg
;

126 } 
	tFuncSèã
;

129 
LUAI_FUNC
 
LClosuª
 *
luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

130 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lprefix.h

7 #i‚de‡
Õªfix_h


8 
	#Õªfix_h


	)

14 #i‡!
deföed
(
LUA_USE_C89
)

16 #i‡!
deföed
(
_XOPEN_SOURCE
)

17 
	#_XOPEN_SOURCE
 600

	)

18 #ñi‡
_XOPEN_SOURCE
 == 0

19 #unde‡
_XOPEN_SOURCE


25 #i‡!
deföed
(
LUA_32BITS
Ë&& !deföed(
_FILE_OFFSET_BITS
)

26 
	#_LARGEFILE_SOURCE
 1

	)

27 
	#_FILE_OFFSET_BITS
 64

	)

36 #i‡
deföed
(
_WIN32
)

38 #i‡!
deföed
(
_CRT_SECURE_NO_WARNINGS
)

39 
	#_CRT_SECURE_NO_WARNINGS


	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lstate.c

7 
	#l°©e_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"Œex.h
"

24 
	~"lmem.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

31 #i‡!
deföed
(
LUAI_GCPAUSE
)

32 
	#LUAI_GCPAUSE
 200

	)

35 #i‡!
deföed
(
LUAI_GCMUL
)

36 
	#LUAI_GCMUL
 200

	)

44 #i‡!
deföed
(
luai_make£ed
)

45 
	~<time.h
>

46 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

54 
	sLX
 {

55 
lu_byã
 
	mexåa_
[
LUA_EXTRASPACE
];

56 
lua_Sèã
 
	ml
;

57 } 
	tLX
;

63 
	sLG
 {

64 
LX
 
	ml
;

65 
globÆ_Sèã
 
	mg
;

66 } 
	tLG
;

70 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

77 
	#addbuff
(
b
,
p
,
e
) \

78 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

79 
	`mem˝y
(
b
 + 
p
, &
t
, —));Ö +—); }

	)

81 
	$make£ed
 (
lua_Sèã
 *
L
) {

82 
buff
[4 * (
size_t
)];

83 
h
 = 
	`luai_make£ed
();

84 
p
 = 0;

85 
	`addbuff
(
buff
, 
p
, 
L
);

86 
	`addbuff
(
buff
, 
p
, &
h
);

87 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

88 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

89 
	`lua_as£π
(
p
 =(
buff
));

90  
	`luaS_hash
(
buff
, 
p
, 
h
);

91 
	}
}

98 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

99 
l_mem
 
tb
 = 
	`gëtŸÆbyãs
(
g
);

100 
	`lua_as£π
(
tb
 > 0);

101 i‡(
debt
 < 
tb
 - 
MAX_LMEM
)

102 
debt
 = 
tb
 - 
MAX_LMEM
;

103 
g
->
tŸÆbyãs
 = 
tb
 - 
debt
;

104 
g
->
GCdebt
 = 
debt
;

105 
	}
}

108 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

109 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

110 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

111 
L
->
ci
->
√xt
 = ci;

112 
ci
->
¥evious
 = 
L
->ci;

113 
ci
->
√xt
 = 
NULL
;

114 
L
->
nci
++;

115  
ci
;

116 
	}
}

122 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

123 
CÆlInfo
 *
ci
 = 
L
->ci;

124 
CÆlInfo
 *
√xt
 = 
ci
->next;

125 
ci
->
√xt
 = 
NULL
;

126 (
ci
 = 
√xt
Ë!
NULL
) {

127 
√xt
 = 
ci
->next;

128 
	`luaM_‰ì
(
L
, 
ci
);

129 
L
->
nci
--;

131 
	}
}

137 
	$luaE_shrökCI
 (
lua_Sèã
 *
L
) {

138 
CÆlInfo
 *
ci
 = 
L
->ci;

139 
CÆlInfo
 *
√xt2
;

141 
ci
->
√xt
 !
NULL
 && (
√xt2
 = ci->next->next) != NULL) {

142 
	`luaM_‰ì
(
L
, 
ci
->
√xt
);

143 
L
->
nci
--;

144 
ci
->
√xt
 = 
√xt2
;

145 
√xt2
->
¥evious
 = 
ci
;

146 
ci
 = 
√xt2
;

148 
	}
}

151 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

152 
i
; 
CÆlInfo
 *
ci
;

154 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

155 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

156 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

157 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

158 
L1
->
t›
 = L1->
°ack
;

159 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

161 
ci
 = &
L1
->
ba£_ci
;

162 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

163 
ci
->
ˇŒ°©us
 = 0;

164 
ci
->
func
 = 
L1
->
t›
;

165 
	`£äûvÆue
(
L1
->
t›
++);

166 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

167 
L1
->
ci
 = ci;

168 
	}
}

171 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

172 i‡(
L
->
°ack
 =
NULL
)

174 
L
->
ci
 = &L->
ba£_ci
;

175 
	`luaE_‰ìCI
(
L
);

176 
	`lua_as£π
(
L
->
nci
 == 0);

177 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

178 
	}
}

184 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

185 
TVÆue
 
ãmp
;

187 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

188 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

189 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

191 
	`£âhvÆue
(
L
, &
ãmp
, L);

192 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
ãmp
);

194 
	`£thvÆue
(
L
, &
ãmp
, 
	`luaH_√w
(L));

195 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
ãmp
);

196 
	}
}

203 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

204 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

205 
	`UNUSED
(
ud
);

206 
	`°ack_öô
(
L
, L);

207 
	`öô_ªgi°ry
(
L
, 
g
);

208 
	`luaS_öô
(
L
);

209 
	`luaT_öô
(
L
);

210 
	`luaX_öô
(
L
);

211 
g
->
g¸u¬ög
 = 1;

212 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

213 
	`luai_u£r°©e›í
(
L
);

214 
	}
}

221 
	$¥eöô_thªad
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

222 
	`G
(
L
Ë
g
;

223 
L
->
°ack
 = 
NULL
;

224 
L
->
ci
 = 
NULL
;

225 
L
->
nci
 = 0;

226 
L
->
°acksize
 = 0;

227 
L
->
twups
 = L;

228 
L
->
îr‹Jmp
 = 
NULL
;

229 
L
->
nCˇŒs
 = 0;

230 
L
->
hook
 = 
NULL
;

231 
L
->
hookmask
 = 0;

232 
L
->
ba£hookcou¡
 = 0;

233 
L
->
Ælowhook
 = 1;

234 
	`ª£thookcou¡
(
L
);

235 
L
->
›íupvÆ
 = 
NULL
;

236 
L
->
¬y
 = 1;

237 
L
->
°©us
 = 
LUA_OK
;

238 
L
->
îrfunc
 = 0;

239 
	}
}

242 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

243 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

244 
	`luaF_˛o£
(
L
, L->
°ack
);

245 
	`luaC_‰ìÆlobje˘s
(
L
);

246 i‡(
g
->
vîsi⁄
)

247 
	`luai_u£r°©e˛o£
(
L
);

248 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

249 
	`‰ì°ack
(
L
);

250 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

251 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

252 
	}
}

255 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

256 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

257 
lua_Sèã
 *
L1
;

258 
	`lua_lock
(
L
);

259 
	`luaC_checkGC
(
L
);

261 
L1
 = &
	`ˇ°
(
LX
 *, 
	`luaM_√wobje˘
(
L
, 
LUA_TTHREAD
, (LX)))->
l
;

262 
L1
->
m¨ked
 = 
	`luaC_whôe
(
g
);

263 
L1
->
â
 = 
LUA_TTHREAD
;

265 
L1
->
√xt
 = 
g
->
Ælgc
;

266 
g
->
Ælgc
 = 
	`obj2gco
(
L1
);

268 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

269 
	`≠i_ö¸_t›
(
L
);

270 
	`¥eöô_thªad
(
L1
, 
g
);

271 
L1
->
hookmask
 = 
L
->hookmask;

272 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

273 
L1
->
hook
 = 
L
->hook;

274 
	`ª£thookcou¡
(
L1
);

276 
	`mem˝y
(
	`lua_gëexåa•a˚
(
L1
),Üua_gëexåa•a˚(
g
->
maöthªad
),

277 
LUA_EXTRASPACE
);

278 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

279 
	`°ack_öô
(
L1
, 
L
);

280 
	`lua_u∆ock
(
L
);

281  
L1
;

282 
	}
}

285 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

286 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

287 
	`luaF_˛o£
(
L1
, L1->
°ack
);

288 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

289 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

290 
	`‰ì°ack
(
L1
);

291 
	`luaM_‰ì
(
L
, 
l
);

292 
	}
}

295 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

296 
i
;

297 
lua_Sèã
 *
L
;

298 
globÆ_Sèã
 *
g
;

299 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

300 i‡(
l
 =
NULL
)  NULL;

301 
L
 = &
l
->l.l;

302 
g
 = &
l
->g;

303 
L
->
√xt
 = 
NULL
;

304 
L
->
â
 = 
LUA_TTHREAD
;

305 
g
->
cuºítwhôe
 = 
	`bômask
(
WHITE0BIT
);

306 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

307 
	`¥eöô_thªad
(
L
, 
g
);

308 
g
->
‰óŒoc
 = 
f
;

309 
g
->
ud
 = ud;

310 
g
->
maöthªad
 = 
L
;

311 
g
->
£ed
 = 
	`make£ed
(
L
);

312 
g
->
g¸u¬ög
 = 0;

313 
g
->
GCe°im©e
 = 0;

314 
g
->
°π
.
size
 = g->°π.
nu£
 = 0;

315 
g
->
°π
.
hash
 = 
NULL
;

316 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

317 
g
->
∑nic
 = 
NULL
;

318 
g
->
vîsi⁄
 = 
NULL
;

319 
g
->
gc°©e
 = 
GCS∑u£
;

320 
g
->
gcköd
 = 
KGC_NORMAL
;

321 
g
->
Ælgc
 = g->
föobj
 = g->
tobe‚z
 = g->
fixedgc
 = 
NULL
;

322 
g
->
swìpgc
 = 
NULL
;

323 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

324 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

325 
g
->
twups
 = 
NULL
;

326 
g
->
tŸÆbyãs
 = (
LG
);

327 
g
->
GCdebt
 = 0;

328 
g
->
gcfönum
 = 0;

329 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

330 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

331 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

332 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

334 
	`˛o£_°©e
(
L
);

335 
L
 = 
NULL
;

337  
L
;

338 
	}
}

341 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

342 
L
 = 
	`G
(L)->
maöthªad
;

343 
	`lua_lock
(
L
);

344 
	`˛o£_°©e
(
L
);

345 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lstate.h

7 #i‚de‡
l°©e_h


8 
	#l°©e_h


	)

10 
	~"lua.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

14 
	~"lzio.h
"

51 
	glua_l⁄gjmp
;

58 #i‡!
deföed
(
l_sig«lT
)

59 
	~<sig«l.h
>

60 
	#l_sig«lT
 
sig_©omic_t


	)

65 
	#EXTRA_STACK
 5

	)

68 
	#BASIC_STACK_SIZE
 (2*
LUA_MINSTACK
)

	)

72 
	#KGC_NORMAL
 0

	)

73 
	#KGC_EMERGENCY
 1

	)

76 
	s°rögèbÀ
 {

77 
TSåög
 **
	mhash
;

78 
	mnu£
;

79 
	msize
;

80 } 
	t°rögèbÀ
;

92 
	sCÆlInfo
 {

93 
StkId
 
	mfunc
;

94 
StkId
 
	mt›
;

95 
CÆlInfo
 *
	m¥evious
, *
	m√xt
;

98 
StkId
 
	mba£
;

99 c⁄° 
In°ru˘i⁄
 *
	mßvedpc
;

100 } 
	ml
;

102 
lua_KFun˘i⁄
 
	mk
;

103 
±rdiff_t
 
	mﬁd_îrfunc
;

104 
lua_KC⁄ãxt
 
	m˘x
;

105 } 
	mc
;

106 } 
	mu
;

107 
±rdiff_t
 
	mexåa
;

108 
	mƒesu…s
;

109 
	mˇŒ°©us
;

110 } 
	tCÆlInfo
;

116 
	#CIST_OAH
 (1<<0Ë

	)

117 
	#CIST_LUA
 (1<<1Ë

	)

118 
	#CIST_HOOKED
 (1<<2Ë

	)

119 
	#CIST_FRESH
 (1<<3Ë

	)

121 
	#CIST_YPCALL
 (1<<4Ë

	)

122 
	#CIST_TAIL
 (1<<5Ë

	)

123 
	#CIST_HOOKYIELD
 (1<<6Ë

	)

124 
	#CIST_LEQ
 (1<<7Ë

	)

125 
	#CIST_FIN
 (1<<8Ë

	)

127 
	#isLua
(
ci
Ë((ci)->
ˇŒ°©us
 & 
CIST_LUA
)

	)

130 
	#£tﬂh
(
°
,
v
Ë((°Ë((°Ë& ~
CIST_OAH
Ë| (v))

	)

131 
	#gëﬂh
(
°
Ë((°Ë& 
CIST_OAH
)

	)

137 
	sglobÆ_Sèã
 {

138 
lua_AŒoc
 
	m‰óŒoc
;

139 *
	mud
;

140 
l_mem
 
	mtŸÆbyãs
;

141 
l_mem
 
	mGCdebt
;

142 
lu_mem
 
	mGCmemåav
;

143 
lu_mem
 
	mGCe°im©e
;

144 
°rögèbÀ
 
	m°π
;

145 
TVÆue
 
	ml_ªgi°ry
;

146 
	m£ed
;

147 
lu_byã
 
	mcuºítwhôe
;

148 
lu_byã
 
	mgc°©e
;

149 
lu_byã
 
	mgcköd
;

150 
lu_byã
 
	mg¸u¬ög
;

151 
GCObje˘
 *
	mÆlgc
;

152 
GCObje˘
 **
	mswìpgc
;

153 
GCObje˘
 *
	mföobj
;

154 
GCObje˘
 *
	mgøy
;

155 
GCObje˘
 *
	mgøyagaö
;

156 
GCObje˘
 *
	mwók
;

157 
GCObje˘
 *
	mïhemî⁄
;

158 
GCObje˘
 *
	mÆlwók
;

159 
GCObje˘
 *
	mtobe‚z
;

160 
GCObje˘
 *
	mfixedgc
;

161 
lua_Sèã
 *
	mtwups
;

162 
	mgcfönum
;

163 
	mg˝au£
;

164 
	mgc°ïmul
;

165 
lua_CFun˘i⁄
 
	m∑nic
;

166 
lua_Sèã
 *
	mmaöthªad
;

167 c⁄° 
lua_Numbî
 *
	mvîsi⁄
;

168 
TSåög
 *
	mmemîrmsg
;

169 
TSåög
 *
	mtm«me
[
TM_N
];

170 
TabÀ
 *
	mmt
[
LUA_NUMTAGS
];

171 
TSåög
 *
	m°rˇche
[
STRCACHE_N
][
STRCACHE_M
];

172 } 
	tglobÆ_Sèã
;

178 
	slua_Sèã
 {

179 
	mComm⁄Hódî
;

180 
	mnci
;

181 
lu_byã
 
	m°©us
;

182 
StkId
 
	mt›
;

183 
globÆ_Sèã
 *
	ml_G
;

184 
CÆlInfo
 *
	mci
;

185 c⁄° 
In°ru˘i⁄
 *
	mﬁdpc
;

186 
StkId
 
	m°ack_œ°
;

187 
StkId
 
	m°ack
;

188 
UpVÆ
 *
	m›íupvÆ
;

189 
GCObje˘
 *
	mg˛i°
;

190 
lua_Sèã
 *
	mtwups
;

191 
lua_l⁄gjmp
 *
	mîr‹Jmp
;

192 
CÆlInfo
 
	mba£_ci
;

193 vﬁ©ûê
lua_Hook
 
	mhook
;

194 
±rdiff_t
 
	mîrfunc
;

195 
	m°acksize
;

196 
	mba£hookcou¡
;

197 
	mhookcou¡
;

198 
	m¬y
;

199 
	mnCˇŒs
;

200 
l_sig«lT
 
	mhookmask
;

201 
lu_byã
 
	mÆlowhook
;

205 
	#G
(
L
Ë(L->
l_G
)

	)

211 
	uGCUni⁄
 {

212 
GCObje˘
 
	mgc
;

213 
TSåög
 
	mts
;

214 
Ud©a
 
	mu
;

215 
Closuª
 
	m˛
;

216 
TabÀ
 
	mh
;

217 
PrŸo
 
	mp
;

218 
lua_Sèã
 
	mth
;

222 
	#ˇ°_u
(
o
Ë
	`ˇ°
(
GCUni⁄
 *, (o))

	)

225 
	#gco2ts
(
o
) \

226 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TSTRING
, &((
	`ˇ°_u
(o))->
ts
))

	)

227 
	#gco2u
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TUSERDATA
, &((
	`ˇ°_u
(o))->
u
))

	)

228 
	#gco2l˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TLCL
, &((
	`ˇ°_u
(o))->
˛
.
l
))

	)

229 
	#gco2c˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TCCL
, &((
	`ˇ°_u
(o))->
˛
.
c
))

	)

230 
	#gco2˛
(
o
) \

231 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TFUNCTION
, &((
	`ˇ°_u
(o))->
˛
))

	)

232 
	#gco2t
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTABLE
, &((
	`ˇ°_u
(o))->
h
))

	)

233 
	#gco2p
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TPROTO
, &((
	`ˇ°_u
(o))->
p
))

	)

234 
	#gco2th
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTHREAD
, &((
	`ˇ°_u
(o))->
th
))

	)

238 
	#obj2gco
(
v
) \

239 
	`check_exp
(
	`nov¨ü¡
((
v
)->
â
Ë< 
LUA_TDEADKEY
, (&(
	`ˇ°_u
(v)->
gc
)))

	)

243 
	#gëtŸÆbyãs
(
g
Ë
	`ˇ°
(
lu_mem
, (g)->
tŸÆbyãs
 + (g)->
GCdebt
)

	)

245 
LUAI_FUNC
 
luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
);

246 
LUAI_FUNC
 
luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
);

247 
LUAI_FUNC
 
CÆlInfo
 *
luaE_exãndCI
 (
lua_Sèã
 *
L
);

248 
LUAI_FUNC
 
luaE_‰ìCI
 (
lua_Sèã
 *
L
);

249 
LUAI_FUNC
 
luaE_shrökCI
 (
lua_Sèã
 *
L
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lstring.c

7 
	#l°rög_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

22 
	~"l°rög.h
"

25 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

32 #i‡!
deföed
(
LUAI_HASHLIMIT
)

33 
	#LUAI_HASHLIMIT
 5

	)

40 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

41 
size_t
 
Àn
 = 
a
->
u
.
 gÀn
;

42 
	`lua_as£π
(
a
->
â
 =
LUA_TLNGSTR
 && 
b
->tt == LUA_TLNGSTR);

43  (
a
 =
b
) ||

44 ((
Àn
 =
b
->
u
.
 gÀn
) &&

45 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

46 
	}
}

49 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

50 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

51 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

52 ; 
l
 >
°ï
;Ü -= step)

53 
h
 ^((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l
 - 1]));

54  
h
;

55 
	}
}

58 
	$luaS_hashl⁄g°r
 (
TSåög
 *
ts
) {

59 
	`lua_as£π
(
ts
->
â
 =
LUA_TLNGSTR
);

60 i‡(
ts
->
exåa
 == 0) {

61 
ts
->
hash
 = 
	`luaS_hash
(
	`gë°r
—s),Ås->
u
.
 gÀn
,Ås->hash);

62 
ts
->
exåa
 = 1;

64  
ts
->
hash
;

65 
	}
}

71 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

72 
i
;

73 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

74 i‡(
√wsize
 > 
tb
->
size
) {

75 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

76 
i
 = 
tb
->
size
; i < 
√wsize
; i++)

77 
tb
->
hash
[
i
] = 
NULL
;

79 
i
 = 0; i < 
tb
->
size
; i++) {

80 
TSåög
 *
p
 = 
tb
->
hash
[
i
];

81 
tb
->
hash
[
i
] = 
NULL
;

82 
p
) {

83 
TSåög
 *
h√xt
 = 
p
->
u
.hnext;

84 
h
 = 
	`lmod
(
p
->
hash
, 
√wsize
);

85 
p
->
u
.
h√xt
 = 
tb
->
hash
[
h
];

86 
tb
->
hash
[
h
] = 
p
;

87 
p
 = 
h√xt
;

90 i‡(
√wsize
 < 
tb
->
size
) {

92 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

93 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

95 
tb
->
size
 = 
√wsize
;

96 
	}
}

103 
	$luaS_˛órˇche
 (
globÆ_Sèã
 *
g
) {

104 
i
, 
j
;

105 
i
 = 0; i < 
STRCACHE_N
; i++)

106 
j
 = 0; j < 
STRCACHE_M
; j++) {

107 i‡(
	`iswhôe
(
g
->
°rˇche
[
i
][
j
]))

108 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

110 
	}
}

116 
	$luaS_öô
 (
lua_Sèã
 *
L
) {

117 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

118 
i
, 
j
;

119 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

121 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

122 
	`luaC_fix
(
L
, 
	`obj2gco
(
g
->
memîrmsg
));

123 
i
 = 0; i < 
STRCACHE_N
; i++)

124 
j
 = 0; j < 
STRCACHE_M
; j++)

125 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

126 
	}
}

133 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
, 
èg
, 
h
) {

134 
TSåög
 *
ts
;

135 
GCObje˘
 *
o
;

136 
size_t
 
tŸÆsize
;

137 
tŸÆsize
 = 
	`sizñ°rög
(
l
);

138 
o
 = 
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
);

139 
ts
 = 
	`gco2ts
(
o
);

140 
ts
->
hash
 = 
h
;

141 
ts
->
exåa
 = 0;

142 
	`gë°r
(
ts
)[
l
] = '\0';

143  
ts
;

144 
	}
}

147 
TSåög
 *
	$luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
) {

148 
TSåög
 *
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
);

149 
ts
->
u
.
 gÀn
 = 
l
;

150  
ts
;

151 
	}
}

154 
	$luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
) {

155 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

156 
TSåög
 **
p
 = &
tb
->
hash
[
	`lmod
(
ts
->hash,Åb->
size
)];

157 *
p
 !
ts
)

158 
p
 = &(*p)->
u
.
h√xt
;

159 *
p
 = (*p)->
u
.
h√xt
;

160 
tb
->
nu£
--;

161 
	}
}

167 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

168 
TSåög
 *
ts
;

169 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

170 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

171 
TSåög
 **
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

172 
	`lua_as£π
(
°r
 !
NULL
);

173 
ts
 = *
li°
;Å†!
NULL
;Å†ts->
u
.
h√xt
) {

174 i‡(
l
 =
ts
->
shæí
 &&

175 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

177 i‡(
	`isdód
(
g
, 
ts
))

178 
	`ch™gewhôe
(
ts
);

179  
ts
;

182 i‡(
g
->
°π
.
nu£
 >g->°π.
size
 && g->°π.sizê<
MAX_INT
/2) {

183 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 * 2);

184 
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

186 
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TSHRSTR
, 
h
);

187 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

188 
ts
->
shæí
 = 
	`ˇ°_byã
(
l
);

189 
ts
->
u
.
h√xt
 = *
li°
;

190 *
li°
 = 
ts
;

191 
g
->
°π
.
nu£
++;

192  
ts
;

193 
	}
}

199 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

200 i‡(
l
 <
LUAI_MAXSHORTLEN
)

201  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

203 
TSåög
 *
ts
;

204 i‡(
l
 >(
MAX_SIZE
 - (
TSåög
))/())

205 
	`luaM_toobig
(
L
);

206 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
l
);

207 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

208  
ts
;

210 
	}
}

219 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

220 
i
 = 
	`poöt2uöt
(
°r
Ë% 
STRCACHE_N
;

221 
j
;

222 
TSåög
 **
p
 = 
	`G
(
L
)->
°rˇche
[
i
];

223 
j
 = 0; j < 
STRCACHE_M
; j++) {

224 i‡(
	`°rcmp
(
°r
, 
	`gë°r
(
p
[
j
])) == 0)

225  
p
[
j
];

228 
j
 = 
STRCACHE_M
 - 1; j > 0; j--)

229 
p
[
j
] =Ö[j - 1];

231 
p
[0] = 
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

232  
p
[0];

233 
	}
}

236 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
) {

237 
Ud©a
 *
u
;

238 
GCObje˘
 *
o
;

239 i‡(
s
 > 
MAX_SIZE
 - (
Ud©a
))

240 
	`luaM_toobig
(
L
);

241 
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, 
	`sizñud©a
(
s
));

242 
u
 = 
	`gco2u
(
o
);

243 
u
->
Àn
 = 
s
;

244 
u
->
më©abÀ
 = 
NULL
;

245 
	`£tu£rvÆue
(
L
, 
u
, 
luaO_nûobje˘
);

246  
u
;

247 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lstring.h

7 #i‚de‡
l°rög_h


8 
	#l°rög_h


	)

10 
	~"lgc.h
"

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

15 
	#sizñ°rög
(
l
Ë((
UTSåög
Ë+ (÷Ë+ 1Ë* ())

	)

17 
	#sizñud©a
(
l
Ë((
UUd©a
Ë+ (l))

	)

18 
	#sizeud©a
(
u
Ë
	`sizñud©a
((u)->
Àn
)

	)

20 
	#luaS_√wlôîÆ
(
L
, 
s
Ë(
	`luaS_√wl°r
(L, "" s, \

21 ((
s
)/())-1))

	)

27 
	#i§e£rved
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 && (s)->
exåa
 > 0)

	)

33 
	#eqshr°r
(
a
,
b
Ë
	`check_exp
(◊)->
â
 =
LUA_TSHRSTR
, (aË=(b))

	)

36 
LUAI_FUNC
 
luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
);

37 
LUAI_FUNC
 
luaS_hashl⁄g°r
 (
TSåög
 *
ts
);

38 
LUAI_FUNC
 
luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
);

39 
LUAI_FUNC
 
luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
);

40 
LUAI_FUNC
 
luaS_˛órˇche
 (
globÆ_Sèã
 *
g
);

41 
LUAI_FUNC
 
luaS_öô
 (
lua_Sèã
 *
L
);

42 
LUAI_FUNC
 
luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
);

43 
LUAI_FUNC
 
Ud©a
 *
luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
);

44 
LUAI_FUNC
 
TSåög
 *
luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
);

45 
LUAI_FUNC
 
TSåög
 *
luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
);

46 
LUAI_FUNC
 
TSåög
 *
luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lstrlib.c

7 
	#l°æib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<Êﬂt.h
>

15 
	~<limôs.h
>

16 
	~<loˇÀ.h
>

17 
	~<°ddef.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

22 
	~"lua.h
"

24 
	~"œuxlib.h
"

25 
	~"luÆib.h
"

33 #i‡!
deföed
(
LUA_MAXCAPTURES
)

34 
	#LUA_MAXCAPTURES
 32

	)

39 
	#uch¨
(
c
Ë(()(c))

	)

46 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

48 
	#MAXSIZE
 \

49 ((
size_t
Ë< (Ë? 
MAX_SIZET
 : (size_t)(
INT_MAX
))

	)

54 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

55 
size_t
 
l
;

56 
	`luaL_checkl°rög
(
L
, 1, &
l
);

57 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

59 
	}
}

63 
lua_I¡egî
 
	$po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

64 i‡(
pos
 >= 0) Öos;

65 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

66  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

67 
	}
}

70 
	$°r_sub
 (
lua_Sèã
 *
L
) {

71 
size_t
 
l
;

72 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

73 
lua_I¡egî
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

74 
lua_I¡egî
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

75 i‡(
°¨t
 < 1) start = 1;

76 i‡(
íd
 > (
lua_I¡egî
)
l
)Énd =Ü;

77 i‡(
°¨t
 <
íd
)

78 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, (
size_t
)(
íd
 - start) + 1);

79 
	`lua_pushlôîÆ
(
L
, "");

81 
	}
}

84 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

85 
size_t
 
l
, 
i
;

86 
luaL_Buf„r
 
b
;

87 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

88 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

89 
i
 = 0; i < 
l
; i++)

90 
p
[
i
] = 
s
[
l
 - i - 1];

91 
	`luaL_pushªsu…size
(&
b
, 
l
);

93 
	}
}

96 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

97 
size_t
 
l
;

98 
size_t
 
i
;

99 
luaL_Buf„r
 
b
;

100 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

101 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

102 
i
=0; i<
l
; i++)

103 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

104 
	`luaL_pushªsu…size
(&
b
, 
l
);

106 
	}
}

109 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

110 
size_t
 
l
;

111 
size_t
 
i
;

112 
luaL_Buf„r
 
b
;

113 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

114 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

115 
i
=0; i<
l
; i++)

116 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

117 
	`luaL_pushªsu…size
(&
b
, 
l
);

119 
	}
}

122 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

123 
size_t
 
l
, 
l£p
;

124 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

125 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

126 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

127 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

128 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞> 
MAXSIZE
 / 
n
)

129  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

131 
size_t
 
tŸÆÀn
 = (size_t)
n
 * 
l
 + (size_t)“ - 1Ë* 
l£p
;

132 
luaL_Buf„r
 
b
;

133 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

134 
n
-- > 1) {

135 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

136 i‡(
l£p
 > 0) {

137 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());

138 
p
 +
l£p
;

141 
	`mem˝y
(
p
, 
s
, 
l
 * ());

142 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

145 
	}
}

148 
	$°r_byã
 (
lua_Sèã
 *
L
) {

149 
size_t
 
l
;

150 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

151 
lua_I¡egî
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

152 
lua_I¡egî
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

153 
n
, 
i
;

154 i‡(
posi
 < 1)Öosi = 1;

155 i‡(
po£
 > (
lua_I¡egî
)
l
)Öose =Ü;

156 i‡(
posi
 > 
po£
)  0;

157 i‡(
po£
 - 
posi
 >
INT_MAX
)

158  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

159 
n
 = ()(
po£
 - 
posi
) + 1;

160 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

161 
i
=0; i<
n
; i++)

162 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

163  
n
;

164 
	}
}

167 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

168 
n
 = 
	`lua_gët›
(
L
);

169 
i
;

170 
luaL_Buf„r
 
b
;

171 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

172 
i
=1; i<=
n
; i++) {

173 
lua_I¡egî
 
c
 = 
	`luaL_checköãgî
(
L
, 
i
);

174 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

175 
p
[
i
 - 1] = 
	`uch¨
(
c
);

177 
	`luaL_pushªsu…size
(&
b
, 
n
);

179 
	}
}

182 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° *
b
, 
size_t
 
size
, *
B
) {

183 ()
L
;

184 
	`luaL_addl°rög
((
luaL_Buf„r
 *Ë
B
, (c⁄° *)
b
, 
size
);

186 
	}
}

189 
	$°r_dump
 (
lua_Sèã
 *
L
) {

190 
luaL_Buf„r
 
b
;

191 
°rù
 = 
	`lua_toboﬁón
(
L
, 2);

192 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

193 
	`lua_£â›
(
L
, 1);

194 
	`luaL_bufföô
(
L
,&
b
);

195 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
, 
°rù
) != 0)

196  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

197 
	`luaL_pushªsu…
(&
b
);

199 
	}
}

210 
	#CAP_UNFINISHED
 (-1)

	)

211 
	#CAP_POSITION
 (-2)

	)

214 
	sM©chSèã
 {

215 c⁄° *
	m§c_öô
;

216 c⁄° *
	m§c_íd
;

217 c⁄° *
	mp_íd
;

218 
lua_Sèã
 *
	mL
;

219 
	mm©chdïth
;

220 
	mÀvñ
;

222 c⁄° *
	möô
;

223 
±rdiff_t
 
	mÀn
;

224 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

225 } 
	tM©chSèã
;

229 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

233 #i‡!
deföed
(
MAXCCALLS
)

234 
	#MAXCCALLS
 200

	)

238 
	#L_ESC
 '%'

	)

239 
	#SPECIALS
 "^$*+?.([%-"

	)

242 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

243 
l
 -= '1';

244 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

245  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

246  
l
;

247 
	}
}

250 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

251 
Àvñ
 = 
ms
->level;

252 
Àvñ
--;Üevel>=0;Üevel--)

253 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

254  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

255 
	}
}

258 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

259 *
p
++) {

260 
L_ESC
: {

261 i‡(
p
 =
ms
->
p_íd
)

262 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (ends with '%%')");

263  
p
+1;

266 i‡(*
p
 == '^')Ö++;

268 i‡(
p
 =
ms
->
p_íd
)

269 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missing ']')");

270 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

271 
p
++;

272 } *
p
 != ']');

273  
p
+1;

276  
p
;

279 
	}
}

282 
	$m©ch_˛ass
 (
c
, 
˛
) {

283 
ªs
;

284 
	`tﬁowî
(
˛
)) {

285 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

286 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

287 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

288 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

289 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

290 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

291 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

292 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

293 'w' : 
ªs
 = 
	`iß um
(
c
); ;

294 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

295 'z' : 
ªs
 = (
c
 == 0); ;

296 :  (
˛
 =
c
);

298  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

299 
	}
}

302 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

303 
sig
 = 1;

304 i‡(*(
p
+1) == '^') {

305 
sig
 = 0;

306 
p
++;

308 ++
p
 < 
ec
) {

309 i‡(*
p
 =
L_ESC
) {

310 
p
++;

311 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

312  
sig
;

314 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

315 
p
+=2;

316 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

317  
sig
;

319 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

321  !
sig
;

322 
	}
}

325 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

326 c⁄° *
ï
) {

327 i‡(
s
 >
ms
->
§c_íd
)

330 
c
 = 
	`uch¨
(*
s
);

331 *
p
) {

333 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

334 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

335 :  (
	`uch¨
(*
p
Ë=
c
);

338 
	}
}

341 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

342 c⁄° *
p
) {

343 i‡(
p
 >
ms
->
p_íd
 - 1)

344 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missingárgumentsÅo '%%b')");

345 i‡(*
s
 !*
p
Ë 
NULL
;

347 
b
 = *
p
;

348 
e
 = *(
p
+1);

349 
c⁄t
 = 1;

350 ++
s
 < 
ms
->
§c_íd
) {

351 i‡(*
s
 =
e
) {

352 i‡(--
c⁄t
 =0Ë 
s
+1;

354 i‡(*
s
 =
b
Ë
c⁄t
++;

357  
NULL
;

358 
	}
}

361 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

362 c⁄° *
p
, c⁄° *
ï
) {

363 
±rdiff_t
 
i
 = 0;

364 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

365 
i
++;

367 
i
>=0) {

368 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

369 i‡(
ªs
) Ñes;

370 
i
--;

372  
NULL
;

373 
	}
}

376 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

377 c⁄° *
p
, c⁄° *
ï
) {

379 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

380 i‡(
ªs
 !
NULL
)

381  
ªs
;

382 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

383 
s
++;

384  
NULL
;

386 
	}
}

389 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

390 c⁄° *
p
, 
wh©
) {

391 c⁄° *
ªs
;

392 
Àvñ
 = 
ms
->level;

393 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

394 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

395 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

396 
ms
->
Àvñ
 =Üevel+1;

397 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

398 
ms
->
Àvñ
--;

399  
ªs
;

400 
	}
}

403 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

404 c⁄° *
p
) {

405 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

406 c⁄° *
ªs
;

407 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

408 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

409 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

410  
ªs
;

411 
	}
}

414 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

415 
size_t
 
Àn
;

416 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

417 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

418 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

419 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

420  
s
+
Àn
;

421  
NULL
;

422 
	}
}

425 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

426 i‡(
ms
->
m©chdïth
-- == 0)

427 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

428 
öô
:

429 i‡(
p
 !
ms
->
p_íd
) {

430 *
p
) {

432 i‡(*(
p
 + 1) == ')')

433 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

435 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

439 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

443 i‡((
p
 + 1Ë!
ms
->
p_íd
)

444 
dÊt
;

445 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

448 
L_ESC
: {

449 *(
p
 + 1)) {

451 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

452 i‡(
s
 !
NULL
) {

453 
p
 +4; 
öô
;

458 c⁄° *
ï
; 
¥evious
;

459 
p
 += 2;

460 i‡(*
p
 != '[')

461 
	`luaL_îr‹
(
ms
->
L
, "missing '['áfter '%%f' inÖattern");

462 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

463 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

464 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

465 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

466 
p
 = 
ï
; 
öô
;

468 
s
 = 
NULL
;

474 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

475 i‡(
s
 !
NULL
) {

476 
p
 +2; 
öô
;

480 : 
dÊt
;

484 : 
dÊt
: {

485 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

487 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

488 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

489 
p
 = 
ï
 + 1; 
öô
;

492 
s
 = 
NULL
;

495 *
ï
) {

497 c⁄° *
ªs
;

498 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

499 
s
 = 
ªs
;

501 
p
 = 
ï
 + 1; 
öô
;

506 
s
++;

509 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

512 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

515 
s
++; 
p
 = 
ï
; 
öô
;

522 
ms
->
m©chdïth
++;

523  
s
;

524 
	}
}

528 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

529 c⁄° *
s2
, 
size_t
 
l2
) {

530 i‡(
l2
 =0Ë 
s1
;

531 i‡(
l2
 > 
l1
Ë 
NULL
;

533 c⁄° *
öô
;

534 
l2
--;

535 
l1
 =Ü1-
l2
;

536 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

537 
öô
++;

538 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

539  
öô
-1;

541 
l1
 -
öô
-
s1
;

542 
s1
 = 
öô
;

545  
NULL
;

547 
	}
}

550 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

551 c⁄° *
e
) {

552 i‡(
i
 >
ms
->
Àvñ
) {

553 i‡(
i
 == 0)

554 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

556 
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
i
 + 1);

559 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

560 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

561 i‡(
l
 =
CAP_POSITION
)

562 
	`lua_pushöãgî
(
ms
->
L
, (ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
) + 1);

564 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

566 
	}
}

569 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

570 
i
;

571 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

572 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

573 
i
 = 0; i < 
∆evñs
; i++)

574 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

575  
∆evñs
;

576 
	}
}

580 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

581 
size_t
 
u±o
 = 0;

583 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

585 
u±o
 +
	`°æí
(
p
 + upto) + 1;

586 } 
u±o
 <
l
);

588 
	}
}

591 
	$¥ï°©e
 (
M©chSèã
 *
ms
, 
lua_Sèã
 *
L
,

592 c⁄° *
s
, 
size_t
 
ls
, c⁄° *
p
, size_à
Õ
) {

593 
ms
->
L
 = L;

594 
ms
->
m©chdïth
 = 
MAXCCALLS
;

595 
ms
->
§c_öô
 = 
s
;

596 
ms
->
§c_íd
 = 
s
 + 
ls
;

597 
ms
->
p_íd
 = 
p
 + 
Õ
;

598 
	}
}

601 
	$ª¥ï°©e
 (
M©chSèã
 *
ms
) {

602 
ms
->
Àvñ
 = 0;

603 
	`lua_as£π
(
ms
->
m©chdïth
 =
MAXCCALLS
);

604 
	}
}

607 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

608 
size_t
 
ls
, 
Õ
;

609 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

610 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

611 
lua_I¡egî
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

612 i‡(
öô
 < 1) init = 1;

613 i‡(
öô
 > (
lua_I¡egî
)
ls
 + 1) {

614 
	`lua_pushnû
(
L
);

618 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

620 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - (
size_t
)öô + 1, 
p
, 
Õ
);

621 i‡(
s2
) {

622 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
) + 1);

623 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
Ë+ 
Õ
);

628 
M©chSèã
 
ms
;

629 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

630 
™ch‹
 = (*
p
 == '^');

631 i‡(
™ch‹
) {

632 
p
++; 
Õ
--;

634 
	`¥ï°©e
(&
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

636 c⁄° *
ªs
;

637 
	`ª¥ï°©e
(&
ms
);

638 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

639 i‡(
föd
) {

640 
	`lua_pushöãgî
(
L
, (
s1
 - 
s
) + 1);

641 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

642  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

645  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

647 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

649 
	`lua_pushnû
(
L
);

651 
	}
}

654 
	$°r_föd
 (
lua_Sèã
 *
L
) {

655  
	`°r_föd_aux
(
L
, 1);

656 
	}
}

659 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

660  
	`°r_föd_aux
(
L
, 0);

661 
	}
}

665 
	sGM©chSèã
 {

666 c⁄° *
	m§c
;

667 c⁄° *
	mp
;

668 c⁄° *
	mœ°m©ch
;

669 
M©chSèã
 
	mms
;

670 } 
	tGM©chSèã
;

673 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

674 
GM©chSèã
 *
gm
 = (GM©chSèã *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(3));

675 c⁄° *
§c
;

676 
gm
->
ms
.
L
 = L;

677 
§c
 = 
gm
->§c; sr¯<gm->
ms
.
§c_íd
; src++) {

678 c⁄° *
e
;

679 
	`ª¥ï°©e
(&
gm
->
ms
);

680 i‡((
e
 = 
	`m©ch
(&
gm
->
ms
, 
§c
, gm->
p
)Ë!
NULL
 &&É !gm->
œ°m©ch
) {

681 
gm
->
§c
 = gm->
œ°m©ch
 = 
e
;

682  
	`push_ˇ±uªs
(&
gm
->
ms
, 
§c
, 
e
);

686 
	}
}

689 
	$gm©ch
 (
lua_Sèã
 *
L
) {

690 
size_t
 
ls
, 
Õ
;

691 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

692 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

693 
GM©chSèã
 *
gm
;

694 
	`lua_£â›
(
L
, 2);

695 
gm
 = (
GM©chSèã
 *)
	`lua_√wu£rd©a
(
L
, (GMatchState));

696 
	`¥ï°©e
(&
gm
->
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

697 
gm
->
§c
 = 
s
; gm->
p
 =Ö; gm->
œ°m©ch
 = 
NULL
;

698 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

700 
	}
}

703 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

704 c⁄° *
e
) {

705 
size_t
 
l
, 
i
;

706 
lua_Sèã
 *
L
 = 
ms
->L;

707 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
L
, 3, &
l
);

708 
i
 = 0; i < 
l
; i++) {

709 i‡(
√ws
[
i
] !
L_ESC
)

710 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

712 
i
++;

713 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

714 i‡(
√ws
[
i
] !
L_ESC
)

715 
	`luaL_îr‹
(
L
, "övÆid u£ o‡'%c' i¿ª∂a˚míà°rög", 
L_ESC
);

716 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

718 i‡(
√ws
[
i
] == '0')

719 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

721 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

722 
	`luaL_tﬁ°rög
(
L
, -1, 
NULL
);

723 
	`lua_ªmove
(
L
, -2);

724 
	`luaL_addvÆue
(
b
);

728 
	}
}

731 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

732 c⁄° *
e
, 
å
) {

733 
lua_Sèã
 *
L
 = 
ms
->L;

734 
å
) {

735 
LUA_TFUNCTION
: {

736 
n
;

737 
	`lua_pushvÆue
(
L
, 3);

738 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

739 
	`lua_ˇŒ
(
L
, 
n
, 1);

742 
LUA_TTABLE
: {

743 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

744 
	`lua_gëèbÀ
(
L
, 3);

748 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

752 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

753 
	`lua_p›
(
L
, 1);

754 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

756 i‡(!
	`lua_is°rög
(
L
, -1))

757 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

758 
	`luaL_addvÆue
(
b
);

759 
	}
}

762 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

763 
size_t
 
§˛
, 
Õ
;

764 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

765 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

766 c⁄° *
œ°m©ch
 = 
NULL
;

767 
å
 = 
	`lua_ty≥
(
L
, 3);

768 
lua_I¡egî
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
 + 1);

769 
™ch‹
 = (*
p
 == '^');

770 
lua_I¡egî
 
n
 = 0;

771 
M©chSèã
 
ms
;

772 
luaL_Buf„r
 
b
;

773 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

774 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

776 
	`luaL_bufföô
(
L
, &
b
);

777 i‡(
™ch‹
) {

778 
p
++; 
Õ
--;

780 
	`¥ï°©e
(&
ms
, 
L
, 
§c
, 
§˛
, 
p
, 
Õ
);

781 
n
 < 
max_s
) {

782 c⁄° *
e
;

783 
	`ª¥ï°©e
(&
ms
);

784 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
 &&É !
œ°m©ch
) {

785 
n
++;

786 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

787 
§c
 = 
œ°m©ch
 = 
e
;

789 i‡(
§c
 < 
ms
.
§c_íd
)

790 
	`luaL_addch¨
(&
b
, *
§c
++);

792 i‡(
™ch‹
) ;

794 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

795 
	`luaL_pushªsu…
(&
b
);

796 
	`lua_pushöãgî
(
L
, 
n
);

798 
	}
}

810 #i‡!
deföed
(
lua_numbî2°rx
)

816 
	~<m©h.h
>

818 
	#SIZELENMOD
 ((
LUA_NUMBER_FRMLEN
)/())

	)

827 
	#L_NBFD
 ((
	`l_m©hlim
(
MANT_DIG
Ë- 1)%4 + 1)

	)

833 
lua_Numbî
 
	$adddigô
 (*
buff
, 
n
, 
lua_Numbî
 
x
) {

834 
lua_Numbî
 
dd
 = 
	`l_m©h›
(
Êo‹
)(
x
);

835 
d
 = ()
dd
;

836 
buff
[
n
] = (
d
 < 10 ? d + '0' : d - 10 + 'a');

837  
x
 - 
dd
;

838 
	}
}

841 
	$num2°øux
 (*
buff
, 
sz
, 
lua_Numbî
 
x
) {

843 i‡(
x
 !x || x =(
lua_Numbî
)
HUGE_VAL
 || x == -(lua_Number)HUGE_VAL)

844  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
, (
LUAI_UACNUMBER
)
x
);

845 i‡(
x
 == 0) {

847  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
 "x0p+0", (
LUAI_UACNUMBER
)
x
);

850 
e
;

851 
lua_Numbî
 
m
 = 
	`l_m©h›
(
‰exp
)(
x
, &
e
);

852 
n
 = 0;

853 i‡(
m
 < 0) {

854 
buff
[
n
++] = '-';

855 
m
 = -m;

857 
buff
[
n
++] = '0'; buff[n++] = 'x';

858 
m
 = 
	`adddigô
(
buff
, 
n
++, m * (1 << 
L_NBFD
));

859 
e
 -
L_NBFD
;

860 i‡(
m
 > 0) {

861 
buff
[
n
++] = 
	`lua_gëloˇÀde˝oöt
();

863 
m
 = 
	`adddigô
(
buff
, 
n
++, m * 16);

864 } 
m
 > 0);

866 
n
 +
	`l_•rötf
(
buff
 +Ç, 
sz
 -Ç, "p%+d", 
e
);

867 
	`lua_as£π
(
n
 < 
sz
);

868  
n
;

870 
	}
}

873 
	$lua_numbî2°rx
 (
lua_Sèã
 *
L
, *
buff
, 
sz
,

874 c⁄° *
fmt
, 
lua_Numbî
 
x
) {

875 
n
 = 
	`num2°øux
(
buff
, 
sz
, 
x
);

876 i‡(
fmt
[
SIZELENMOD
] == 'A') {

877 
i
;

878 
i
 = 0; i < 
n
; i++)

879 
buff
[
i
] = 
	`touµî
(
	`uch¨
(buff[i]));

881 i‡(
fmt
[
SIZELENMOD
] != 'a')

882  
	`luaL_îr‹
(
L
, "modifiers for format '%%a'/'%%A'Çot implemented");

883  
n
;

884 
	}
}

896 
	#MAX_ITEM
 (120 + 
	`l_m©hlim
(
MAX_10_EXP
))

	)

900 
	#FLAGS
 "-+ #0"

	)

905 
	#MAX_FORMAT
 32

	)

908 
	$addquŸed
 (
luaL_Buf„r
 *
b
, c⁄° *
s
, 
size_t
 
Àn
) {

909 
	`luaL_addch¨
(
b
, '"');

910 
Àn
--) {

911 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

912 
	`luaL_addch¨
(
b
, '\\');

913 
	`luaL_addch¨
(
b
, *
s
);

915 i‡(
	`is˙ål
(
	`uch¨
(*
s
))) {

916 
buff
[10];

917 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

918 
	`l_•rötf
(
buff
, (buff), "\\%d", ()
	`uch¨
(*
s
));

920 
	`l_•rötf
(
buff
, (buff), "\\%03d", ()
	`uch¨
(*
s
));

921 
	`luaL_add°rög
(
b
, 
buff
);

924 
	`luaL_addch¨
(
b
, *
s
);

925 
s
++;

927 
	`luaL_addch¨
(
b
, '"');

928 
	}
}

934 
	$checkdp
 (*
buff
, 
nb
) {

935 i‡(
	`memchr
(
buff
, '.', 
nb
Ë=
NULL
) {

936 
poöt
 = 
	`lua_gëloˇÀde˝oöt
();

937 *
µoöt
 = (*)
	`memchr
(
buff
, 
poöt
, 
nb
);

938 i‡(
µoöt
) *ppoint = '.';

940 
	}
}

943 
	$addlôîÆ
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

944 
	`lua_ty≥
(
L
, 
¨g
)) {

945 
LUA_TSTRING
: {

946 
size_t
 
Àn
;

947 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, &
Àn
);

948 
	`addquŸed
(
b
, 
s
, 
Àn
);

951 
LUA_TNUMBER
: {

952 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
MAX_ITEM
);

953 
nb
;

954 i‡(!
	`lua_isöãgî
(
L
, 
¨g
)) {

955 
lua_Numbî
 
n
 = 
	`lua_t⁄umbî
(
L
, 
¨g
);

956 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, "%" 
LUA_NUMBER_FRMLEN
 "a", 
n
);

957 
	`checkdp
(
buff
, 
nb
);

960 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 
¨g
);

961 c⁄° *
f‹m©
 = (
n
 =
LUA_MININTEGER
)

962 ? "0x%" 
LUA_INTEGER_FRMLEN
 "x"

963 : 
LUA_INTEGER_FMT
;

964 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m©
, (
LUAI_UACINT
)
n
);

966 
	`luaL_addsize
(
b
, 
nb
);

969 
LUA_TNIL
: 
LUA_TBOOLEAN
: {

970 
	`luaL_tﬁ°rög
(
L
, 
¨g
, 
NULL
);

971 
	`luaL_addvÆue
(
b
);

975 
	`luaL_¨gîr‹
(
L
, 
¨g
, "value hasÇoÜiteral form");

978 
	}
}

981 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

982 c⁄° *
p
 = 
°r‰mt
;

983 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

984 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

985 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

986 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

987 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

988 i‡(*
p
 == '.') {

989 
p
++;

990 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

991 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

993 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

994 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

995 *(
f‹m
++) = '%';

996 
	`mem˝y
(
f‹m
, 
°r‰mt
, ((
p
 - strfrmt) + 1) * ());

997 
f‹m
 +(
p
 - 
°r‰mt
) + 1;

998 *
f‹m
 = '\0';

999  
p
;

1000 
	}
}

1006 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

1007 
size_t
 
l
 = 
	`°æí
(
f‹m
);

1008 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

1009 
•ec
 = 
f‹m
[
l
 - 1];

1010 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

1011 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

1012 
f‹m
[
l
 + 
lm
] = '\0';

1013 
	}
}

1016 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

1017 
t›
 = 
	`lua_gët›
(
L
);

1018 
¨g
 = 1;

1019 
size_t
 
sÊ
;

1020 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

1021 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

1022 
luaL_Buf„r
 
b
;

1023 
	`luaL_bufföô
(
L
, &
b
);

1024 
°r‰mt
 < 
°r‰mt_íd
) {

1025 i‡(*
°r‰mt
 !
L_ESC
)

1026 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1027 i‡(*++
°r‰mt
 =
L_ESC
)

1028 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1030 
f‹m
[
MAX_FORMAT
];

1031 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

1032 
nb
 = 0;

1033 i‡(++
¨g
 > 
t›
)

1034 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

1035 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

1036 *
°r‰mt
++) {

1038 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, ()
	`luaL_checköãgî
(
L
, 
¨g
));

1043 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1044 
	`addÀnmod
(
f‹m
, 
LUA_INTEGER_FRMLEN
);

1045 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, (
LUAI_UACINT
)
n
);

1049 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1050 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, 
f‹m
,

1051 
	`luaL_checknumbî
(
L
, 
¨g
));

1055 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1056 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1057 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, (
LUAI_UACNUMBER
)
n
);

1061 
	`addlôîÆ
(
L
, &
b
, 
¨g
);

1065 
size_t
 
l
;

1066 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

1067 i‡(
f‹m
[2] == '\0')

1068 
	`luaL_addvÆue
(&
b
);

1070 
	`luaL_¨gcheck
(
L
, 
l
 =
	`°æí
(
s
), 
¨g
, "string contains zeros");

1071 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

1073 
	`luaL_addvÆue
(&
b
);

1076 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
s
);

1077 
	`lua_p›
(
L
, 1);

1083  
	`luaL_îr‹
(
L
, "invalid option '%%%c'Åo 'format'",

1084 *(
°r‰mt
 - 1));

1087 
	`lua_as£π
(
nb
 < 
MAX_ITEM
);

1088 
	`luaL_addsize
(&
b
, 
nb
);

1091 
	`luaL_pushªsu…
(&
b
);

1093 
	}
}

1106 #i‡!
deföed
(
LUAL_PACKPADBYTE
)

1107 
	#LUAL_PACKPADBYTE
 0x00

	)

1111 
	#MAXINTSIZE
 16

	)

1114 
	#NB
 
CHAR_BIT


	)

1117 
	#MC
 ((1 << 
NB
Ë- 1)

	)

1120 
	#SZINT
 (()(
lua_I¡egî
))

	)

1125 
	mdummy
;

1126 
	mlôée
;

1127 } 
	g«tivìndün
 = {1};

1131 
	scD
 {

1132 
	mc
;

1133 uni⁄ { 
	md
; *
	mp
; 
lua_I¡egî
 
	mi
; 
lua_Numbî
 
	mn
; } 
	mu
;

1136 
	#MAXALIGN
 (
	`off£tof
(
cD
, 
u
))

	)

1142 
	uFty≥s
 {

1143 
	mf
;

1144 
	md
;

1145 
lua_Numbî
 
	mn
;

1146 
	mbuff
[5 * (
lua_Numbî
)];

1147 } 
	tFty≥s
;

1153 
	sHódî
 {

1154 
lua_Sèã
 *
	mL
;

1155 
	mi¶ôée
;

1156 
	mmaxÆign
;

1157 } 
	tHódî
;

1163 
	eKO±i⁄
 {

1164 
	mKöt
,

1165 
	mKuöt
,

1166 
	mKÊﬂt
,

1167 
	mKch¨
,

1168 
	mK°rög
,

1169 
	mKz°r
,

1170 
	mK∑ddög
,

1171 
	mK∑ddÆign
,

1172 
	mKn›


1173 } 
	tKO±i⁄
;

1180 
	$digô
 (
c
Ë{  '0' <¯&& c <'9'; 
	}
}

1182 
	$gënum
 (c⁄° **
fmt
, 
df
) {

1183 i‡(!
	`digô
(**
fmt
))

1184  
df
;

1186 
a
 = 0;

1188 
a
 =á*10 + (*((*
fmt
)++) - '0');

1189 } 
	`digô
(**
fmt
Ë&& 
a
 <(()
MAXSIZE
 - 9)/10);

1190  
a
;

1192 
	}
}

1199 
	$gënumlimô
 (
Hódî
 *
h
, c⁄° **
fmt
, 
df
) {

1200 
sz
 = 
	`gënum
(
fmt
, 
df
);

1201 i‡(
sz
 > 
MAXINTSIZE
 || sz <= 0)

1202  
	`luaL_îr‹
(
h
->
L
, "integral size (%d) out ofÜimits [1,%d]",

1203 
sz
, 
MAXINTSIZE
);

1204  
sz
;

1205 
	}
}

1211 
	$öôhódî
 (
lua_Sèã
 *
L
, 
Hódî
 *
h
) {

1212 
h
->
L
 = L;

1213 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
;

1214 
h
->
maxÆign
 = 1;

1215 
	}
}

1221 
KO±i⁄
 
	$gë›ti⁄
 (
Hódî
 *
h
, c⁄° **
fmt
, *
size
) {

1222 
›t
 = *((*
fmt
)++);

1223 *
size
 = 0;

1224 
›t
) {

1225 'b': *
size
 = ();  
Köt
;

1226 'B': *
size
 = ();  
Kuöt
;

1227 'h': *
size
 = ();  
Köt
;

1228 'H': *
size
 = ();  
Kuöt
;

1229 'l': *
size
 = ();  
Köt
;

1230 'L': *
size
 = ();  
Kuöt
;

1231 'j': *
size
 = (
lua_I¡egî
);  
Köt
;

1232 'J': *
size
 = (
lua_I¡egî
);  
Kuöt
;

1233 'T': *
size
 = (
size_t
);  
Kuöt
;

1234 'f': *
size
 = ();  
KÊﬂt
;

1235 'd': *
size
 = ();  
KÊﬂt
;

1236 'n': *
size
 = (
lua_Numbî
);  
KÊﬂt
;

1237 'i': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Köt
;

1238 'I': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Kuöt
;

1239 's': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, (
size_t
));  
K°rög
;

1241 *
size
 = 
	`gënum
(
fmt
, -1);

1242 i‡(*
size
 == -1)

1243 
	`luaL_îr‹
(
h
->
L
, "missing size for format option 'c'");

1244  
Kch¨
;

1245 'z':  
Kz°r
;

1246 'x': *
size
 = 1;  
K∑ddög
;

1247 'X':  
K∑ddÆign
;

1249 '<': 
h
->
i¶ôée
 = 1; ;

1250 '>': 
h
->
i¶ôée
 = 0; ;

1251 '=': 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
; ;

1252 '!': 
h
->
maxÆign
 = 
	`gënumlimô
(h, 
fmt
, 
MAXALIGN
); ;

1253 : 
	`luaL_îr‹
(
h
->
L
, "övÆid f‹m© o±i⁄ '%c'", 
›t
);

1255  
Kn›
;

1256 
	}
}

1268 
KO±i⁄
 
	$gëdëaûs
 (
Hódî
 *
h
, 
size_t
 
tŸÆsize
,

1269 c⁄° **
fmt
, *
psize
, *
¡ﬂlign
) {

1270 
KO±i⁄
 
›t
 = 
	`gë›ti⁄
(
h
, 
fmt
, 
psize
);

1271 
Æign
 = *
psize
;

1272 i‡(
›t
 =
K∑ddÆign
) {

1273 i‡(**
fmt
 ='\0' || 
	`gë›ti⁄
(
h
, fmt, &
Æign
Ë=
Kch¨
 ||álign == 0)

1274 
	`luaL_¨gîr‹
(
h
->
L
, 1, "invalidÇext option for option 'X'");

1276 i‡(
Æign
 <1 || 
›t
 =
Kch¨
)

1277 *
¡ﬂlign
 = 0;

1279 i‡(
Æign
 > 
h
->
maxÆign
)

1280 
Æign
 = 
h
->
maxÆign
;

1281 i‡((
Æign
 & (align - 1)) != 0)

1282 
	`luaL_¨gîr‹
(
h
->
L
, 1, "formatásks forálignmentÇotÖower of 2");

1283 *
¡ﬂlign
 = (
Æign
 - ()(
tŸÆsize
 & (align - 1))) & (align - 1);

1285  
›t
;

1286 
	}
}

1295 
	$∑cköt
 (
luaL_Buf„r
 *
b
, 
lua_Unsig√d
 
n
,

1296 
i¶ôée
, 
size
, 
√g
) {

1297 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
size
);

1298 
i
;

1299 
buff
[
i¶ôée
 ? 0 : 
size
 - 1] = ()(
n
 & 
MC
);

1300 
i
 = 1; i < 
size
; i++) {

1301 
n
 >>
NB
;

1302 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()(
n
 & 
MC
);

1304 i‡(
√g
 && 
size
 > 
SZINT
) {

1305 
i
 = 
SZINT
; i < 
size
; i++)

1306 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()
MC
;

1308 
	`luaL_addsize
(
b
, 
size
);

1309 
	}
}

1316 
	$c›ywôhídün
 (vﬁ©ûê*
de°
, vﬁ©ûêc⁄° *
§c
,

1317 
size
, 
i¶ôée
) {

1318 i‡(
i¶ôée
 =
«tivìndün
.
lôée
) {

1319 
size
-- != 0)

1320 *(
de°
++Ë*(
§c
++);

1323 
de°
 +
size
 - 1;

1324 
size
-- != 0)

1325 *(
de°
--Ë*(
§c
++);

1327 
	}
}

1330 
	$°r_∑ck
 (
lua_Sèã
 *
L
) {

1331 
luaL_Buf„r
 
b
;

1332 
Hódî
 
h
;

1333 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1334 
¨g
 = 1;

1335 
size_t
 
tŸÆsize
 = 0;

1336 
	`öôhódî
(
L
, &
h
);

1337 
	`lua_pushnû
(
L
);

1338 
	`luaL_bufföô
(
L
, &
b
);

1339 *
fmt
 != '\0') {

1340 
size
, 
¡ﬂlign
;

1341 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1342 
tŸÆsize
 +
¡ﬂlign
 + 
size
;

1343 
¡ﬂlign
-- > 0)

1344 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1345 
¨g
++;

1346 
›t
) {

1347 
Köt
: {

1348 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1349 i‡(
size
 < 
SZINT
) {

1350 
lua_I¡egî
 
lim
 = (lua_I¡egî)1 << ((
size
 * 
NB
) - 1);

1351 
	`luaL_¨gcheck
(
L
, -
lim
 <
n
 &&Ç <Üim, 
¨g
, "integer overflow");

1353 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, (n < 0));

1356 
Kuöt
: {

1357 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1358 i‡(
size
 < 
SZINT
)

1359 
	`luaL_¨gcheck
(
L
, (
lua_Unsig√d
)
n
 < (÷ua_Unsig√d)1 << (
size
 * 
NB
)),

1360 
¨g
, "unsigned overflow");

1361 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, 0);

1364 
KÊﬂt
: {

1365 vﬁ©ûê
Fty≥s
 
u
;

1366 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
size
);

1367 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1368 i‡(
size
 =(
u
.
f
)Ëu.‡()
n
;

1369 i‡(
size
 =(
u
.
d
)Ëu.d = ()
n
;

1370 
u
.
n
 =Ç;

1372 
	`c›ywôhídün
(
buff
, 
u
.buff, 
size
, 
h
.
i¶ôée
);

1373 
	`luaL_addsize
(&
b
, 
size
);

1376 
Kch¨
: {

1377 
size_t
 
Àn
;

1378 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1379 
	`luaL_¨gcheck
(
L
, 
Àn
 <(
size_t
)
size
, 
¨g
,

1381 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1382 
Àn
++ < (
size_t
)
size
)

1383 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1386 
K°rög
: {

1387 
size_t
 
Àn
;

1388 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1389 
	`luaL_¨gcheck
(
L
, 
size
 >()(
size_t
) ||

1390 
Àn
 < ((
size_t
)1 << (
size
 * 
NB
)),

1391 
¨g
, "stringÜength doesÇot fit in given size");

1392 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
Àn
, 
h
.
i¶ôée
, 
size
, 0);

1393 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1394 
tŸÆsize
 +
Àn
;

1397 
Kz°r
: {

1398 
size_t
 
Àn
;

1399 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1400 
	`luaL_¨gcheck
(
L
, 
	`°æí
(
s
Ë=
Àn
, 
¨g
, "string contains zeros");

1401 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1402 
	`luaL_addch¨
(&
b
, '\0');

1403 
tŸÆsize
 +
Àn
 + 1;

1406 
K∑ddög
: 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1407 
K∑ddÆign
: 
Kn›
:

1408 
¨g
--;

1412 
	`luaL_pushªsu…
(&
b
);

1414 
	}
}

1417 
	$°r_∑cksize
 (
lua_Sèã
 *
L
) {

1418 
Hódî
 
h
;

1419 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1420 
size_t
 
tŸÆsize
 = 0;

1421 
	`öôhódî
(
L
, &
h
);

1422 *
fmt
 != '\0') {

1423 
size
, 
¡ﬂlign
;

1424 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1425 
size
 +
¡ﬂlign
;

1426 
	`luaL_¨gcheck
(
L
, 
tŸÆsize
 <
MAXSIZE
 - 
size
, 1,

1428 
tŸÆsize
 +
size
;

1429 
›t
) {

1430 
K°rög
:

1431 
Kz°r
:

1432 
	`luaL_¨gîr‹
(
L
, 1, "variable-length format");

1437 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
tŸÆsize
);

1439 
	}
}

1450 
lua_I¡egî
 
	$u≈acköt
 (
lua_Sèã
 *
L
, c⁄° *
°r
,

1451 
i¶ôée
, 
size
, 
issig√d
) {

1452 
lua_Unsig√d
 
ªs
 = 0;

1453 
i
;

1454 
limô
 = (
size
 <
SZINT
) ? size : SZINT;

1455 
i
 = 
limô
 - 1; i >= 0; i--) {

1456 
ªs
 <<
NB
;

1457 
ªs
 |(
lua_Unsig√d
)()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i];

1459 i‡(
size
 < 
SZINT
) {

1460 i‡(
issig√d
) {

1461 
lua_Unsig√d
 
mask
 = (lua_Unsig√d)1 << (
size
*
NB
 - 1);

1462 
ªs
 = (‘e†^ 
mask
) - mask);

1465 i‡(
size
 > 
SZINT
) {

1466 
mask
 = (!
issig√d
 || (
lua_I¡egî
)
ªs
 >0Ë? 0 : 
MC
;

1467 
i
 = 
limô
; i < 
size
; i++) {

1468 i‡(()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] !
mask
)

1469 
	`luaL_îr‹
(
L
, "%d-byã i¡egî d€†nŸ fô i¡ÿLu®I¡egî", 
size
);

1472  (
lua_I¡egî
)
ªs
;

1473 
	}
}

1476 
	$°r_u≈ack
 (
lua_Sèã
 *
L
) {

1477 
Hódî
 
h
;

1478 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1479 
size_t
 
ld
;

1480 c⁄° *
d©a
 = 
	`luaL_checkl°rög
(
L
, 2, &
ld
);

1481 
size_t
 
pos
 = (size_t)
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ld
) - 1;

1482 
n
 = 0;

1483 
	`luaL_¨gcheck
(
L
, 
pos
 <
ld
, 3, "initialÖosition out of string");

1484 
	`öôhódî
(
L
, &
h
);

1485 *
fmt
 != '\0') {

1486 
size
, 
¡ﬂlign
;

1487 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
pos
, &
fmt
, &
size
, &
¡ﬂlign
);

1488 i‡((
size_t
)
¡ﬂlign
 + 
size
 > ~
pos
 ||Öo†+Çtﬂlig¿+ sizê> 
ld
)

1489 
	`luaL_¨gîr‹
(
L
, 2, "data stringÅoo short");

1490 
pos
 +
¡ﬂlign
;

1492 
	`luaL_check°ack
(
L
, 2, "too manyÑesults");

1493 
n
++;

1494 
›t
) {

1495 
Köt
:

1496 
Kuöt
: {

1497 
lua_I¡egî
 
ªs
 = 
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
,

1498 (
›t
 =
Köt
));

1499 
	`lua_pushöãgî
(
L
, 
ªs
);

1502 
KÊﬂt
: {

1503 vﬁ©ûê
Fty≥s
 
u
;

1504 
lua_Numbî
 
num
;

1505 
	`c›ywôhídün
(
u
.
buff
, 
d©a
 + 
pos
, 
size
, 
h
.
i¶ôée
);

1506 i‡(
size
 =(
u
.
f
)Ë
num
 = (
lua_Numbî
)u.f;

1507 i‡(
size
 =(
u
.
d
)Ë
num
 = (
lua_Numbî
)u.d;

1508 
num
 = 
u
.
n
;

1509 
	`lua_pushnumbî
(
L
, 
num
);

1512 
Kch¨
: {

1513 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
size
);

1516 
K°rög
: {

1517 
size_t
 
Àn
 = (size_t)
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
, 0);

1518 
	`luaL_¨gcheck
(
L
, 
pos
 + 
Àn
 + 
size
 <
ld
, 2, "data stringÅoo short");

1519 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
 + 
size
, 
Àn
);

1520 
pos
 +
Àn
;

1523 
Kz°r
: {

1524 
size_t
 
Àn
 = ()
	`°æí
(
d©a
 + 
pos
);

1525 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
Àn
);

1526 
pos
 +
Àn
 + 1;

1529 
K∑ddÆign
: 
K∑ddög
: 
Kn›
:

1530 
n
--;

1533 
pos
 +
size
;

1535 
	`lua_pushöãgî
(
L
, 
pos
 + 1);

1536  
n
 + 1;

1537 
	}
}

1542 c⁄° 
luaL_Reg
 
	g°æib
[] = {

1543 {"byã", 
°r_byã
},

1544 {"ch¨", 
°r_ch¨
},

1545 {"dump", 
°r_dump
},

1546 {"föd", 
°r_föd
},

1547 {"f‹m©", 
°r_f‹m©
},

1548 {"gm©ch", 
gm©ch
},

1549 {"gsub", 
°r_gsub
},

1550 {"Àn", 
°r_Àn
},

1551 {"lowî", 
°r_lowî
},

1552 {"m©ch", 
°r_m©ch
},

1553 {"ªp", 
°r_ªp
},

1554 {"ªvî£", 
°r_ªvî£
},

1555 {"sub", 
°r_sub
},

1556 {"uµî", 
°r_uµî
},

1557 {"∑ck", 
°r_∑ck
},

1558 {"∑cksize", 
°r_∑cksize
},

1559 {"u≈ack", 
°r_u≈ack
},

1560 {
NULL
, NULL}

1564 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1565 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1566 
	`lua_pushlôîÆ
(
L
, "");

1567 
	`lua_pushvÆue
(
L
, -2);

1568 
	`lua_£tmë©abÀ
(
L
, -2);

1569 
	`lua_p›
(
L
, 1);

1570 
	`lua_pushvÆue
(
L
, -2);

1571 
	`lua_£tfõld
(
L
, -2, "__index");

1572 
	`lua_p›
(
L
, 1);

1573 
	}
}

1579 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1580 
	`luaL_√wlib
(
L
, 
°æib
);

1581 
	`¸óãmë©abÀ
(
L
);

1583 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ltable.c

7 
	#…abÀ_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

26 
	~<m©h.h
>

27 
	~<limôs.h
>

29 
	~"lua.h
"

31 
	~"ldebug.h
"

32 
	~"ldo.h
"

33 
	~"lgc.h
"

34 
	~"lmem.h
"

35 
	~"lobje˘.h
"

36 
	~"l°©e.h
"

37 
	~"l°rög.h
"

38 
	~"…abÀ.h
"

39 
	~"lvm.h
"

46 
	#MAXABITS
 
	`ˇ°_öt
((Ë* 
CHAR_BIT
 - 1)

	)

47 
	#MAXASIZE
 (1u << 
MAXABITS
)

	)

55 
	#MAXHBITS
 (
MAXABITS
 - 1)

	)

58 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

60 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
hash
)

	)

61 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

62 
	#hashöt
(
t
,
i
Ë
	`hashpow2
—, i)

	)

69 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

72 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`poöt2uöt
’))

	)

75 
	#dummynode
 (&
dummynode_
)

	)

77 c⁄° 
Node
 
	gdummynode_
 = {

78 {
NILCONSTANT
},

79 {{
NILCONSTANT
, 0}}

96 #i‡!
deföed
(
l_hashÊﬂt
)

97 
	$l_hashÊﬂt
 (
lua_Numbî
 
n
) {

98 
i
;

99 
lua_I¡egî
 
ni
;

100 
n
 = 
	`l_m©h›
(
‰exp
)“, &
i
Ë* -
	`ˇ°_num
(
INT_MIN
);

101 i‡(!
	`lua_numbîtoöãgî
(
n
, &
ni
)) {

102 
	`lua_as£π
(
	`luai_numi¢™
(
n
Ë|| 
	`l_m©h›
(
Ábs
)“Ë=
	`ˇ°_num
(
HUGE_VAL
));

106 
u
 = 
	`ˇ°
(, 
i
Ë+ ca°(, 
ni
);

107  
	`ˇ°_öt
(
u
 <
	`ˇ°
(, 
INT_MAX
) ? u : ~u);

109 
	}
}

117 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

118 
	`ây≥
(
key
)) {

119 
LUA_TNUMINT
:

120  
	`hashöt
(
t
, 
	`ivÆue
(
key
));

121 
LUA_TNUMFLT
:

122  
	`hashmod
(
t
, 
	`l_hashÊﬂt
(
	`ÊtvÆue
(
key
)));

123 
LUA_TSHRSTR
:

124  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

125 
LUA_TLNGSTR
:

126  
	`hashpow2
(
t
, 
	`luaS_hashl⁄g°r
(
	`tsvÆue
(
key
)));

127 
LUA_TBOOLEAN
:

128  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

129 
LUA_TLIGHTUSERDATA
:

130  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

131 
LUA_TLCF
:

132  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

134 
	`lua_as£π
(!
	`âisdódkey
(
key
));

135  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

137 
	}
}

144 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

145 i‡(
	`âisöãgî
(
key
)) {

146 
lua_I¡egî
 
k
 = 
	`ivÆue
(
key
);

147 i‡(0 < 
k
 && (
lua_Unsig√d
)k <
MAXASIZE
)

148  
	`ˇ°
(, 
k
);

151 
	}
}

159 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

160 
i
;

161 i‡(
	`âi¢û
(
key
))  0;

162 
i
 = 
	`¨øyödex
(
key
);

163 i‡(
i
 !0 && i <
t
->
sizóºay
)

164  
i
;

166 
nx
;

167 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

170 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

171 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

172 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

173 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

175  (
i
 + 1Ë+ 
t
->
sizóºay
;

177 
nx
 = 
	`g√xt
(
n
);

178 i‡(
nx
 == 0)

179 
	`luaG_ru√º‹
(
L
, "invalid keyÅo 'next'");

180 
n
 +
nx
;

183 
	}
}

186 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

187 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

188 ; 
i
 < 
t
->
sizóºay
; i++) {

189 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

190 
	`£tivÆue
(
key
, 
i
 + 1);

191 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

195 
i
 -
t
->
sizóºay
; 
	`ˇ°_öt
(iË< 
	`sizíode
(t); i++) {

196 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

197 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

198 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

203 
	}
}

219 
	$compuãsizes
 (
nums
[], *
≤a
) {

220 
i
;

221 
twŸoi
;

222 
a
 = 0;

223 
«
 = 0;

224 
›timÆ
 = 0;

226 
i
 = 0, 
twŸoi
 = 1;

227 
twŸoi
 > 0 && *
≤a
 >Åwotoi / 2;

228 
i
++, 
twŸoi
 *= 2) {

229 i‡(
nums
[
i
] > 0) {

230 
a
 +
nums
[
i
];

231 i‡(
a
 > 
twŸoi
/2) {

232 
›timÆ
 = 
twŸoi
;

233 
«
 = 
a
;

237 
	`lua_as£π
((
›timÆ
 =0 || o±imÆ / 2 < 
«
) &&Ça <= optimal);

238 *
≤a
 = 
«
;

239  
›timÆ
;

240 
	}
}

243 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

244 
k
 = 
	`¨øyödex
(
key
);

245 i‡(
k
 != 0) {

246 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

251 
	}
}

259 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

260 
lg
;

261 
âlg
;

262 
au£
 = 0;

263 
i
 = 1;

265 
lg
 = 0, 
âlg
 = 1;Üg <
MAXABITS
;Üg++,Åtlg *= 2) {

266 
lc
 = 0;

267 
lim
 = 
âlg
;

268 i‡(
lim
 > 
t
->
sizóºay
) {

269 
lim
 = 
t
->
sizóºay
;

270 i‡(
i
 > 
lim
)

274 ; 
i
 <
lim
; i++) {

275 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

276 
lc
++;

278 
nums
[
lg
] +
lc
;

279 
au£
 +
lc
;

281  
au£
;

282 
	}
}

285 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
, *
≤a
) {

286 
tŸÆu£
 = 0;

287 
au£
 = 0;

288 
i
 = 
	`sizíode
(
t
);

289 
i
--) {

290 
Node
 *
n
 = &
t
->
node
[
i
];

291 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

292 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

293 
tŸÆu£
++;

296 *
≤a
 +
au£
;

297  
tŸÆu£
;

298 
	}
}

301 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

302 
i
;

303 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

304 
i
=
t
->
sizóºay
; i<
size
; i++)

305 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

306 
t
->
sizóºay
 = 
size
;

307 
	}
}

310 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

311 i‡(
size
 == 0) {

312 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

313 
t
->
lsizíode
 = 0;

314 
t
->
œ°‰ì
 = 
NULL
;

317 
i
;

318 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

319 i‡(
lsize
 > 
MAXHBITS
)

320 
	`luaG_ru√º‹
(
L
, "table overflow");

321 
size
 = 
	`twŸo
(
lsize
);

322 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

323 
i
 = 0; i < ()
size
; i++) {

324 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

325 
	`g√xt
(
n
) = 0;

326 
	`£äûvÆue
(
	`wgkey
(
n
));

327 
	`£äûvÆue
(
	`gvÆ
(
n
));

329 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

330 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

332 
	}
}

336 
TabÀ
 *
	mt
;

337 
	mnhsize
;

338 } 
	tAux£äodeT
;

341 
	$aux£äode
 (
lua_Sèã
 *
L
, *
ud
) {

342 
Aux£äodeT
 *
a¢
 = 
	`ˇ°
(Aux£äodeT *, 
ud
);

343 
	`£äodeve˘‹
(
L
, 
a¢
->
t
,á¢->
nhsize
);

344 
	}
}

347 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

348 
nhsize
) {

349 
i
;

350 
j
;

351 
Aux£äodeT
 
a¢
;

352 
ﬁdasize
 = 
t
->
sizóºay
;

353 
ﬁdhsize
 = 
	`Ælocsizíode
(
t
);

354 
Node
 *
nﬁd
 = 
t
->
node
;

355 i‡(
«size
 > 
ﬁdasize
)

356 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

358 
a¢
.
t
 =Å;á¢.
nhsize
 =Çhsize;

359 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
aux£äode
, &
a¢
Ë!
LUA_OK
) {

360 
	`£èºayve˘‹
(
L
, 
t
, 
ﬁdasize
);

361 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

363 i‡(
«size
 < 
ﬁdasize
) {

364 
t
->
sizóºay
 = 
«size
;

366 
i
=
«size
; i<
ﬁdasize
; i++) {

367 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

368 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

371 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

374 
j
 = 
ﬁdhsize
 - 1; j >= 0; j--) {

375 
Node
 *
ﬁd
 = 
nﬁd
 + 
j
;

376 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

379 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

382 i‡(
ﬁdhsize
 > 0)

383 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
ﬁdhsize
));

384 
	}
}

387 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

388 
nsize
 = 
	`Ælocsizíode
(
t
);

389 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

390 
	}
}

395 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

396 
asize
;

397 
«
;

398 
nums
[
MAXABITS
 + 1];

399 
i
;

400 
tŸÆu£
;

401 
i
 = 0; i <
MAXABITS
; i++Ë
nums
[i] = 0;

402 
«
 = 
	`numu£¨øy
(
t
, 
nums
);

403 
tŸÆu£
 = 
«
;

404 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«
);

406 
«
 +
	`cou¡öt
(
ek
, 
nums
);

407 
tŸÆu£
++;

409 
asize
 = 
	`compuãsizes
(
nums
, &
«
);

411 
	`luaH_ªsize
(
L
, 
t
, 
asize
, 
tŸÆu£
 - 
«
);

412 
	}
}

421 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

422 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (
TabÀ
));

423 
TabÀ
 *
t
 = 
	`gco2t
(
o
);

424 
t
->
më©abÀ
 = 
NULL
;

425 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

426 
t
->
¨øy
 = 
NULL
;

427 
t
->
sizóºay
 = 0;

428 
	`£äodeve˘‹
(
L
, 
t
, 0);

429  
t
;

430 
	}
}

433 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

434 i‡(!
	`isdummy
(
t
))

435 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

436 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

437 
	`luaM_‰ì
(
L
, 
t
);

438 
	}
}

441 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

442 i‡(!
	`isdummy
(
t
)) {

443 
t
->
œ°‰ì
 >Å->
node
) {

444 
t
->
œ°‰ì
--;

445 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

446  
t
->
œ°‰ì
;

449  
NULL
;

450 
	}
}

461 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

462 
Node
 *
mp
;

463 
TVÆue
 
aux
;

464 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

465 i‡(
	`âisÊﬂt
(
key
)) {

466 
lua_I¡egî
 
k
;

467 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0)) {

468 
	`£tivÆue
(&
aux
, 
k
);

469 
key
 = &
aux
;

471 i‡(
	`luai_numi¢™
(
	`ÊtvÆue
(
key
)))

472 
	`luaG_ru√º‹
(
L
, "table index is NaN");

474 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

475 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(
t
)) {

476 
Node
 *
Ÿhîn
;

477 
Node
 *
f
 = 
	`gë‰ìpos
(
t
);

478 i‡(
f
 =
NULL
) {

479 
	`ªhash
(
L
, 
t
, 
key
);

481  
	`luaH_£t
(
L
, 
t
, 
key
);

483 
	`lua_as£π
(!
	`isdummy
(
t
));

484 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

485 i‡(
Ÿhîn
 !
mp
) {

487 
Ÿhîn
 + 
	`g√xt
(ŸhînË!
mp
)

488 
Ÿhîn
 +
	`g√xt
(othern);

489 
	`g√xt
(
Ÿhîn
Ë
	`ˇ°_öt
(
f
 - othern);

490 *
f
 = *
mp
;

491 i‡(
	`g√xt
(
mp
) != 0) {

492 
	`g√xt
(
f
Ë+
	`ˇ°_öt
(
mp
 - f);

493 
	`g√xt
(
mp
) = 0;

495 
	`£äûvÆue
(
	`gvÆ
(
mp
));

499 i‡(
	`g√xt
(
mp
) != 0)

500 
	`g√xt
(
f
Ë
	`ˇ°_öt
((
mp
 + gnext(mp)) - f);

501 
	`lua_as£π
(
	`g√xt
(
f
) == 0);

502 
	`g√xt
(
mp
Ë
	`ˇ°_öt
(
f
 - mp);

503 
mp
 = 
f
;

506 
	`£äodekey
(
L
, &
mp
->
i_key
, 
key
);

507 
	`luaC_b¨rõrback
(
L
, 
t
, 
key
);

508 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

509  
	`gvÆ
(
mp
);

510 
	}
}

516 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
) {

518 i‡(
	`l_ˇ°S2U
(
key
Ë- 1 < 
t
->
sizóºay
)

519  &
t
->
¨øy
[
key
 - 1];

521 
Node
 *
n
 = 
	`hashöt
(
t
, 
key
);

523 i‡(
	`âisöãgî
(
	`gkey
(
n
)Ë&& 
	`ivÆue
(gkey“)Ë=
key
)

524  
	`gvÆ
(
n
);

526 
nx
 = 
	`g√xt
(
n
);

527 i‡(
nx
 == 0) ;

528 
n
 +
nx
;

531  
luaO_nûobje˘
;

533 
	}
}

539 c⁄° 
TVÆue
 *
	$luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

540 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

541 
	`lua_as£π
(
key
->
â
 =
LUA_TSHRSTR
);

543 c⁄° 
TVÆue
 *
k
 = 
	`gkey
(
n
);

544 i‡(
	`âisshr°rög
(
k
Ë&& 
	`eqshr°r
(
	`tsvÆue
(k), 
key
))

545  
	`gvÆ
(
n
);

547 
nx
 = 
	`g√xt
(
n
);

548 i‡(
nx
 == 0)

549  
luaO_nûobje˘
;

550 
n
 +
nx
;

553 
	}
}

560 c⁄° 
TVÆue
 *
	$gëgíîic
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

561 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

563 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

564  
	`gvÆ
(
n
);

566 
nx
 = 
	`g√xt
(
n
);

567 i‡(
nx
 == 0)

568  
luaO_nûobje˘
;

569 
n
 +
nx
;

572 
	}
}

575 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

576 i‡(
key
->
â
 =
LUA_TSHRSTR
)

577  
	`luaH_gësh‹t°r
(
t
, 
key
);

579 
TVÆue
 
ko
;

580 
	`£tsvÆue
(
	`ˇ°
(
lua_Sèã
 *, 
NULL
), &
ko
, 
key
);

581  
	`gëgíîic
(
t
, &
ko
);

583 
	}
}

589 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

590 
	`ây≥
(
key
)) {

591 
LUA_TSHRSTR
:  
	`luaH_gësh‹t°r
(
t
, 
	`tsvÆue
(
key
));

592 
LUA_TNUMINT
:  
	`luaH_gëöt
(
t
, 
	`ivÆue
(
key
));

593 
LUA_TNIL
:  
luaO_nûobje˘
;

594 
LUA_TNUMFLT
: {

595 
lua_I¡egî
 
k
;

596 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0))

597  
	`luaH_gëöt
(
t
, 
k
);

601  
	`gëgíîic
(
t
, 
key
);

603 
	}
}

610 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

611 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

612 i‡(
p
 !
luaO_nûobje˘
)

613  
	`ˇ°
(
TVÆue
 *, 
p
);

614  
	`luaH_√wkey
(
L
, 
t
, 
key
);

615 
	}
}

618 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
, 
TVÆue
 *
vÆue
) {

619 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

620 
TVÆue
 *
˚Œ
;

621 i‡(
p
 !
luaO_nûobje˘
)

622 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

624 
TVÆue
 
k
;

625 
	`£tivÆue
(&
k
, 
key
);

626 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

628 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

629 
	}
}

632 
lua_Unsig√d
 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
lua_Unsig√d
 
j
) {

633 
lua_Unsig√d
 
i
 = 
j
;

634 
j
++;

636 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

637 
i
 = 
j
;

638 i‡(
j
 > 
	`l_ˇ°S2U
(
LUA_MAXINTEGER
) / 2) {

640 
i
 = 1;

641 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

642  
i
 - 1;

644 
j
 *= 2;

647 
j
 - 
i
 > 1) {

648 
lua_Unsig√d
 
m
 = (
i
+
j
)/2;

649 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

650 
i
 = 
m
;

652  
i
;

653 
	}
}

660 
lua_Unsig√d
 
	$luaH_gën
 (
TabÀ
 *
t
) {

661 
j
 = 
t
->
sizóºay
;

662 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

664 
i
 = 0;

665 
j
 - 
i
 > 1) {

666 
m
 = (
i
+
j
)/2;

667 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

668 
i
 = 
m
;

670  
i
;

673 i‡(
	`isdummy
(
t
))

674  
j
;

675  
	`unbound_£¨ch
(
t
, 
j
);

676 
	}
}

680 #i‡
deföed
(
LUA_DEBUG
)

682 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

683  
	`maöposôi⁄
(
t
, 
key
);

684 
	}
}

686 
	$luaH_isdummy
 (c⁄° 
TabÀ
 *
t
Ë{  
	`isdummy
—); 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ltable.h

7 #i‚de‡
…abÀ_h


8 
	#…abÀ_h


	)

10 
	~"lobje˘.h
"

13 
	#gnode
(
t
,
i
Ë(&—)->
node
[i])

	)

14 
	#gvÆ
(
n
Ë(&“)->
i_vÆ
)

	)

15 
	#g√xt
(
n
Ë(“)->
i_key
.
nk
.
√xt
)

	)

19 
	#gkey
(
n
Ë
	`ˇ°
(c⁄° 
TVÆue
*, (&“)->
i_key
.
tvk
))

	)

25 
	#wgkey
(
n
Ë(&“)->
i_key
.
nk
)

	)

27 
	#övÆid©eTMˇche
(
t
Ë(—)->
Êags
 = 0)

	)

31 
	#isdummy
(
t
Ë(—)->
œ°‰ì
 =
NULL
)

	)

35 
	#Ælocsizíode
(
t
Ë(
	`isdummy
—Ë? 0 : 
	`sizíode
—))

	)

39 
	#key‰omvÆ
(
v
) \

40 (
	`gkey
(
	`ˇ°
(
Node
 *, ca°(*, (
v
)Ë- 
	`off£tof
(Node, 
i_vÆ
))))

	)

43 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
);

44 
LUAI_FUNC
 
luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
,

45 
TVÆue
 *
vÆue
);

46 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

47 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

48 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë
 (
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

49 
LUAI_FUNC
 
TVÆue
 *
luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

50 
LUAI_FUNC
 
TVÆue
 *
luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

51 
LUAI_FUNC
 
TabÀ
 *
luaH_√w
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

53 
nhsize
);

54 
LUAI_FUNC
 
luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
);

55 
LUAI_FUNC
 
luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
);

56 
LUAI_FUNC
 
luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
);

57 
LUAI_FUNC
 
lua_Unsig√d
 
luaH_gën
 (
TabÀ
 *
t
);

60 #i‡
deföed
(
LUA_DEBUG
)

61 
LUAI_FUNC
 
Node
 *
luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
);

62 
LUAI_FUNC
 
luaH_isdummy
 (c⁄° 
TabÀ
 *
t
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/ltablib.c

7 
	#…ablib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 
	#TAB_R
 1

	)

28 
	#TAB_W
 2

	)

29 
	#TAB_L
 4

	)

30 
	#TAB_RW
 (
TAB_R
 | 
TAB_W
Ë

	)

33 
	#aux_gën
(
L
,
n
,
w
Ë(
	`checkèb
(L,Ç, (wË| 
TAB_L
), 
	`luaL_Àn
(L,Ç))

	)

36 
	$checkfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
n
) {

37 
	`lua_push°rög
(
L
, 
key
);

38  (
	`lua_øwgë
(
L
, -
n
Ë!
LUA_TNIL
);

39 
	}
}

46 
	$checkèb
 (
lua_Sèã
 *
L
, 
¨g
, 
wh©
) {

47 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
LUA_TTABLE
) {

48 
n
 = 1;

49 i‡(
	`lua_gëmë©abÀ
(
L
, 
¨g
) &&

50 (!(
wh©
 & 
TAB_R
Ë|| 
	`checkfõld
(
L
, "__ödex", ++
n
)) &&

51 (!(
wh©
 & 
TAB_W
Ë|| 
	`checkfõld
(
L
, "__√wödex", ++
n
)) &&

52 (!(
wh©
 & 
TAB_L
Ë|| 
	`checkfõld
(
L
, "__Àn", ++
n
))) {

53 
	`lua_p›
(
L
, 
n
);

56 
	`luaL_checkty≥
(
L
, 
¨g
, 
LUA_TTABLE
);

58 
	}
}

61 #i‡
deföed
(
LUA_COMPAT_MAXN
)

62 
	$maxn
 (
lua_Sèã
 *
L
) {

63 
lua_Numbî
 
max
 = 0;

64 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

65 
	`lua_pushnû
(
L
);

66 
	`lua_√xt
(
L
, 1)) {

67 
	`lua_p›
(
L
, 1);

68 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

69 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

70 i‡(
v
 > 
max
) max = v;

73 
	`lua_pushnumbî
(
L
, 
max
);

75 
	}
}

79 
	$tö£π
 (
lua_Sèã
 *
L
) {

80 
lua_I¡egî
 
e
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
) + 1;

81 
lua_I¡egî
 
pos
;

82 
	`lua_gët›
(
L
)) {

84 
pos
 = 
e
;

88 
lua_I¡egî
 
i
;

89 
pos
 = 
	`luaL_checköãgî
(
L
, 2);

90 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

91 
i
 = 
e
; i > 
pos
; i--) {

92 
	`lua_gëi
(
L
, 1, 
i
 - 1);

93 
	`lua_£ti
(
L
, 1, 
i
);

98  
	`luaL_îr‹
(
L
, "wrongÇumber ofárgumentsÅo 'insert'");

101 
	`lua_£ti
(
L
, 1, 
pos
);

103 
	}
}

106 
	$åemove
 (
lua_Sèã
 *
L
) {

107 
lua_I¡egî
 
size
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

108 
lua_I¡egî
 
pos
 = 
	`luaL_›töãgî
(
L
, 2, 
size
);

109 i‡(
pos
 !
size
)

110 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

111 
	`lua_gëi
(
L
, 1, 
pos
);

112  ; 
pos
 < 
size
;Öos++) {

113 
	`lua_gëi
(
L
, 1, 
pos
 + 1);

114 
	`lua_£ti
(
L
, 1, 
pos
);

116 
	`lua_pushnû
(
L
);

117 
	`lua_£ti
(
L
, 1, 
pos
);

119 
	}
}

128 
	$tmove
 (
lua_Sèã
 *
L
) {

129 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 2);

130 
lua_I¡egî
 
e
 = 
	`luaL_checköãgî
(
L
, 3);

131 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 4);

132 
â
 = !
	`lua_i¢⁄e‹nû
(
L
, 5) ? 5 : 1;

133 
	`checkèb
(
L
, 1, 
TAB_R
);

134 
	`checkèb
(
L
, 
â
, 
TAB_W
);

135 i‡(
e
 >
f
) {

136 
lua_I¡egî
 
n
, 
i
;

137 
	`luaL_¨gcheck
(
L
, 
f
 > 0 || 
e
 < 
LUA_MAXINTEGER
 + f, 3,

139 
n
 = 
e
 - 
f
 + 1;

140 
	`luaL_¨gcheck
(
L
, 
t
 <
LUA_MAXINTEGER
 - 
n
 + 1, 4,

142 i‡(
t
 > 
e
 ||Å <
f
 || (
â
 !1 && !
	`lua_com∑ª
(
L
, 1,Åt, 
LUA_OPEQ
))) {

143 
i
 = 0; i < 
n
; i++) {

144 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

145 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

149 
i
 = 
n
 - 1; i >= 0; i--) {

150 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

151 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

155 
	`lua_pushvÆue
(
L
, 
â
);

157 
	}
}

160 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
lua_I¡egî
 
i
) {

161 
	`lua_gëi
(
L
, 1, 
i
);

162 i‡(!
	`lua_is°rög
(
L
, -1))

163 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for 'concat'",

164 
	`luaL_ty≥«me
(
L
, -1), 
i
);

165 
	`luaL_addvÆue
(
b
);

166 
	}
}

169 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

170 
luaL_Buf„r
 
b
;

171 
lua_I¡egî
 
œ°
 = 
	`aux_gën
(
L
, 1, 
TAB_R
);

172 
size_t
 
l£p
;

173 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

174 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 3, 1);

175 
œ°
 = 
	`luaL_›töãgî
(
L
, 4,Üast);

176 
	`luaL_bufföô
(
L
, &
b
);

177 ; 
i
 < 
œ°
; i++) {

178 
	`addfõld
(
L
, &
b
, 
i
);

179 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

181 i‡(
i
 =
œ°
)

182 
	`addfõld
(
L
, &
b
, 
i
);

183 
	`luaL_pushªsu…
(&
b
);

185 
	}
}

194 
	$∑ck
 (
lua_Sèã
 *
L
) {

195 
i
;

196 
n
 = 
	`lua_gët›
(
L
);

197 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

198 
	`lua_ö£π
(
L
, 1);

199 
i
 = 
n
; i >= 1; i--)

200 
	`lua_£ti
(
L
, 1, 
i
);

201 
	`lua_pushöãgî
(
L
, 
n
);

202 
	`lua_£tfõld
(
L
, 1, "n");

204 
	}
}

207 
	$u≈ack
 (
lua_Sèã
 *
L
) {

208 
lua_Unsig√d
 
n
;

209 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 2, 1);

210 
lua_I¡egî
 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 3, 
	`luaL_Àn
(L, 1));

211 i‡(
i
 > 
e
)  0;

212 
n
 = (
lua_Unsig√d
)
e
 - 
i
;

213 i‡(
n
 >()
INT_MAX
 || !
	`lua_check°ack
(
L
, ()(++n)))

214  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

215 ; 
i
 < 
e
; i++) {

216 
	`lua_gëi
(
L
, 1, 
i
);

218 
	`lua_gëi
(
L
, 1, 
e
);

219  ()
n
;

220 
	}
}

236 
	tIdxT
;

245 #i‡!
deföed
(
l_øndomizePivŸ
)

247 
	~<time.h
>

250 
	#sof
(
e
Ë(”Ë/ ())

	)

258 
	$l_øndomizePivŸ
 () {

259 
˛ock_t
 
c
 = 
	`˛ock
();

260 
time_t
 
t
 = 
	`time
(
NULL
);

261 
buff
[
	`sof
(
c
Ë+ sof(
t
)];

262 
i
, 
∫d
 = 0;

263 
	`mem˝y
(
buff
, &
c
, 
	`sof
(c) * ());

264 
	`mem˝y
(
buff
 + 
	`sof
(
c
), &
t
, sof(t) * ());

265 
i
 = 0; i < 
	`sof
(
buff
); i++)

266 
∫d
 +
buff
[
i
];

267  
∫d
;

268 
	}
}

274 
	#RANLIMIT
 100u

	)

277 
	$£t2
 (
lua_Sèã
 *
L
, 
IdxT
 
i
, IdxT 
j
) {

278 
	`lua_£ti
(
L
, 1, 
i
);

279 
	`lua_£ti
(
L
, 1, 
j
);

280 
	}
}

287 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

288 i‡(
	`lua_i¢û
(
L
, 2))

289  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

291 
ªs
;

292 
	`lua_pushvÆue
(
L
, 2);

293 
	`lua_pushvÆue
(
L
, 
a
-1);

294 
	`lua_pushvÆue
(
L
, 
b
-2);

295 
	`lua_ˇŒ
(
L
, 2, 1);

296 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

297 
	`lua_p›
(
L
, 1);

298  
ªs
;

300 
	}
}

310 
IdxT
 
	$∑πôi⁄
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
) {

311 
IdxT
 
i
 = 
lo
;

312 
IdxT
 
j
 = 
up
 - 1;

316 
	`lua_gëi
(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

317 i‡(
i
 =
up
 - 1)

318 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

319 
	`lua_p›
(
L
, 1);

323 
	`lua_gëi
(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

324 i‡(
j
 < 
i
)

325 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

326 
	`lua_p›
(
L
, 1);

329 i‡(
j
 < 
i
) {

331 
	`lua_p›
(
L
, 1);

333 
	`£t2
(
L
, 
up
 - 1, 
i
);

334  
i
;

337 
	`£t2
(
L
, 
i
, 
j
);

339 
	}
}

346 
IdxT
 
	$choo£PivŸ
 (
IdxT
 
lo
, IdxT 
up
, 
∫d
) {

347 
IdxT
 
r4
 = (
up
 - 
lo
) / 4;

348 
IdxT
 
p
 = 
∫d
 % (
r4
 * 2Ë+ (
lo
 +Ñ4);

349 
	`lua_as£π
(
lo
 + 
r4
 <
p
 &&Ö <
up
 -Ñ4);

350  
p
;

351 
	}
}

357 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
,

358 
∫d
) {

359 
lo
 < 
up
) {

360 
IdxT
 
p
;

361 
IdxT
 
n
;

363 
	`lua_gëi
(
L
, 1, 
lo
);

364 
	`lua_gëi
(
L
, 1, 
up
);

365 i‡(
	`s‹t_comp
(
L
, -1, -2))

366 
	`£t2
(
L
, 
lo
, 
up
);

368 
	`lua_p›
(
L
, 2);

369 i‡(
up
 - 
lo
 == 1)

371 i‡(
up
 - 
lo
 < 
RANLIMIT
 || 
∫d
 == 0)

372 
p
 = (
lo
 + 
up
)/2;

374 
p
 = 
	`choo£PivŸ
(
lo
, 
up
, 
∫d
);

375 
	`lua_gëi
(
L
, 1, 
p
);

376 
	`lua_gëi
(
L
, 1, 
lo
);

377 i‡(
	`s‹t_comp
(
L
, -2, -1))

378 
	`£t2
(
L
, 
p
, 
lo
);

380 
	`lua_p›
(
L
, 1);

381 
	`lua_gëi
(
L
, 1, 
up
);

382 i‡(
	`s‹t_comp
(
L
, -1, -2))

383 
	`£t2
(
L
, 
p
, 
up
);

385 
	`lua_p›
(
L
, 2);

387 i‡(
up
 - 
lo
 == 2)

389 
	`lua_gëi
(
L
, 1, 
p
);

390 
	`lua_pushvÆue
(
L
, -1);

391 
	`lua_gëi
(
L
, 1, 
up
 - 1);

392 
	`£t2
(
L
, 
p
, 
up
 - 1);

393 
p
 = 
	`∑πôi⁄
(
L
, 
lo
, 
up
);

395 i‡(
p
 - 
lo
 < 
up
 -Ö) {

396 
	`auxs‹t
(
L
, 
lo
, 
p
 - 1, 
∫d
);

397 
n
 = 
p
 - 
lo
;

398 
lo
 = 
p
 + 1;

401 
	`auxs‹t
(
L
, 
p
 + 1, 
up
, 
∫d
);

402 
n
 = 
up
 - 
p
;

403 
up
 = 
p
 - 1;

405 i‡((
up
 - 
lo
Ë/ 128 > 
n
)

406 
∫d
 = 
	`l_øndomizePivŸ
();

408 
	}
}

411 
	$s‹t
 (
lua_Sèã
 *
L
) {

412 
lua_I¡egî
 
n
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

413 i‡(
n
 > 1) {

414 
	`luaL_¨gcheck
(
L
, 
n
 < 
INT_MAX
, 1, "arrayÅoo big");

415 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

416 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

417 
	`lua_£â›
(
L
, 2);

418 
	`auxs‹t
(
L
, 1, (
IdxT
)
n
, 0);

421 
	}
}

426 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

427 {"c⁄ˇt", 
tc⁄ˇt
},

428 #i‡
deföed
(
LUA_COMPAT_MAXN
)

429 {"maxn", 
maxn
},

431 {"ö£π", 
tö£π
},

432 {"∑ck", 
∑ck
},

433 {"u≈ack", 
u≈ack
},

434 {"ªmove", 
åemove
},

435 {"move", 
tmove
},

436 {"s‹t", 
s‹t
},

437 {
NULL
, NULL}

441 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

442 
	`luaL_√wlib
(
L
, 
èb_funcs
);

443 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

445 
	`lua_gëfõld
(
L
, -1, "unpack");

446 
	`lua_£tglobÆ
(
L
, "unpack");

449 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ltm.c

7 
	#…m_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lobje˘.h
"

20 
	~"l°©e.h
"

21 
	~"l°rög.h
"

22 
	~"…abÀ.h
"

23 
	~"…m.h
"

24 
	~"lvm.h
"

27 c⁄° 
	gud©©y≥«me
[] = "userdata";

29 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

31 "nû", "boﬁón", 
ud©©y≥«me
, "number",

32 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

37 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

38 c⁄° *c⁄° 
luaT_evíäame
[] = {

47 
i
;

48 
i
=0; i<
TM_N
; i++) {

49 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

50 
	`luaC_fix
(
L
, 
	`obj2gco
(
	`G
(L)->
tm«me
[
i
]));

52 
	}
}

59 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

60 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gësh‹t°r
(
evíts
, 
íame
);

61 
	`lua_as£π
(
evít
 <
TM_EQ
);

62 i‡(
	`âi¢û
(
tm
)) {

63 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

64  
NULL
;

66  
tm
;

67 
	}
}

70 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

71 
TabÀ
 *
mt
;

72 
	`ânov
(
o
)) {

73 
LUA_TTABLE
:

74 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

76 
LUA_TUSERDATA
:

77 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

80 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
o
)];

82  (
mt
 ? 
	`luaH_gësh‹t°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

83 
	}
}

90 c⁄° *
	$luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

91 
TabÀ
 *
mt
;

92 i‡((
	`âi°abÀ
(
o
Ë&& (
mt
 = 
	`hvÆue
(o)->
më©abÀ
Ë!
NULL
) ||

93 (
	`âisfuŒu£rd©a
(
o
Ë&& (
mt
 = 
	`uvÆue
(o)->
më©abÀ
Ë!
NULL
)) {

94 c⁄° 
TVÆue
 *
«me
 = 
	`luaH_gësh‹t°r
(
mt
, 
	`luaS_√w
(
L
, "__name"));

95 i‡(
	`âis°rög
(
«me
))

96  
	`gë°r
(
	`tsvÆue
(
«me
));

98  
	`ây≥«me
(
	`ânov
(
o
));

99 
	}
}

102 
	$luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

103 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

104 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

105 
StkId
 
func
 = 
L
->
t›
;

106 
	`£tobj2s
(
L
, 
func
, 
f
);

107 
	`£tobj2s
(
L
, 
func
 + 1, 
p1
);

108 
	`£tobj2s
(
L
, 
func
 + 2, 
p2
);

109 
L
->
t›
 += 3;

110 i‡(!
ha§es
)

111 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

113 i‡(
	`isLua
(
L
->
ci
))

114 
	`luaD_ˇŒ
(
L
, 
func
, 
ha§es
);

116 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ha§es
);

117 i‡(
ha§es
) {

118 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

119 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

121 
	}
}

124 
	$luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

125 
StkId
 
ªs
, 
TMS
 
evít
) {

126 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

127 i‡(
	`âi¢û
(
tm
))

128 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

129 i‡(
	`âi¢û
(
tm
))  0;

130 
	`luaT_ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

132 
	}
}

135 
	$luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

136 
StkId
 
ªs
, 
TMS
 
evít
) {

137 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
evít
)) {

138 
evít
) {

139 
TM_CONCAT
:

140 
	`luaG_c⁄ˇãº‹
(
L
, 
p1
, 
p2
);

142 
TM_BAND
: 
TM_BOR
: 
TM_BXOR
:

143 
TM_SHL
: 
TM_SHR
: 
TM_BNOT
: {

144 
lua_Numbî
 
dummy
;

145 i‡(
	`t⁄umbî
(
p1
, &
dummy
Ë&&Å⁄umbî(
p2
, &dummy))

146 
	`luaG_toöãº‹
(
L
, 
p1
, 
p2
);

148 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "perform bitwise operation on");

152 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "performárithmetic on");

155 
	}
}

158 
	$luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

159 
TMS
 
evít
) {

160 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

163  !
	`l_isÁl£
(
L
->
t›
);

164 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/ltm.h

7 #i‚de‡
…m_h


8 
	#…m_h


	)

11 
	~"lobje˘.h
"

19 
	mTM_INDEX
,

20 
	mTM_NEWINDEX
,

21 
	mTM_GC
,

22 
	mTM_MODE
,

23 
	mTM_LEN
,

24 
	mTM_EQ
,

25 
	mTM_ADD
,

26 
	mTM_SUB
,

27 
	mTM_MUL
,

28 
	mTM_MOD
,

29 
	mTM_POW
,

30 
	mTM_DIV
,

31 
	mTM_IDIV
,

32 
	mTM_BAND
,

33 
	mTM_BOR
,

34 
	mTM_BXOR
,

35 
	mTM_SHL
,

36 
	mTM_SHR
,

37 
	mTM_UNM
,

38 
	mTM_BNOT
,

39 
	mTM_LT
,

40 
	mTM_LE
,

41 
	mTM_CONCAT
,

42 
	mTM_CALL
,

43 
	mTM_N


44 } 
	tTMS
;

48 
	#gÁ°tm
(
g
,
ë
,
e
Ë(”tË=
NULL
 ? NULL : \

49 ((
ë
)->
Êags
 & (1u<<(
e
))Ë? 
NULL
 : 
	`luaT_gëtm
”t,É, (
g
)->
tm«me
[e]))

	)

51 
	#Á°tm
(
l
,
ë
,
e
Ë
	`gÁ°tm
(
	`G
÷),Ét,É)

	)

53 
	#ây≥«me
(
x
Ë
luaT_ty≥«mes_
[(xË+ 1]

	)

55 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
];

58 
LUAI_FUNC
 c⁄° *
luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
);

60 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
);

61 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° TVÆuê*
o
,

62 
TMS
 
evít
);

63 
LUAI_FUNC
 
luaT_öô
 (
lua_Sèã
 *
L
);

65 
LUAI_FUNC
 
luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

66 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
);

67 
LUAI_FUNC
 
luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

68 
StkId
 
ªs
, 
TMS
 
evít
);

69 
LUAI_FUNC
 
luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

70 
StkId
 
ªs
, 
TMS
 
evít
);

71 
LUAI_FUNC
 
luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

72 c⁄° 
TVÆue
 *
p2
, 
TMS
 
evít
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lua.c

7 
	#lua_c


	)

9 
	~"Õªfix.h
"

12 
	~<sig«l.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

24 #i‡!
deföed
(
LUA_PROMPT
)

25 
	#LUA_PROMPT
 "> "

	)

26 
	#LUA_PROMPT2
 ">> "

	)

29 #i‡!
deföed
(
LUA_PROGNAME
)

30 
	#LUA_PROGNAME
 "lua"

	)

33 #i‡!
deföed
(
LUA_MAXINPUT
)

34 
	#LUA_MAXINPUT
 512

	)

37 #i‡!
deföed
(
LUA_INIT_VAR
)

38 
	#LUA_INIT_VAR
 "LUA_INIT"

	)

41 
	#LUA_INITVARVERSION
 
LUA_INIT_VAR
 
LUA_VERSUFFIX


	)

48 #i‡!
deföed
(
lua_°dö_is_ây
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	~<uni°d.h
>

53 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	~<io.h
>

58 
	~<wödows.h
>

60 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

65 
	#lua_°dö_is_ây
(Ë1

	)

78 #i‡!
deföed
(
lua_ªadlöe
)

80 #i‡
deföed
(
LUA_USE_READLINE
)

82 
	~<ªadlöe/ªadlöe.h
>

83 
	~<ªadlöe/hi°‹y.h
>

84 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

85 
	#lua_ßvñöe
(
L
,
löe
Ë(()L, 
	`add_hi°‹y
÷öe))

	)

86 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

90 
	#lua_ªadlöe
(
L
,
b
,
p
) \

91 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

92 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

93 
	#lua_ßvñöe
(
L
,
löe
Ë{ ()L; (Óöe; }

	)

94 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

103 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

105 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

111 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

112 ()
¨
;

113 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

114 
	`luaL_îr‹
(
L
, "interrupted!");

115 
	}
}

124 
	$œ˘i⁄
 (
i
) {

125 
	`sig«l
(
i
, 
SIG_DFL
);

126 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

127 
	}
}

130 
	$¥öt_ußge
 (c⁄° *
bad›ti⁄
) {

131 
	`lua_wrôe°rögîr‹
("%s: ", 
¥og«me
);

132 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

133 
	`lua_wrôe°rögîr‹
("'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

135 
	`lua_wrôe°rögîr‹
("uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

136 
	`lua_wrôe°rögîr‹
(

147 
¥og«me
);

148 
	}
}

155 
	$l_mesßge
 (c⁄° *
≤ame
, c⁄° *
msg
) {

156 i‡(
≤ame
Ë
	`lua_wrôe°rögîr‹
("%s: ",Öname);

157 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

158 
	}
}

166 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

167 i‡(
°©us
 !
LUA_OK
) {

168 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

169 
	`l_mesßge
(
¥og«me
, 
msg
);

170 
	`lua_p›
(
L
, 1);

172  
°©us
;

173 
	}
}

179 
	$msgh™dÀr
 (
lua_Sèã
 *
L
) {

180 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

181 i‡(
msg
 =
NULL
) {

182 i‡(
	`luaL_ˇŒmëa
(
L
, 1, "__tostring") &&

183 
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
)

186 
msg
 = 
	`lua_pushf°rög
(
L
, "(error object isá %s value)",

187 
	`luaL_ty≥«me
(
L
, 1));

189 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

191 
	}
}

198 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

199 
°©us
;

200 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

201 
	`lua_pushcfun˘i⁄
(
L
, 
msgh™dÀr
);

202 
	`lua_ö£π
(
L
, 
ba£
);

203 
globÆL
 = 
L
;

204 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

205 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

206 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

207 
	`lua_ªmove
(
L
, 
ba£
);

208  
°©us
;

209 
	}
}

212 
	$¥öt_vîsi⁄
 () {

213 
	`lua_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

214 
	`lua_wrôñöe
();

215 
	}
}

226 
	$¸óã¨gèbÀ
 (
lua_Sèã
 *
L
, **
¨gv
, 
¨gc
, 
s¸ùt
) {

227 
i
, 
«rg
;

228 i‡(
s¸ùt
 =
¨gc
) script = 0;

229 
«rg
 = 
¨gc
 - (
s¸ùt
 + 1);

230 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
s¸ùt
 + 1);

231 
i
 = 0; i < 
¨gc
; i++) {

232 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

233 
	`lua_øw£ti
(
L
, -2, 
i
 - 
s¸ùt
);

235 
	`lua_£tglobÆ
(
L
, "arg");

236 
	}
}

239 
	$dochunk
 (
lua_Sèã
 *
L
, 
°©us
) {

240 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

241  
	`ªp‹t
(
L
, 
°©us
);

242 
	}
}

245 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

246  
	`dochunk
(
L
, 
	`luaL_lﬂdfûe
(L, 
«me
));

247 
	}
}

250 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

251  
	`dochunk
(
L
, 
	`luaL_lﬂdbuf„r
(L, 
s
, 
	`°æí
(s), 
«me
));

252 
	}
}

259 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

260 
°©us
;

261 
	`lua_gëglobÆ
(
L
, "require");

262 
	`lua_push°rög
(
L
, 
«me
);

263 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

264 i‡(
°©us
 =
LUA_OK
)

265 
	`lua_£tglobÆ
(
L
, 
«me
);

266  
	`ªp‹t
(
L
, 
°©us
);

267 
	}
}

273 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

274 c⁄° *
p
;

275 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

276 
p
 = 
	`lua_to°rög
(
L
, -1);

277 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

278  
p
;

279 
	}
}

282 
	#EOFMARK
 "<eof>"

	)

283 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

291 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

292 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

293 
size_t
 
lmsg
;

294 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

295 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

296 
	`lua_p›
(
L
, 1);

301 
	}
}

307 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

308 
buf„r
[
LUA_MAXINPUT
];

309 *
b
 = 
buf„r
;

310 
size_t
 
l
;

311 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

312 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

313 i‡(
ªad°©us
 == 0)

315 
	`lua_p›
(
L
, 1);

316 
l
 = 
	`°æí
(
b
);

317 i‡(
l
 > 0 && 
b
[l-1] == '\n')

318 
b
[--
l
] = '\0';

319 i‡(
fú°löe
 && 
b
[0] == '=')

320 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

322 
	`lua_pushl°rög
(
L
, 
b
, 
l
);

323 
	`lua_‰ìlöe
(
L
, 
b
);

325 
	}
}

332 
	$addªtu∫
 (
lua_Sèã
 *
L
) {

333 c⁄° *
löe
 = 
	`lua_to°rög
(
L
, -1);

334 c⁄° *
ªéöe
 = 
	`lua_pushf°rög
(
L
, "ªtu∫ %s;", 
löe
);

335 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
ªéöe
, 
	`°æí
(retline), "=stdin");

336 i‡(
°©us
 =
LUA_OK
) {

337 
	`lua_ªmove
(
L
, -2);

338 i‡(
löe
[0] != '\0')

339 
	`lua_ßvñöe
(
L
, 
löe
);

342 
	`lua_p›
(
L
, 2);

343  
°©us
;

344 
	}
}

350 
	$mu…ûöe
 (
lua_Sèã
 *
L
) {

352 
size_t
 
Àn
;

353 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
Àn
);

354 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=stdin");

355 i‡(!
	`öcom∂ëe
(
L
, 
°©us
Ë|| !
	`pushlöe
(L, 0)) {

356 
	`lua_ßvñöe
(
L
, 
löe
);

357  
°©us
;

359 
	`lua_pushlôîÆ
(
L
, "\n");

360 
	`lua_ö£π
(
L
, -2);

361 
	`lua_c⁄ˇt
(
L
, 3);

363 
	}
}

372 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

373 
°©us
;

374 
	`lua_£â›
(
L
, 0);

375 i‡(!
	`pushlöe
(
L
, 1))

377 i‡((
°©us
 = 
	`addªtu∫
(
L
)Ë!
LUA_OK
)

378 
°©us
 = 
	`mu…ûöe
(
L
);

379 
	`lua_ªmove
(
L
, 1);

380 
	`lua_as£π
(
	`lua_gët›
(
L
) == 1);

381  
°©us
;

382 
	}
}

388 
	$l_¥öt
 (
lua_Sèã
 *
L
) {

389 
n
 = 
	`lua_gët›
(
L
);

390 i‡(
n
 > 0) {

391 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

392 
	`lua_gëglobÆ
(
L
, "print");

393 
	`lua_ö£π
(
L
, 1);

394 i‡(
	`lua_pˇŒ
(
L
, 
n
, 0, 0Ë!
LUA_OK
)

395 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
, "error calling 'print' (%s)",

396 
	`lua_to°rög
(
L
, -1)));

398 
	}
}

405 
	$doREPL
 (
lua_Sèã
 *
L
) {

406 
°©us
;

407 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

408 
¥og«me
 = 
NULL
;

409 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

410 i‡(
°©us
 =
LUA_OK
)

411 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

412 i‡(
°©us
 =
LUA_OK
Ë
	`l_¥öt
(
L
);

413 
	`ªp‹t
(
L
, 
°©us
);

415 
	`lua_£â›
(
L
, 0);

416 
	`lua_wrôñöe
();

417 
¥og«me
 = 
ﬁd¥og«me
;

418 
	}
}

424 
	$push¨gs
 (
lua_Sèã
 *
L
) {

425 
i
, 
n
;

426 i‡(
	`lua_gëglobÆ
(
L
, "¨g"Ë!
LUA_TTABLE
)

427 
	`luaL_îr‹
(
L
, "'arg' isÇotáÅable");

428 
n
 = ()
	`luaL_Àn
(
L
, -1);

429 
	`luaL_check°ack
(
L
, 
n
 + 3, "too manyárgumentsÅo script");

430 
i
 = 1; i <
n
; i++)

431 
	`lua_øwgëi
(
L
, -
i
, i);

432 
	`lua_ªmove
(
L
, -
i
);

433  
n
;

434 
	}
}

437 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
) {

438 
°©us
;

439 c⁄° *
‚ame
 = 
¨gv
[0];

440 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[-1], "--") != 0)

441 
‚ame
 = 
NULL
;

442 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

443 i‡(
°©us
 =
LUA_OK
) {

444 
n
 = 
	`push¨gs
(
L
);

445 
°©us
 = 
	`doˇŒ
(
L
, 
n
, 
LUA_MULTRET
);

447  
	`ªp‹t
(
L
, 
°©us
);

448 
	}
}

453 
	#has_îr‹
 1

	)

454 
	#has_i
 2

	)

455 
	#has_v
 4

	)

456 
	#has_e
 8

	)

457 
	#has_E
 16

	)

465 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
fú°
) {

466 
¨gs
 = 0;

467 
i
;

468 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

469 *
fú°
 = 
i
;

470 i‡(
¨gv
[
i
][0] != '-')

471  
¨gs
;

472 
¨gv
[
i
][1]) {

474 i‡(
¨gv
[
i
][2] != '\0')

475  
has_îr‹
;

476 *
fú°
 = 
i
 + 1;

477  
¨gs
;

479  
¨gs
;

481 i‡(
¨gv
[
i
][2] != '\0')

482  
has_îr‹
;

483 
¨gs
 |
has_E
;

486 
¨gs
 |
has_i
;

488 i‡(
¨gv
[
i
][2] != '\0')

489  
has_îr‹
;

490 
¨gs
 |
has_v
;

493 
¨gs
 |
has_e
;

495 i‡(
¨gv
[
i
][2] == '\0') {

496 
i
++;

497 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

498  
has_îr‹
;

502  
has_îr‹
;

505 *
fú°
 = 
i
;

506  
¨gs
;

507 
	}
}

514 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

515 
i
;

516 
i
 = 1; i < 
n
; i++) {

517 
›ti⁄
 = 
¨gv
[
i
][1];

518 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

519 i‡(
›ti⁄
 == 'e' || option == 'l') {

520 
°©us
;

521 c⁄° *
exåa
 = 
¨gv
[
i
] + 2;

522 i‡(*
exåa
 ='\0'Ëexå®
¨gv
[++
i
];

523 
	`lua_as£π
(
exåa
 !
NULL
);

524 
°©us
 = (
›ti⁄
 == 'e')

525 ? 
	`do°rög
(
L
, 
exåa
, "=(commandÜine)")

526 : 
	`dﬁibøry
(
L
, 
exåa
);

527 i‡(
°©us
 !
LUA_OK
)  0;

531 
	}
}

535 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

536 c⁄° *
«me
 = "=" 
LUA_INITVARVERSION
;

537 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

538 i‡(
öô
 =
NULL
) {

539 
«me
 = "=" 
LUA_INIT_VAR
;

540 
öô
 = 
	`gëív
(
«me
 + 1);

542 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

543 i‡(
öô
[0] == '@')

544  
	`dofûe
(
L
, 
öô
+1);

546  
	`do°rög
(
L
, 
öô
, 
«me
);

547 
	}
}

554 
	$pmaö
 (
lua_Sèã
 *
L
) {

555 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

556 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

557 
s¸ùt
;

558 
¨gs
 = 
	`cﬁÀ˘¨gs
(
¨gv
, &
s¸ùt
);

559 
	`luaL_checkvîsi⁄
(
L
);

560 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

561 i‡(
¨gs
 =
has_îr‹
) {

562 
	`¥öt_ußge
(
¨gv
[
s¸ùt
]);

565 i‡(
¨gs
 & 
has_v
)

566 
	`¥öt_vîsi⁄
();

567 i‡(
¨gs
 & 
has_E
) {

568 
	`lua_pushboﬁón
(
L
, 1);

569 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

571 
	`luaL_›ílibs
(
L
);

572 
	`¸óã¨gèbÀ
(
L
, 
¨gv
, 
¨gc
, 
s¸ùt
);

573 i‡(!(
¨gs
 & 
has_E
)) {

574 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

577 i‡(!
	`ru«rgs
(
L
, 
¨gv
, 
s¸ùt
))

579 i‡(
s¸ùt
 < 
¨gc
 &&

580 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
 + 
s¸ùt
Ë!
LUA_OK
)

582 i‡(
¨gs
 & 
has_i
)

583 
	`doREPL
(
L
);

584 i‡(
s¸ùt
 =
¨gc
 && !(
¨gs
 & (
has_e
 | 
has_v
))) {

585 i‡(
	`lua_°dö_is_ây
()) {

586 
	`¥öt_vîsi⁄
();

587 
	`doREPL
(
L
);

589 
	`dofûe
(
L
, 
NULL
);

591 
	`lua_pushboﬁón
(
L
, 1);

593 
	}
}

596 
	$maö
 (
¨gc
, **
¨gv
) {

597 
°©us
, 
ªsu…
;

598 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

599 i‡(
L
 =
NULL
) {

600 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

601  
EXIT_FAILURE
;

603 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

604 
	`lua_pushöãgî
(
L
, 
¨gc
);

605 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

606 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

607 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

608 
	`ªp‹t
(
L
, 
°©us
);

609 
	`lua_˛o£
(
L
);

610  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

611 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION_MAJOR
 "5"

	)

20 
	#LUA_VERSION_MINOR
 "3"

	)

21 
	#LUA_VERSION_NUM
 503

	)

22 
	#LUA_VERSION_RELEASE
 "5"

	)

24 
	#LUA_VERSION
 "Lu®" 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

25 
	#LUA_RELEASE
 
LUA_VERSION
 "." 
LUA_VERSION_RELEASE


	)

26 
	#LUA_COPYRIGHT
 
LUA_RELEASE
 " C›yrighà(CË1994-2018 Lua.‹g, PUC-Rio"

	)

27 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedo, W. Cñes"

	)

31 
	#LUA_SIGNATURE
 "\x1bLua"

	)

34 
	#LUA_MULTRET
 (-1)

	)

42 
	#LUA_REGISTRYINDEX
 (-
LUAI_MAXSTACK
 - 1000)

	)

43 
	#lua_upvÆueödex
(
i
Ë(
LUA_REGISTRYINDEX
 - (i))

	)

47 
	#LUA_OK
 0

	)

48 
	#LUA_YIELD
 1

	)

49 
	#LUA_ERRRUN
 2

	)

50 
	#LUA_ERRSYNTAX
 3

	)

51 
	#LUA_ERRMEM
 4

	)

52 
	#LUA_ERRGCMM
 5

	)

53 
	#LUA_ERRERR
 6

	)

56 
lua_Sèã
 
	tlua_Sèã
;

62 
	#LUA_TNONE
 (-1)

	)

64 
	#LUA_TNIL
 0

	)

65 
	#LUA_TBOOLEAN
 1

	)

66 
	#LUA_TLIGHTUSERDATA
 2

	)

67 
	#LUA_TNUMBER
 3

	)

68 
	#LUA_TSTRING
 4

	)

69 
	#LUA_TTABLE
 5

	)

70 
	#LUA_TFUNCTION
 6

	)

71 
	#LUA_TUSERDATA
 7

	)

72 
	#LUA_TTHREAD
 8

	)

74 
	#LUA_NUMTAGS
 9

	)

79 
	#LUA_MINSTACK
 20

	)

83 
	#LUA_RIDX_MAINTHREAD
 1

	)

84 
	#LUA_RIDX_GLOBALS
 2

	)

85 
	#LUA_RIDX_LAST
 
LUA_RIDX_GLOBALS


	)

89 
LUA_NUMBER
 
	tlua_Numbî
;

93 
LUA_INTEGER
 
	tlua_I¡egî
;

96 
LUA_UNSIGNED
 
	tlua_Unsig√d
;

99 
LUA_KCONTEXT
 
	tlua_KC⁄ãxt
;

105 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

110 (*
	tlua_KFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	t°©us
, 
	tlua_KC⁄ãxt
 
	t˘x
);

116 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

118 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° *
	tp
, 
	tsize_t
 
	tsz
, *
	tud
);

124 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

131 #i‡
	`deföed
(
LUA_USER_H
)

132 #ö˛udê
LUA_USER_H


139 c⁄° 
lua_idít
[];

145 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

146 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

147 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

149 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

152 
LUA_API
 c⁄° 
lua_Numbî
 *(
lua_vîsi⁄
Ë(
lua_Sèã
 *
L
);

158 
LUA_API
 (
lua_absödex
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

160 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

161 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

162 
LUA_API
 (
lua_rŸ©e
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

163 
LUA_API
 (
lua_c›y
Ë(
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
);

164 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
n
);

166 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

173 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

174 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

175 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

176 
LUA_API
 (
lua_isöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

178 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

179 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

181 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

182 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

183 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

184 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

185 
LUA_API
 
	$size_t
 (
lua_øwÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

186 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

187 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

188 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

189 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

196 
	#LUA_OPADD
 0

	)

197 
	#LUA_OPSUB
 1

	)

198 
	#LUA_OPMUL
 2

	)

199 
	#LUA_OPMOD
 3

	)

200 
	#LUA_OPPOW
 4

	)

201 
	#LUA_OPDIV
 5

	)

202 
	#LUA_OPIDIV
 6

	)

203 
	#LUA_OPBAND
 7

	)

204 
	#LUA_OPBOR
 8

	)

205 
	#LUA_OPBXOR
 9

	)

206 
	#LUA_OPSHL
 10

	)

207 
	#LUA_OPSHR
 11

	)

208 
	#LUA_OPUNM
 12

	)

209 
	#LUA_OPBNOT
 13

	)

211 
LUA_API
 (
lua_¨ôh
Ë(
lua_Sèã
 *
L
, 
›
);

213 
	#LUA_OPEQ
 0

	)

214 
	#LUA_OPLT
 1

	)

215 
	#LUA_OPLE
 2

	)

217 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

218 
LUA_API
 (
lua_com∑ª
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
, 
›
);

224 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

225 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

226 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

227 
LUA_API
 c⁄° *(
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
);

228 
LUA_API
 c⁄° *(
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

229 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

230 
va_li°
 
¨gp
);

231 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

232 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

233 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

234 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

235 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

241 
LUA_API
 (
lua_gëglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

242 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

243 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

244 
LUA_API
 (
lua_gëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

245 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

246 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

247 
LUA_API
 (
lua_øwgëp
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

249 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

250 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

251 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

252 
LUA_API
 (
lua_gëu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

258 
LUA_API
 (
lua_£tglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

259 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

260 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

261 
LUA_API
 (
lua_£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

262 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

263 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

264 
LUA_API
 (
lua_øw£ç
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

265 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

266 
LUA_API
 (
lua_£tu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

272 
LUA_API
 (
lua_ˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

273 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

274 
	#lua_ˇŒ
(
L
,
n
,
r
Ë
	`lua_ˇŒk
(L, (n), (r), 0, 
NULL
)

	)

276 
LUA_API
 (
lua_pˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

277 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

278 
	#lua_pˇŒ
(
L
,
n
,
r
,
f
Ë
	`lua_pˇŒk
(L, (n), (r), (f), 0, 
NULL
)

	)

280 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

281 c⁄° *
chunk«me
, c⁄° *
mode
);

283 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
);

289 
LUA_API
 (
lua_yõldk
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

290 
lua_KFun˘i⁄
 
k
);

291 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rg
);

292 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

293 
LUA_API
 (
lua_isyõldabÀ
Ë(
lua_Sèã
 *
L
);

295 
	#lua_yõld
(
L
,
n
Ë
	`lua_yõldk
(L, (n), 0, 
NULL
)

	)

302 
	#LUA_GCSTOP
 0

	)

303 
	#LUA_GCRESTART
 1

	)

304 
	#LUA_GCCOLLECT
 2

	)

305 
	#LUA_GCCOUNT
 3

	)

306 
	#LUA_GCCOUNTB
 4

	)

307 
	#LUA_GCSTEP
 5

	)

308 
	#LUA_GCSETPAUSE
 6

	)

309 
	#LUA_GCSETSTEPMUL
 7

	)

310 
	#LUA_GCISRUNNING
 9

	)

312 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

319 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

321 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

323 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

324 
LUA_API
 (
lua_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

326 
LUA_API
 
	$size_t
 (
lua_°rögt⁄umbî
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

328 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

329 
LUA_API
 (
lua_£èŒocf
Ë(
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

339 
	#lua_gëexåa•a˚
(
L
Ë((*)((*)(LË- 
LUA_EXTRASPACE
))

	)

341 
	#lua_t⁄umbî
(
L
,
i
Ë
	`lua_t⁄umbîx
(L,(i),
NULL
)

	)

342 
	#lua_toöãgî
(
L
,
i
Ë
	`lua_toöãgîx
(L,(i),
NULL
)

	)

344 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

346 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

348 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

350 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

352 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

353 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

354 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

355 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

356 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

357 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

358 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

359 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

361 
	#lua_pushlôîÆ
(
L
, 
s
Ë
	`lua_push°rög
(L, "" s)

	)

363 
	#lua_pushglobÆèbÀ
(
L
) \

364 (()
	`lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_RIDX_GLOBALS
))

	)

366 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

369 
	#lua_ö£π
(
L
,
idx
Ë
	`lua_rŸ©e
(L, (idx), 1)

	)

371 
	#lua_ªmove
(
L
,
idx
Ë(
	`lua_rŸ©e
(L, (idx), -1), 
	`lua_p›
(L, 1))

	)

373 
	#lua_ª∂a˚
(
L
,
idx
Ë(
	`lua_c›y
(L, -1, (idx)), 
	`lua_p›
(L, 1))

	)

383 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

385 
	#lua_pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

386 
	#lua_tounsig√dx
(
L
,
i
,
is
Ë((
lua_Unsig√d
)
	`lua_toöãgîx
(L,i,is))

	)

387 
	#lua_tounsig√d
(
L
,
i
Ë
	`lua_tounsig√dx
(L,(i),
NULL
)

	)

402 
	#LUA_HOOKCALL
 0

	)

403 
	#LUA_HOOKRET
 1

	)

404 
	#LUA_HOOKLINE
 2

	)

405 
	#LUA_HOOKCOUNT
 3

	)

406 
	#LUA_HOOKTAILCALL
 4

	)

412 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

413 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

414 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

415 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

417 
lua_Debug
 
	tlua_Debug
;

421 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

424 
LUA_API
 (
lua_gë°ack
Ë(
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

425 
LUA_API
 (
lua_gëöfo
Ë(
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

426 
LUA_API
 c⁄° *(
lua_gëloˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

427 
LUA_API
 c⁄° *(
lua_£éoˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

428 
LUA_API
 c⁄° *(
lua_gëupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

429 
LUA_API
 c⁄° *(
lua_£tupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

431 
LUA_API
 *(
lua_upvÆueid
Ë(
lua_Sèã
 *
L
, 
fidx
, 
n
);

432 
LUA_API
 (
lua_upvÆuejoö
Ë(
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

433 
fidx2
, 
n2
);

435 
LUA_API
 (
lua_£thook
Ë(
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

436 
LUA_API
 
	$lua_Hook
 (
lua_gëhook
Ë(
lua_Sèã
 *
L
);

437 
LUA_API
 (
lua_gëhookmask
Ë(
lua_Sèã
 *
L
);

438 
LUA_API
 (
lua_gëhookcou¡
Ë(
lua_Sèã
 *
L
);

441 
	slua_Debug
 {

442 
evít
;

443 c⁄° *
«me
;

444 c⁄° *
«mewh©
;

445 c⁄° *
wh©
;

446 c⁄° *
sour˚
;

447 
cuºíéöe
;

448 
löedeföed
;

449 
œ°löedeföed
;

450 
nups
;

451 
≈¨ams
;

452 
isv¨¨g
;

453 
i°aûˇŒ
;

454 
sh‹t_§c
[
LUA_IDSIZE
];

456 
CÆlInfo
 *
i_ci
;

	@/home/czl/Workspace/lua/lua-5.3.5/src/lua.hpp

6 
	~"lua.h
"

7 
	~"luÆib.h
"

8 
	~"œuxlib.h
"

	@/home/czl/Workspace/lua/lua-5.3.5/src/luac.c

7 
	#luac_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

19 
	~"œuxlib.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

23 
	~"lundump.h
"

25 
PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
);

26 
	#luaU_¥öt
 
PrötFun˘i⁄


	)

28 
	#PROGNAME
 "luac"

	)

29 
	#OUTPUT
 
PROGNAME
 ".out"

	)

31 
	gli°ög
=0;

32 
	gdumpög
=1;

33 
	g°rùpög
=0;

34 
	gOuçut
[]={ 
OUTPUT
 };

35 c⁄° * 
	gouçut
=
Ouçut
;

36 c⁄° * 
	g¥og«me
=
PROGNAME
;

38 
	$Áèl
(c⁄° * 
mesßge
)

40 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

41 
	`exô
(
EXIT_FAILURE
);

42 
	}
}

44 
	$ˇ¬Ÿ
(c⁄° * 
wh©
)

46 
	`Ârötf
(
°dîr
,"%s: c™nŸ %†%s: %s\n",
¥og«me
,
wh©
,
ouçut
,
	`°ªº‹
(
î∫o
));

47 
	`exô
(
EXIT_FAILURE
);

48 
	}
}

50 
	$ußge
(c⁄° * 
mesßge
)

52 i‡(*
mesßge
=='-')

53 
	`Ârötf
(
°dîr
,"%s: uƒecognized o±i⁄ '%s'\n",
¥og«me
,
mesßge
);

55 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

56 
	`Ârötf
(
°dîr
,

66 ,
¥og«me
,
Ouçut
);

67 
	`exô
(
EXIT_FAILURE
);

68 
	}
}

70 
	#IS
(
s
Ë(
	`°rcmp
(
¨gv
[
i
],s)==0)

	)

72 
	$dﬂrgs
(
¨gc
, * 
¨gv
[])

74 
i
;

75 
vîsi⁄
=0;

76 i‡(
¨gv
[0]!=
NULL
 && *¨gv[0]!=0Ë
¥og«me
=argv[0];

77 
i
=1; i<
¨gc
; i++)

79 i‡(*
¨gv
[
i
]!='-')

81 i‡(
	`IS
("--"))

83 ++
i
;

84 i‡(
vîsi⁄
) ++version;

87 i‡(
	`IS
("-"))

89 i‡(
	`IS
("-l"))

90 ++
li°ög
;

91 i‡(
	`IS
("-o"))

93 
ouçut
=
¨gv
[++
i
];

94 i‡(
ouçut
==
NULL
 || *output==0 || (*output=='-' && output[1]!=0))

95 
	`ußge
("'-o'Çeedsárgument");

96 i‡(
	`IS
("-")Ë
ouçut
=
NULL
;

98 i‡(
	`IS
("-p"))

99 
dumpög
=0;

100 i‡(
	`IS
("-s"))

101 
°rùpög
=1;

102 i‡(
	`IS
("-v"))

103 ++
vîsi⁄
;

105 
	`ußge
(
¨gv
[
i
]);

107 i‡(
i
==
¨gc
 && (
li°ög
 || !
dumpög
))

109 
dumpög
=0;

110 
¨gv
[--
i
]=
Ouçut
;

112 i‡(
vîsi⁄
)

114 
	`¥ötf
("%s\n",
LUA_COPYRIGHT
);

115 i‡(
vîsi⁄
==
¨gc
-1Ë
	`exô
(
EXIT_SUCCESS
);

117  
i
;

118 
	}
}

120 
	#FUNCTION
 "(fun˘i⁄(Înd)();"

	)

122 c⁄° * 
	$ªadî
(
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
)

124 
	`UNUSED
(
L
);

125 i‡((*(*)
ud
)--)

127 *
size
=(
FUNCTION
)-1;

128  
FUNCTION
;

132 *
size
=0;

133  
NULL
;

135 
	}
}

137 
	#t›rŸo
(
L
,
i
Ë
	`gë¥Ÿo
(L->
t›
+(i))

	)

139 c⁄° 
PrŸo
* 
	$comböe
(
lua_Sèã
* 
L
, 
n
)

141 i‡(
n
==1)

142  
	`t›rŸo
(
L
,-1);

145 
PrŸo
* 
f
;

146 
i
=
n
;

147 i‡(
	`lua_lﬂd
(
L
,
ªadî
,&
i
,"=(" 
PROGNAME
 ")",
NULL
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

148 
f
=
	`t›rŸo
(
L
,-1);

149 
i
=0; i<
n
; i++)

151 
f
->
p
[
i
]=
	`t›rŸo
(
L
,i-
n
-1);

152 i‡(
f
->
p
[
i
]->
sizeupvÆues
>0Ëf->p[i]->
upvÆues
[0].
ö°ack
=0;

154 
f
->
sizñöeöfo
=0;

155  
f
;

157 
	}
}

159 
	$wrôî
(
lua_Sèã
* 
L
, c⁄° * 
p
, 
size_t
 
size
, * 
u
)

161 
	`UNUSED
(
L
);

162  (
	`fwrôe
(
p
,
size
,1,(
FILE
*)
u
)!=1) && (size!=0);

163 
	}
}

165 
	$pmaö
(
lua_Sèã
* 
L
)

167 
¨gc
=()
	`lua_toöãgî
(
L
,1);

168 ** 
¨gv
=(**)
	`lua_tou£rd©a
(
L
,2);

169 c⁄° 
PrŸo
* 
f
;

170 
i
;

171 i‡(!
	`lua_check°ack
(
L
,
¨gc
)Ë
	`Áèl
("too many input files");

172 
i
=0; i<
¨gc
; i++)

174 c⁄° * 
fûíame
=
	`IS
("-"Ë? 
NULL
 : 
¨gv
[
i
];

175 i‡(
	`luaL_lﬂdfûe
(
L
,
fûíame
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

177 
f
=
	`comböe
(
L
,
¨gc
);

178 i‡(
li°ög
Ë
	`luaU_¥öt
(
f
,listing>1);

179 i‡(
dumpög
)

181 
FILE
* 
D
(
ouçut
==
NULL
Ë? 
°dout
 : 
	`f›í
(output,"wb");

182 i‡(
D
==
NULL
Ë
	`ˇ¬Ÿ
("open");

183 
	`lua_lock
(
L
);

184 
	`luaU_dump
(
L
,
f
,
wrôî
,
D
,
°rùpög
);

185 
	`lua_u∆ock
(
L
);

186 i‡(
	`„º‹
(
D
)Ë
	`ˇ¬Ÿ
("write");

187 i‡(
	`f˛o£
(
D
)Ë
	`ˇ¬Ÿ
("close");

190 
	}
}

192 
	$maö
(
¨gc
, * 
¨gv
[])

194 
lua_Sèã
* 
L
;

195 
i
=
	`dﬂrgs
(
¨gc
,
¨gv
);

196 
¨gc
-=
i
; 
¨gv
+=i;

197 i‡(
¨gc
<=0Ë
	`ußge
("no input files given");

198 
L
=
	`luaL_√w°©e
();

199 i‡(
L
==
NULL
Ë
	`Áèl
("cannot create state:ÇotÉnough memory");

200 
	`lua_pushcfun˘i⁄
(
L
,&
pmaö
);

201 
	`lua_pushöãgî
(
L
,
¨gc
);

202 
	`lua_pushlightu£rd©a
(
L
,
¨gv
);

203 i‡(
	`lua_pˇŒ
(
L
,2,0,0)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

204 
	`lua_˛o£
(
L
);

205  
EXIT_SUCCESS
;

206 
	}
}

214 
	~<˘y≥.h
>

215 
	~<°dio.h
>

217 
	#luac_c


	)

218 
	#LUA_CORE


	)

220 
	~"ldebug.h
"

221 
	~"lobje˘.h
"

222 
	~"l›codes.h
"

224 
	#VOID
(
p
Ë((c⁄° *)’))

	)

226 
	$PrötSåög
(c⁄° 
TSåög
* 
ts
)

228 c⁄° * 
s
=
	`gë°r
(
ts
);

229 
size_t
 
i
,
n
=
	`ts¶í
(
ts
);

230 
	`¥ötf
("%c",'"');

231 
i
=0; i<
n
; i++)

233 
c
=()()
s
[
i
];

234 
c
)

236 '"': 
	`¥ötf
("\\\""); ;

237 '\\': 
	`¥ötf
("\\\\"); ;

238 '\a': 
	`¥ötf
("\\a"); ;

239 '\b': 
	`¥ötf
("\\b"); ;

240 '\f': 
	`¥ötf
("\\f"); ;

241 '\n': 
	`¥ötf
("\\n"); ;

242 '\r': 
	`¥ötf
("\\r"); ;

243 '\t': 
	`¥ötf
("\\t"); ;

244 '\v': 
	`¥ötf
("\\v"); ;

245 : i‡(
	`i•röt
(
c
))

246 
	`¥ötf
("%c",
c
);

248 
	`¥ötf
("\\%03d",
c
);

251 
	`¥ötf
("%c",'"');

252 
	}
}

254 
	$PrötC⁄°™t
(c⁄° 
PrŸo
* 
f
, 
i
)

256 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

257 
	`ây≥
(
o
))

259 
LUA_TNIL
:

260 
	`¥ötf
("nil");

262 
LUA_TBOOLEAN
:

263 
	`¥ötf
(
	`bvÆue
(
o
) ? "true" : "false");

265 
LUA_TNUMFLT
:

267 
buff
[100];

268 
	`•rötf
(
buff
,
LUA_NUMBER_FMT
,
	`ÊtvÆue
(
o
));

269 
	`¥ötf
("%s",
buff
);

270 i‡(
buff
[
	`°r•n
(buff,"-0123456789")]=='\0'Ë
	`¥ötf
(".0");

273 
LUA_TNUMINT
:

274 
	`¥ötf
(
LUA_INTEGER_FMT
,
	`ivÆue
(
o
));

276 
LUA_TSHRSTR
: 
LUA_TLNGSTR
:

277 
	`PrötSåög
(
	`tsvÆue
(
o
));

280 
	`¥ötf
("?Åy≥=%d",
	`ây≥
(
o
));

283 
	}
}

285 
	#UPVALNAME
(
x
Ë((
f
->
upvÆues
[x].
«me
Ë? 
	`gë°r
(f->upvÆues[x].«meË: "-")

	)

286 
	#MYK
(
x
Ë(-1-(x))

	)

288 
	$PrötCode
(c⁄° 
PrŸo
* 
f
)

290 c⁄° 
In°ru˘i⁄
* 
code
=
f
->code;

291 
pc
,
n
=
f
->
sizecode
;

292 
pc
=0;Öc<
n
;Öc++)

294 
In°ru˘i⁄
 
i
=
code
[
pc
];

295 
OpCode
 
o
=
	`GET_OPCODE
(
i
);

296 
a
=
	`GETARG_A
(
i
);

297 
b
=
	`GETARG_B
(
i
);

298 
c
=
	`GETARG_C
(
i
);

299 
ax
=
	`GETARG_Ax
(
i
);

300 
bx
=
	`GETARG_Bx
(
i
);

301 
sbx
=
	`GETARG_sBx
(
i
);

302 
löe
=
	`gëfun˛öe
(
f
,
pc
);

303 
	`¥ötf
("\t%d\t",
pc
+1);

304 i‡(
löe
>0Ë
	`¥ötf
("[%d]\t",line); printf("[-]\t");

305 
	`¥ötf
("%-9s\t",
luaP_›«mes
[
o
]);

306 
	`gëOpMode
(
o
))

308 
iABC
:

309 
	`¥ötf
("%d",
a
);

310 i‡(
	`gëBMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
b
Ë? (
	`MYK
(
	`INDEXK
(b))) : b);

311 i‡(
	`gëCMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
c
Ë? (
	`MYK
(
	`INDEXK
(c))) : c);

313 
iABx
:

314 
	`¥ötf
("%d",
a
);

315 i‡(
	`gëBMode
(
o
)==
OpArgK
Ë
	`¥ötf
(" %d",
	`MYK
(
bx
));

316 i‡(
	`gëBMode
(
o
)==
OpArgU
Ë
	`¥ötf
(" %d",
bx
);

318 
iAsBx
:

319 
	`¥ötf
("%d %d",
a
,
sbx
);

321 
iAx
:

322 
	`¥ötf
("%d",
	`MYK
(
ax
));

325 
o
)

327 
OP_LOADK
:

328 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
bx
);

330 
OP_GETUPVAL
:

331 
OP_SETUPVAL
:

332 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

334 
OP_GETTABUP
:

335 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

336 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

338 
OP_SETTABUP
:

339 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
a
));

340 i‡(
	`ISK
(
b
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); }

341 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

343 
OP_GETTABLE
:

344 
OP_SELF
:

345 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

347 
OP_SETTABLE
:

348 
OP_ADD
:

349 
OP_SUB
:

350 
OP_MUL
:

351 
OP_MOD
:

352 
OP_POW
:

353 
OP_DIV
:

354 
OP_IDIV
:

355 
OP_BAND
:

356 
OP_BOR
:

357 
OP_BXOR
:

358 
OP_SHL
:

359 
OP_SHR
:

360 
OP_EQ
:

361 
OP_LT
:

362 
OP_LE
:

363 i‡(
	`ISK
(
b
Ë|| ISK(
c
))

365 
	`¥ötf
("\t; ");

366 i‡(
	`ISK
(
b
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); 
	`¥ötf
("-");

367 
	`¥ötf
(" ");

368 i‡(
	`ISK
(
c
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); 
	`¥ötf
("-");

371 
OP_JMP
:

372 
OP_FORLOOP
:

373 
OP_FORPREP
:

374 
OP_TFORLOOP
:

375 
	`¥ötf
("\t;Åÿ%d",
sbx
+
pc
+2);

377 
OP_CLOSURE
:

378 
	`¥ötf
("\t; %p",
	`VOID
(
f
->
p
[
bx
]));

380 
OP_SETLIST
:

381 i‡(
c
==0Ë
	`¥ötf
("\t; %d",()
code
[++
pc
]); printf("\t; %d",c);

383 
OP_EXTRAARG
:

384 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
ax
);

389 
	`¥ötf
("\n");

391 
	}
}

393 
	#SS
(
x
Ë((x==1)?"":"s")

	)

394 
	#S
(
x
Ë()(x),
	`SS
(x)

	)

396 
	$PrötHódî
(c⁄° 
PrŸo
* 
f
)

398 c⁄° * 
s
=
f
->
sour˚
 ? 
	`gë°r
(f->source) : "=?";

399 i‡(*
s
=='@' || *s=='=')

400 
s
++;

401 i‡(*
s
==
LUA_SIGNATURE
[0])

402 
s
="(bstring)";

404 
s
="(string)";

405 
	`¥ötf
("\n%s <%s:%d,%d> (%d instruction%sát %p)\n",

406 (
f
->
löedeföed
==0)?"maö":"fun˘i⁄",
s
,

407 
f
->
löedeföed
,f->
œ°löedeföed
,

408 
	`S
(
f
->
sizecode
),
	`VOID
(f));

409 
	`¥ötf
("%d%sÖaram%s, %d slot%s, %d upvalue%s, ",

410 ()(
f
->
num∑øms
),f->
is_v¨¨g
?"+":"",
	`SS
(f->numparams),

411 
	`S
(
f
->
max°acksize
),S(f->
sizeupvÆues
));

412 
	`¥ötf
("%dÜocal%s, %d constant%s, %d function%s\n",

413 
	`S
(
f
->
sizñocv¨s
),S(f->
sizek
),S(f->
sizï
));

414 
	}
}

416 
	$PrötDebug
(c⁄° 
PrŸo
* 
f
)

418 
i
,
n
;

419 
n
=
f
->
sizek
;

420 
	`¥ötf
("c⁄°™t†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

421 
i
=0; i<
n
; i++)

423 
	`¥ötf
("\t%d\t",
i
+1);

424 
	`PrötC⁄°™t
(
f
,
i
);

425 
	`¥ötf
("\n");

427 
n
=
f
->
sizñocv¨s
;

428 
	`¥ötf
("loˇl†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

429 
i
=0; i<
n
; i++)

431 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

432 
i
,
	`gë°r
(
f
->
locv¨s
[i].
v¨«me
),f->locv¨s[i].
°¨çc
+1,f->locv¨s[i].
ídpc
+1);

434 
n
=
f
->
sizeupvÆues
;

435 
	`¥ötf
("upvÆue†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

436 
i
=0; i<
n
; i++)

438 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

439 
i
,
	`UPVALNAME
(i),
f
->
upvÆues
[i].
ö°ack
,f->upvÆues[i].
idx
);

441 
	}
}

443 
	$PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
)

445 
i
,
n
=
f
->
sizï
;

446 
	`PrötHódî
(
f
);

447 
	`PrötCode
(
f
);

448 i‡(
fuŒ
Ë
	`PrötDebug
(
f
);

449 
i
=0; i<
n
; i++Ë
	`PrötFun˘i⁄
(
f
->
p
[i],
fuŒ
);

450 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/luaconf.h

8 #i‚de‡
luac⁄f_h


9 
	#luac⁄f_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

50 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

51 
	#LUA_USE_WINDOWS


	)

55 #i‡
deföed
(
LUA_USE_WINDOWS
)

56 
	#LUA_DL_DLL


	)

57 
	#LUA_USE_C89


	)

61 #i‡
deföed
(
LUA_USE_LINUX
)

62 
	#LUA_USE_POSIX


	)

63 
	#LUA_USE_DLOPEN


	)

64 
	#LUA_USE_READLINE


	)

68 #i‡
deföed
(
LUA_USE_MACOSX
)

69 
	#LUA_USE_POSIX


	)

70 
	#LUA_USE_DLOPEN


	)

71 
	#LUA_USE_READLINE


	)

80 #i‡
deföed
(
LUA_USE_C89
Ë&& !deföed(
LUA_USE_WINDOWS
)

81 
	#LUA_C89_NUMBERS


	)

90 #i‡((
INT_MAX
 >> 15) >> 15) >= 1

91 
	#LUAI_BITSINT
 32

	)

94 
	#LUAI_BITSINT
 16

	)

109 
	#LUA_INT_INT
 1

	)

110 
	#LUA_INT_LONG
 2

	)

111 
	#LUA_INT_LONGLONG
 3

	)

114 
	#LUA_FLOAT_FLOAT
 1

	)

115 
	#LUA_FLOAT_DOUBLE
 2

	)

116 
	#LUA_FLOAT_LONGDOUBLE
 3

	)

118 #i‡
deföed
(
LUA_32BITS
)

122 #i‡
LUAI_BITSINT
 >= 32

123 
	#LUA_INT_TYPE
 
LUA_INT_INT


	)

125 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

127 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_FLOAT


	)

129 #ñi‡
deföed
(
LUA_C89_NUMBERS
)

133 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

134 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

142 #i‡!
deföed
(
LUA_INT_TYPE
)

143 
	#LUA_INT_TYPE
 
LUA_INT_LONGLONG


	)

146 #i‡!
deföed
(
LUA_FLOAT_TYPE
)

147 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

168 
	#LUA_PATH_SEP
 ";"

	)

169 
	#LUA_PATH_MARK
 "?"

	)

170 
	#LUA_EXEC_DIR
 "!"

	)

182 
	#LUA_VDIR
 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

183 #i‡
deföed
(
_WIN32
)

188 
	#LUA_LDIR
 "!\\lua\\"

	)

189 
	#LUA_CDIR
 "!\\"

	)

190 
	#LUA_SHRDIR
 "!\\..\\sh¨e\\lua\\" 
LUA_VDIR
 "\\"

	)

191 
	#LUA_PATH_DEFAULT
 \

192 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

193 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\init.lua;" \

194 
LUA_SHRDIR
"?.lua;" LUA_SHRDIR"?\\init.lua;" \

195 ".\\?.lua;" ".\\?\\öô.lua"

	)

196 
	#LUA_CPATH_DEFAULT
 \

197 
LUA_CDIR
"?.dll;" \

198 
LUA_CDIR
"..\\lib\\lua\\" 
LUA_VDIR
 "\\?.dll;" \

199 
LUA_CDIR
"lﬂdÆl.dŒ;" ".\\?.dŒ"

	)

203 
	#LUA_ROOT
 "/u§/loˇl/"

	)

204 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/" 
LUA_VDIR
 "/"

	)

205 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/" 
LUA_VDIR
 "/"

	)

206 
	#LUA_PATH_DEFAULT
 \

207 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

208 
LUA_CDIR
"?.lua;" LUA_CDIR"?/init.lua;" \

209 "./?.lua;" "./?/öô.lua"

	)

210 
	#LUA_CPATH_DEFAULT
 \

211 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so;" "./?.so"

	)

220 #i‡
deföed
(
_WIN32
)

221 
	#LUA_DIRSEP
 "\\"

	)

223 
	#LUA_DIRSEP
 "/"

	)

244 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

246 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

247 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

249 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

254 
	#LUA_API
 

	)

260 
	#LUALIB_API
 
LUA_API


	)

261 
	#LUAMOD_API
 
LUALIB_API


	)

278 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

279 
	$deföed
(
__ELF__
)

280 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

282 
	#LUAI_FUNC
 

	)

285 
	#LUAI_DDEC
 
LUAI_FUNC


	)

286 
	#LUAI_DDEF


	)

303 #i‡
	`deföed
(
LUA_COMPAT_5_2
)

309 
	#LUA_COMPAT_MATHLIB


	)

314 
	#LUA_COMPAT_BITLIB


	)

319 
	#LUA_COMPAT_IPAIRS


	)

326 
	#LUA_COMPAT_APIINTCASTS


	)

331 #i‡
	`deföed
(
LUA_COMPAT_5_1
)

334 
	#LUA_COMPAT_MATHLIB


	)

335 
	#LUA_COMPAT_APIINTCASTS


	)

341 
	#LUA_COMPAT_UNPACK


	)

347 
	#LUA_COMPAT_LOADERS


	)

353 
	#lua_˝ˇŒ
(
L
,
f
,
u
) \

354 (
	`lua_pushcfun˘i⁄
(
L
, (
f
)), \

355 
	`lua_pushlightu£rd©a
(
L
,(
u
)), \

356 
	`lua_pˇŒ
(
L
,1,0,0))

	)

363 
	#LUA_COMPAT_LOG10


	)

369 
	#LUA_COMPAT_LOADSTRING


	)

374 
	#LUA_COMPAT_MAXN


	)

381 
	#lua_°æí
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

383 
	#lua_objÀn
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

385 
	#lua_equÆ
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPEQ
)

	)

386 
	#lua_Às°h™
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPLT
)

	)

392 
	#LUA_COMPAT_MODULE


	)

434 
	#l_Êo‹
(
x
Ë(
	`l_m©h›
(
Êo‹
)(x))

	)

436 
	#lua_numbî2°r
(
s
,
sz
,
n
) \

437 
	`l_•rötf
((
s
), 
sz
, 
LUA_NUMBER_FMT
, (
LUAI_UACNUMBER
)(
n
))

	)

447 
	#lua_numbîtoöãgî
(
n
,
p
) \

448 ((
n
Ë>(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

449 (
n
Ë< -(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

450 (*(
p
Ë(
LUA_INTEGER
)(
n
), 1))

	)

455 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_FLOAT


457 
	#LUA_NUMBER
 

	)

459 
	#l_m©hlim
(
n
Ë(
FLT_
##n)

	)

461 
	#LUAI_UACNUMBER
 

	)

463 
	#LUA_NUMBER_FRMLEN
 ""

	)

464 
	#LUA_NUMBER_FMT
 "%.7g"

	)

466 
	#l_m©h›
(
›
Ë›##
f


	)

468 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πof
((s), (p))

	)

471 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


473 
	#LUA_NUMBER
 

	)

475 
	#l_m©hlim
(
n
Ë(
LDBL_
##n)

	)

477 
	#LUAI_UACNUMBER
 

	)

479 
	#LUA_NUMBER_FRMLEN
 "L"

	)

480 
	#LUA_NUMBER_FMT
 "%.19Lg"

	)

482 
	#l_m©h›
(
›
Ë›##
l


	)

484 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πﬁd
((s), (p))

	)

486 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_DOUBLE


488 
	#LUA_NUMBER
 

	)

490 
	#l_m©hlim
(
n
Ë(
DBL_
##n)

	)

492 
	#LUAI_UACNUMBER
 

	)

494 
	#LUA_NUMBER_FRMLEN
 ""

	)

495 
	#LUA_NUMBER_FMT
 "%.14g"

	)

497 
	#l_m©h›
(
›
Ë
	)
op

499 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

526 
	#LUA_INTEGER_FMT
 "%" 
LUA_INTEGER_FRMLEN
 "d"

	)

528 
	#LUAI_UACINT
 
LUA_INTEGER


	)

530 
	#lua_öãgî2°r
(
s
,
sz
,
n
) \

531 
	`l_•rötf
((
s
), 
sz
, 
LUA_INTEGER_FMT
, (
LUAI_UACINT
)(
n
))

	)

537 
	#LUA_UNSIGNED
 
LUAI_UACINT


	)

542 #i‡
LUA_INT_TYPE
 =
LUA_INT_INT


544 
	#LUA_INTEGER
 

	)

545 
	#LUA_INTEGER_FRMLEN
 ""

	)

547 
	#LUA_MAXINTEGER
 
INT_MAX


	)

548 
	#LUA_MININTEGER
 
INT_MIN


	)

550 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONG


552 
	#LUA_INTEGER
 

	)

553 
	#LUA_INTEGER_FRMLEN
 "l"

	)

555 
	#LUA_MAXINTEGER
 
LONG_MAX


	)

556 
	#LUA_MININTEGER
 
LONG_MIN


	)

558 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONGLONG


561 #i‡
	`deföed
(
LLONG_MAX
)

564 
	#LUA_INTEGER
 

	)

565 
	#LUA_INTEGER_FRMLEN
 "Œ"

	)

567 
	#LUA_MAXINTEGER
 
LLONG_MAX


	)

568 
	#LUA_MININTEGER
 
LLONG_MIN


	)

570 #ñi‡
	`deföed
(
LUA_USE_WINDOWS
)

573 
	#LUA_INTEGER
 
__öt64


	)

574 
	#LUA_INTEGER_FRMLEN
 "I64"

	)

576 
	#LUA_MAXINTEGER
 
_I64_MAX


	)

577 
	#LUA_MININTEGER
 
_I64_MIN


	)

605 #i‡!
	`deföed
(
LUA_USE_C89
)

606 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë
	`¢¥ötf
(s,sz,f,i)

	)

608 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë(()(sz), 
	`•rötf
(s,f,i))

	)

618 #i‡!
	`deföed
(
LUA_USE_C89
)

619 
	#lua_°rx2numbî
(
s
,
p
Ë
	`lua_°r2numbî
(s,p)

	)

627 
	#lua_poöãr2°r
(
buff
,
sz
,
p
Ë
	`l_•rötf
(buff,sz,"%p",p)

	)

636 #i‡!
	`deföed
(
LUA_USE_C89
)

637 
	#lua_numbî2°rx
(
L
,
b
,
sz
,
f
,
n
) \

638 (()
L
, 
	`l_•rötf
(
b
,
sz
,
f
,(
LUAI_UACNUMBER
)(
n
)))

	)

648 #i‡
	`deföed
(
LUA_USE_C89
Ë|| (deföed(
HUGE_VAL
Ë&& !deföed(
HUGE_VALF
))

649 #unde‡
l_m©h›


650 #unde‡
lua_°r2numbî


651 
	#l_m©h›
(
›
Ë(
lua_Numbî
)›

	)

652 
	#lua_°r2numbî
(
s
,
p
Ë((
lua_Numbî
)
	`°πod
((s), (p)))

	)

662 
	#LUA_KCONTEXT
 
±rdiff_t


	)

664 #i‡!
	`deföed
(
LUA_USE_C89
Ë&& deföed(
__STDC_VERSION__
) && \

665 
__STDC_VERSION__
 >= 199901L

666 
	~<°döt.h
>

667 #i‡
	`deföed
(
INTPTR_MAX
)

668 #unde‡
LUA_KCONTEXT


669 
	#LUA_KCONTEXT
 
öçå_t


	)

679 #i‡!
	`deföed
(
lua_gëloˇÀde˝oöt
)

680 
	#lua_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

706 #i‡
	`deföed
(
LUA_USE_APICHECK
)

707 
	~<as£π.h
>

708 
	#luai_≠icheck
(
l
,
e
Ë
	`as£π
”)

	)

728 #i‡
LUAI_BITSINT
 >= 32

729 
	#LUAI_MAXSTACK
 1000000

	)

731 
	#LUAI_MAXSTACK
 15000

	)

740 
	#LUA_EXTRASPACE
 ((*))

	)

748 
	#LUA_IDSIZE
 60

	)

758 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


759 
	#LUAL_BUFFERSIZE
 8192

	)

761 
	#LUAL_BUFFERSIZE
 (()(0x80 * (*Ë* (
lua_I¡egî
)))

	)

772 
	#LUA_QL
(
x
Ë"'" x "'"

	)

773 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
	#LUA_VERSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

18 
LUAMOD_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

20 
	#LUA_COLIBNAME
 "c‹outöe"

	)

21 
LUAMOD_API
 (
lua›í_c‹outöe
Ë(
lua_Sèã
 *
L
);

23 
	#LUA_TABLIBNAME
 "èbÀ"

	)

24 
LUAMOD_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

26 
	#LUA_IOLIBNAME
 "io"

	)

27 
LUAMOD_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

29 
	#LUA_OSLIBNAME
 "os"

	)

30 
LUAMOD_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

32 
	#LUA_STRLIBNAME
 "°rög"

	)

33 
LUAMOD_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

35 
	#LUA_UTF8LIBNAME
 "utf8"

	)

36 
LUAMOD_API
 (
lua›í_utf8
Ë(
lua_Sèã
 *
L
);

38 
	#LUA_BITLIBNAME
 "bô32"

	)

39 
LUAMOD_API
 (
lua›í_bô32
Ë(
lua_Sèã
 *
L
);

41 
	#LUA_MATHLIBNAME
 "m©h"

	)

42 
LUAMOD_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

44 
	#LUA_DBLIBNAME
 "debug"

	)

45 
LUAMOD_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

47 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

48 
LUAMOD_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

52 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

56 #i‡!
	`deföed
(
lua_as£π
)

57 
	#lua_as£π
(
x
Ë(()0)

	)

	@/home/czl/Workspace/lua/lua-5.3.5/src/lundump.c

7 
	#lundump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°rög.h
"

23 
	~"lundump.h
"

24 
	~"lzio.h
"

27 #i‡!
deföed
(
luai_vîifycode
)

28 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

33 
lua_Sèã
 *
	mL
;

34 
ZIO
 *
	mZ
;

35 c⁄° *
	m«me
;

36 } 
	tLﬂdSèã
;

39 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
 *
S
, c⁄° *
why
) {

40 
	`luaO_pushf°rög
(
S
->
L
, "%s: %†¥ecompûed chunk", S->
«me
, 
why
);

41 
	`luaD_throw
(
S
->
L
, 
LUA_ERRSYNTAX
);

42 
	}
}

49 
	#LﬂdVe˘‹
(
S
,
b
,
n
Ë
	`LﬂdBlock
(S,b,“)*((b)[0]))

	)

51 
	$LﬂdBlock
 (
LﬂdSèã
 *
S
, *
b
, 
size_t
 
size
) {

52 i‡(
	`luaZ_ªad
(
S
->
Z
, 
b
, 
size
) != 0)

53 
	`îr‹
(
S
, "truncated");

54 
	}
}

57 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdVe˘‹
(S,&x,1)

	)

60 
lu_byã
 
	$LﬂdByã
 (
LﬂdSèã
 *
S
) {

61 
lu_byã
 
x
;

62 
	`LﬂdV¨
(
S
, 
x
);

63  
x
;

64 
	}
}

67 
	$LﬂdI¡
 (
LﬂdSèã
 *
S
) {

68 
x
;

69 
	`LﬂdV¨
(
S
, 
x
);

70  
x
;

71 
	}
}

74 
lua_Numbî
 
	$LﬂdNumbî
 (
LﬂdSèã
 *
S
) {

75 
lua_Numbî
 
x
;

76 
	`LﬂdV¨
(
S
, 
x
);

77  
x
;

78 
	}
}

81 
lua_I¡egî
 
	$LﬂdI¡egî
 (
LﬂdSèã
 *
S
) {

82 
lua_I¡egî
 
x
;

83 
	`LﬂdV¨
(
S
, 
x
);

84  
x
;

85 
	}
}

88 
TSåög
 *
	$LﬂdSåög
 (
LﬂdSèã
 *
S
) {

89 
size_t
 
size
 = 
	`LﬂdByã
(
S
);

90 i‡(
size
 == 0xFF)

91 
	`LﬂdV¨
(
S
, 
size
);

92 i‡(
size
 == 0)

93  
NULL
;

94 i‡(--
size
 <
LUAI_MAXSHORTLEN
) {

95 
buff
[
LUAI_MAXSHORTLEN
];

96 
	`LﬂdVe˘‹
(
S
, 
buff
, 
size
);

97  
	`luaS_√wl°r
(
S
->
L
, 
buff
, 
size
);

100 
TSåög
 *
ts
 = 
	`luaS_¸óã g°robj
(
S
->
L
, 
size
);

101 
	`LﬂdVe˘‹
(
S
, 
	`gë°r
(
ts
), 
size
);

102  
ts
;

104 
	}
}

107 
	$LﬂdCode
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

108 
n
 = 
	`LﬂdI¡
(
S
);

109 
f
->
code
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
In°ru˘i⁄
);

110 
f
->
sizecode
 = 
n
;

111 
	`LﬂdVe˘‹
(
S
, 
f
->
code
, 
n
);

112 
	}
}

115 
LﬂdFun˘i⁄
(
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
);

118 
	$LﬂdC⁄°™ts
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

119 
i
;

120 
n
 = 
	`LﬂdI¡
(
S
);

121 
f
->
k
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
TVÆue
);

122 
f
->
sizek
 = 
n
;

123 
i
 = 0; i < 
n
; i++)

124 
	`£äûvÆue
(&
f
->
k
[
i
]);

125 
i
 = 0; i < 
n
; i++) {

126 
TVÆue
 *
o
 = &
f
->
k
[
i
];

127 
t
 = 
	`LﬂdByã
(
S
);

128 
t
) {

129 
LUA_TNIL
:

130 
	`£äûvÆue
(
o
);

132 
LUA_TBOOLEAN
:

133 
	`£tbvÆue
(
o
, 
	`LﬂdByã
(
S
));

135 
LUA_TNUMFLT
:

136 
	`£tÊtvÆue
(
o
, 
	`LﬂdNumbî
(
S
));

138 
LUA_TNUMINT
:

139 
	`£tivÆue
(
o
, 
	`LﬂdI¡egî
(
S
));

141 
LUA_TSHRSTR
:

142 
LUA_TLNGSTR
:

143 
	`£tsvÆue2n
(
S
->
L
, 
o
, 
	`LﬂdSåög
(S));

146 
	`lua_as£π
(0);

149 
	}
}

152 
	$LﬂdPrŸos
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

153 
i
;

154 
n
 = 
	`LﬂdI¡
(
S
);

155 
f
->
p
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
PrŸo
 *);

156 
f
->
sizï
 = 
n
;

157 
i
 = 0; i < 
n
; i++)

158 
f
->
p
[
i
] = 
NULL
;

159 
i
 = 0; i < 
n
; i++) {

160 
f
->
p
[
i
] = 
	`luaF_√w¥Ÿo
(
S
->
L
);

161 
	`LﬂdFun˘i⁄
(
S
, 
f
->
p
[
i
], f->
sour˚
);

163 
	}
}

166 
	$LﬂdUpvÆues
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

167 
i
, 
n
;

168 
n
 = 
	`LﬂdI¡
(
S
);

169 
f
->
upvÆues
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
UpvÆdesc
);

170 
f
->
sizeupvÆues
 = 
n
;

171 
i
 = 0; i < 
n
; i++)

172 
f
->
upvÆues
[
i
].
«me
 = 
NULL
;

173 
i
 = 0; i < 
n
; i++) {

174 
f
->
upvÆues
[
i
].
ö°ack
 = 
	`LﬂdByã
(
S
);

175 
f
->
upvÆues
[
i
].
idx
 = 
	`LﬂdByã
(
S
);

177 
	}
}

180 
	$LﬂdDebug
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

181 
i
, 
n
;

182 
n
 = 
	`LﬂdI¡
(
S
);

183 
f
->
löeöfo
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, );

184 
f
->
sizñöeöfo
 = 
n
;

185 
	`LﬂdVe˘‹
(
S
, 
f
->
löeöfo
, 
n
);

186 
n
 = 
	`LﬂdI¡
(
S
);

187 
f
->
locv¨s
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
LocV¨
);

188 
f
->
sizñocv¨s
 = 
n
;

189 
i
 = 0; i < 
n
; i++)

190 
f
->
locv¨s
[
i
].
v¨«me
 = 
NULL
;

191 
i
 = 0; i < 
n
; i++) {

192 
f
->
locv¨s
[
i
].
v¨«me
 = 
	`LﬂdSåög
(
S
);

193 
f
->
locv¨s
[
i
].
°¨çc
 = 
	`LﬂdI¡
(
S
);

194 
f
->
locv¨s
[
i
].
ídpc
 = 
	`LﬂdI¡
(
S
);

196 
n
 = 
	`LﬂdI¡
(
S
);

197 
i
 = 0; i < 
n
; i++)

198 
f
->
upvÆues
[
i
].
«me
 = 
	`LﬂdSåög
(
S
);

199 
	}
}

202 
	$LﬂdFun˘i⁄
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
) {

203 
f
->
sour˚
 = 
	`LﬂdSåög
(
S
);

204 i‡(
f
->
sour˚
 =
NULL
)

205 
f
->
sour˚
 = 
psour˚
;

206 
f
->
löedeföed
 = 
	`LﬂdI¡
(
S
);

207 
f
->
œ°löedeföed
 = 
	`LﬂdI¡
(
S
);

208 
f
->
num∑øms
 = 
	`LﬂdByã
(
S
);

209 
f
->
is_v¨¨g
 = 
	`LﬂdByã
(
S
);

210 
f
->
max°acksize
 = 
	`LﬂdByã
(
S
);

211 
	`LﬂdCode
(
S
, 
f
);

212 
	`LﬂdC⁄°™ts
(
S
, 
f
);

213 
	`LﬂdUpvÆues
(
S
, 
f
);

214 
	`LﬂdPrŸos
(
S
, 
f
);

215 
	`LﬂdDebug
(
S
, 
f
);

216 
	}
}

219 
	$checklôîÆ
 (
LﬂdSèã
 *
S
, c⁄° *
s
, c⁄° *
msg
) {

220 
buff
[(
LUA_SIGNATURE
Ë+ (
LUAC_DATA
)];

221 
size_t
 
Àn
 = 
	`°æí
(
s
);

222 
	`LﬂdVe˘‹
(
S
, 
buff
, 
Àn
);

223 i‡(
	`memcmp
(
s
, 
buff
, 
Àn
) != 0)

224 
	`îr‹
(
S
, 
msg
);

225 
	}
}

228 
	$fchecksize
 (
LﬂdSèã
 *
S
, 
size_t
 
size
, c⁄° *
äame
) {

229 i‡(
	`LﬂdByã
(
S
Ë!
size
)

230 
	`îr‹
(
S
, 
	`luaO_pushf°rög
(S->
L
, "%†sizêmism©ch in", 
äame
));

231 
	}
}

234 
	#checksize
(
S
,
t
Ë
	`fchecksize
(S,—),#t)

	)

236 
	$checkHódî
 (
LﬂdSèã
 *
S
) {

237 
	`checklôîÆ
(
S
, 
LUA_SIGNATURE
 + 1, "notá");

238 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_VERSION
)

239 
	`îr‹
(
S
, "version mismatch in");

240 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_FORMAT
)

241 
	`îr‹
(
S
, "format mismatch in");

242 
	`checklôîÆ
(
S
, 
LUAC_DATA
, "corrupted");

243 
	`checksize
(
S
, );

244 
	`checksize
(
S
, 
size_t
);

245 
	`checksize
(
S
, 
In°ru˘i⁄
);

246 
	`checksize
(
S
, 
lua_I¡egî
);

247 
	`checksize
(
S
, 
lua_Numbî
);

248 i‡(
	`LﬂdI¡egî
(
S
Ë!
LUAC_INT
)

249 
	`îr‹
(
S
, "endianness mismatch in");

250 i‡(
	`LﬂdNumbî
(
S
Ë!
LUAC_NUM
)

251 
	`îr‹
(
S
, "float format mismatch in");

252 
	}
}

258 
LClosuª
 *
	$luaU_undump
(
lua_Sèã
 *
L
, 
ZIO
 *
Z
, c⁄° *
«me
) {

259 
LﬂdSèã
 
S
;

260 
LClosuª
 *
˛
;

261 i‡(*
«me
 == '@' || *name == '=')

262 
S
.
«me
 =Çame + 1;

263 i‡(*
«me
 =
LUA_SIGNATURE
[0])

264 
S
.
«me
 = "binary string";

266 
S
.
«me
 =Çame;

267 
S
.
L
 = L;

268 
S
.
Z
 = Z;

269 
	`checkHódî
(&
S
);

270 
˛
 = 
	`luaF_√wL˛osuª
(
L
, 
	`LﬂdByã
(&
S
));

271 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

272 
	`luaD_ö˘›
(
L
);

273 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

274 
	`LﬂdFun˘i⁄
(&
S
, 
˛
->
p
, 
NULL
);

275 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

276 
	`luai_vîifycode
(
L
, 
buff
, 
˛
->
p
);

277  
˛
;

278 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lundump.h

7 #i‚de‡
lundump_h


8 
	#lundump_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

16 
	#LUAC_DATA
 "\x19\x93\r\n\x1a\n"

	)

18 
	#LUAC_INT
 0x5678

	)

19 
	#LUAC_NUM
 
	`ˇ°_num
(370.5)

	)

21 
	#MYINT
(
s
Ë(s[0]-'0')

	)

22 
	#LUAC_VERSION
 (
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
))

	)

23 
	#LUAC_FORMAT
 0

	)

26 
LUAI_FUNC
 
LClosuª
* 
luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, c⁄° * 
«me
);

29 
LUAI_FUNC
 
luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
,

30 * 
d©a
, 
°rù
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lutf8lib.c

7 
	#lutf8lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<as£π.h
>

14 
	~<limôs.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

23 
	#MAXUNICODE
 0x10FFFF

	)

25 
	#isc⁄t
(
p
Ë((*’Ë& 0xC0Ë=0x80)

	)

30 
lua_I¡egî
 
	$u_po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

31 i‡(
pos
 >= 0) Öos;

32 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

33  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

34 
	}
}

40 c⁄° *
	$utf8_decode
 (c⁄° *
o
, *
vÆ
) {

41 c⁄° 
limôs
[] = {0xFF, 0x7F, 0x7FF, 0xFFFF};

42 c⁄° *
s
 = (c⁄° *)
o
;

43 
c
 = 
s
[0];

44 
ªs
 = 0;

45 i‡(
c
 < 0x80)

46 
ªs
 = 
c
;

48 
cou¡
 = 0;

49 
c
 & 0x40) {

50 
cc
 = 
s
[++
cou¡
];

51 i‡((
cc
 & 0xC0) != 0x80)

52  
NULL
;

53 
ªs
 = (ª†<< 6Ë| (
cc
 & 0x3F);

54 
c
 <<= 1;

56 
ªs
 |((
c
 & 0x7FË<< (
cou¡
 * 5));

57 i‡(
cou¡
 > 3 || 
ªs
 > 
MAXUNICODE
 ||Ñe†<
limôs
[count])

58  
NULL
;

59 
s
 +
cou¡
;

61 i‡(
vÆ
Ë*vÆ = 
ªs
;

62  (c⁄° *)
s
 + 1;

63 
	}
}

71 
	$utÊí
 (
lua_Sèã
 *
L
) {

72 
n
 = 0;

73 
size_t
 
Àn
;

74 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

75 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

76 
lua_I¡egî
 
posj
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
Àn
);

77 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 2,

79 
	`luaL_¨gcheck
(
L
, --
posj
 < (
lua_I¡egî
)
Àn
, 3,

81 
posi
 <
posj
) {

82 c⁄° *
s1
 = 
	`utf8_decode
(
s
 + 
posi
, 
NULL
);

83 i‡(
s1
 =
NULL
) {

84 
	`lua_pushnû
(
L
);

85 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

88 
posi
 = 
s1
 - 
s
;

89 
n
++;

91 
	`lua_pushöãgî
(
L
, 
n
);

93 
	}
}

100 
	$codïoöt
 (
lua_Sèã
 *
L
) {

101 
size_t
 
Àn
;

102 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

103 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

104 
lua_I¡egî
 
po£
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
Àn
);

105 
n
;

106 c⁄° *
£
;

107 
	`luaL_¨gcheck
(
L
, 
posi
 >= 1, 2, "out ofÑange");

108 
	`luaL_¨gcheck
(
L
, 
po£
 <(
lua_I¡egî
)
Àn
, 3, "out ofÑange");

109 i‡(
posi
 > 
po£
)  0;

110 i‡(
po£
 - 
posi
 >
INT_MAX
)

111  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

112 
n
 = ()(
po£
 - 
posi
) + 1;

113 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

114 
n
 = 0;

115 
£
 = 
s
 + 
po£
;

116 
s
 +
posi
 - 1; s < 
£
;) {

117 
code
;

118 
s
 = 
	`utf8_decode
(s, &
code
);

119 i‡(
s
 =
NULL
)

120  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

121 
	`lua_pushöãgî
(
L
, 
code
);

122 
n
++;

124  
n
;

125 
	}
}

128 
	$pushutfch¨
 (
lua_Sèã
 *
L
, 
¨g
) {

129 
lua_I¡egî
 
code
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

130 
	`luaL_¨gcheck
(
L
, 0 <
code
 && codê<
MAXUNICODE
, 
¨g
, "value out ofÑange");

131 
	`lua_pushf°rög
(
L
, "%U", ()
code
);

132 
	}
}

138 
	$utfch¨
 (
lua_Sèã
 *
L
) {

139 
n
 = 
	`lua_gët›
(
L
);

140 i‡(
n
 == 1)

141 
	`pushutfch¨
(
L
, 1);

143 
i
;

144 
luaL_Buf„r
 
b
;

145 
	`luaL_bufföô
(
L
, &
b
);

146 
i
 = 1; i <
n
; i++) {

147 
	`pushutfch¨
(
L
, 
i
);

148 
	`luaL_addvÆue
(&
b
);

150 
	`luaL_pushªsu…
(&
b
);

153 
	}
}

160 
	$byãoff£t
 (
lua_Sèã
 *
L
) {

161 
size_t
 
Àn
;

162 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

163 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

164 
lua_I¡egî
 
posi
 = (
n
 >0Ë? 1 : 
Àn
 + 1;

165 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3,Öosi), 
Àn
);

166 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 3,

168 i‡(
n
 == 0) {

170 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi))Öosi--;

173 i‡(
	`isc⁄t
(
s
 + 
posi
))

174  
	`luaL_îr‹
(
L
, "initialÖosition isá continuation byte");

175 i‡(
n
 < 0) {

176 
n
 < 0 && 
posi
 > 0) {

178 
posi
--;

179 } 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi));

180 
n
++;

184 
n
--;

185 
n
 > 0 && 
posi
 < (
lua_I¡egî
)
Àn
) {

187 
posi
++;

188 } 
	`isc⁄t
(
s
 + 
posi
));

189 
n
--;

193 i‡(
n
 == 0)

194 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

196 
	`lua_pushnû
(
L
);

198 
	}
}

201 
	$ôî_aux
 (
lua_Sèã
 *
L
) {

202 
size_t
 
Àn
;

203 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

204 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 2) - 1;

205 i‡(
n
 < 0)

206 
n
 = 0;

207 i‡(
n
 < (
lua_I¡egî
)
Àn
) {

208 
n
++;

209 
	`isc⁄t
(
s
 + 
n
))Ç++;

211 i‡(
n
 >(
lua_I¡egî
)
Àn
)

214 
code
;

215 c⁄° *
√xt
 = 
	`utf8_decode
(
s
 + 
n
, &
code
);

216 i‡(
√xt
 =
NULL
 || 
	`isc⁄t
(next))

217  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

218 
	`lua_pushöãgî
(
L
, 
n
 + 1);

219 
	`lua_pushöãgî
(
L
, 
code
);

222 
	}
}

225 
	$ôî_codes
 (
lua_Sèã
 *
L
) {

226 
	`luaL_check°rög
(
L
, 1);

227 
	`lua_pushcfun˘i⁄
(
L
, 
ôî_aux
);

228 
	`lua_pushvÆue
(
L
, 1);

229 
	`lua_pushöãgî
(
L
, 0);

231 
	}
}

235 
	#UTF8PATT
 "[\0-\x7F\xC2-\xF4][\x80-\xBF]*"

	)

238 c⁄° 
luaL_Reg
 
	gfuncs
[] = {

239 {"off£t", 
byãoff£t
},

240 {"codïoöt", 
codïoöt
},

241 {"ch¨", 
utfch¨
},

242 {"Àn", 
utÊí
},

243 {"codes", 
ôî_codes
},

245 {"ch¨∑âîn", 
NULL
},

246 {
NULL
, NULL}

250 
LUAMOD_API
 
	$lua›í_utf8
 (
lua_Sèã
 *
L
) {

251 
	`luaL_√wlib
(
L
, 
funcs
);

252 
	`lua_pushl°rög
(
L
, 
UTF8PATT
, (UTF8PATT)/() - 1);

253 
	`lua_£tfõld
(
L
, -2, "charpattern");

255 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lvm.c

7 
	#lvm_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<Êﬂt.h
>

13 
	~<limôs.h
>

14 
	~<m©h.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~"lua.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lgc.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"…abÀ.h
"

30 
	~"…m.h
"

31 
	~"lvm.h
"

35 
	#MAXTAGLOOP
 2000

	)

44 #i‡!
deföed
(
l_ötfôsf
)

47 
	#NBM
 (
	`l_m©hlim
(
MANT_DIG
))

	)

56 #i‡((((
LUA_MAXINTEGER
 >> (
NBM
 / 4)) >> (NBM / 4)) >> (NBM / 4)) \

57 >> (
	gNBM
 - (3 * (NBM / 4)))) > 0

59 
	#l_ötfôsf
(
i
) \

60 (-((
lua_I¡egî
)1 << 
NBM
Ë<(
i
Ë&& (iË<(÷ua_I¡egî)1 << NBM))

	)

72 
	$luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

73 
TVÆue
 
v
;

74 i‡(
	`âisöãgî
(
obj
)) {

75 *
n
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

78 i‡(
	`cvt2num
(
obj
) &&

79 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

80 *
n
 = 
	`nvÆue
(&
v
);

85 
	}
}

94 
	$luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
) {

95 
TVÆue
 
v
;

96 
agaö
:

97 i‡(
	`âisÊﬂt
(
obj
)) {

98 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
obj
);

99 
lua_Numbî
 
f
 = 
	`l_Êo‹
(
n
);

100 i‡(
n
 !
f
) {

101 i‡(
mode
 == 0)  0;

102 i‡(
mode
 > 1)

103 
f
 += 1;

105  
	`lua_numbîtoöãgî
(
f
, 
p
);

107 i‡(
	`âisöãgî
(
obj
)) {

108 *
p
 = 
	`ivÆue
(
obj
);

111 i‡(
	`cvt2num
(
obj
) &&

112 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

113 
obj
 = &
v
;

114 
agaö
;

117 
	}
}

135 
	$f‹limô
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
,Üua_I¡egî 
°ï
,

136 *
°›now
) {

137 *
°›now
 = 0;

138 i‡(!
	`luaV_toöãgî
(
obj
, 
p
, (
°ï
 < 0 ? 2 : 1))) {

139 
lua_Numbî
 
n
;

140 i‡(!
	`t⁄umbî
(
obj
, &
n
))

142 i‡(
	`luai_num…
(0, 
n
)) {

143 *
p
 = 
LUA_MAXINTEGER
;

144 i‡(
°ï
 < 0Ë*
°›now
 = 1;

147 *
p
 = 
LUA_MININTEGER
;

148 i‡(
°ï
 >0Ë*
°›now
 = 1;

152 
	}
}

160 
	$luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
,

161 c⁄° 
TVÆue
 *
¶Ÿ
) {

162 
lo›
;

163 c⁄° 
TVÆue
 *
tm
;

164 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

165 i‡(
¶Ÿ
 =
NULL
) {

166 
	`lua_as£π
(!
	`âi°abÀ
(
t
));

167 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
);

168 i‡(
	`âi¢û
(
tm
))

169 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

173 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

174 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t
)->
më©abÀ
, 
TM_INDEX
);

175 i‡(
tm
 =
NULL
) {

176 
	`£äûvÆue
(
vÆ
);

181 i‡(
	`âisfun˘i⁄
(
tm
)) {

182 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

185 
t
 = 
tm
;

186 i‡(
	`luaV_Á°gë
(
L
,
t
,
key
,
¶Ÿ
,
luaH_gë
)) {

187 
	`£tobj2s
(
L
, 
vÆ
, 
¶Ÿ
);

192 
	`luaG_ru√º‹
(
L
, "'__index' chainÅooÜong;ÖossibleÜoop");

193 
	}
}

203 
	$luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

204 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
) {

205 
lo›
;

206 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

207 c⁄° 
TVÆue
 *
tm
;

208 i‡(
¶Ÿ
 !
NULL
) {

209 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

210 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

211 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_NEWINDEX
);

212 i‡(
tm
 =
NULL
) {

213 i‡(
¶Ÿ
 =
luaO_nûobje˘
)

214 
¶Ÿ
 = 
	`luaH_√wkey
(
L
, 
h
, 
key
);

216 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *, 
¶Ÿ
), 
vÆ
);

217 
	`övÆid©eTMˇche
(
h
);

218 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

224 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

225 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

228 i‡(
	`âisfun˘i⁄
(
tm
)) {

229 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

232 
t
 = 
tm
;

233 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
key
, 
¶Ÿ
, 
luaH_gë
, 
vÆ
))

237 
	`luaG_ru√º‹
(
L
, "'__newindex' chainÅooÜong;ÖossibleÜoop");

238 
	}
}

248 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

249 c⁄° *
l
 = 
	`gë°r
(
ls
);

250 
size_t
 
Œ
 = 
	`ts¶í
(
ls
);

251 c⁄° *
r
 = 
	`gë°r
(
rs
);

252 
size_t
 
Ã
 = 
	`ts¶í
(
rs
);

254 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

255 i‡(
ãmp
 != 0)

256  
ãmp
;

258 
size_t
 
Àn
 = 
	`°æí
(
l
);

259 i‡(
Àn
 =
Ã
)

260  (
Àn
 =
Œ
) ? 0 : 1;

261 i‡(
Àn
 =
Œ
)

264 
Àn
++;

265 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

268 
	}
}

281 
	$LTötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

282 #i‡
	`deföed
(
l_ötfôsf
)

283 i‡(!
	`l_ötfôsf
(
i
)) {

284 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

286 i‡(
f
 > 
	`ˇ°_num
(
LUA_MININTEGER
))

287  (
i
 < 
	`ˇ°
(
lua_I¡egî
, 
f
));

292  
	`luai_num…
(
	`ˇ°_num
(
i
), 
f
);

293 
	}
}

300 
	$LEötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

301 #i‡
	`deföed
(
l_ötfôsf
)

302 i‡(!
	`l_ötfôsf
(
i
)) {

303 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

305 i‡(
f
 >
	`ˇ°_num
(
LUA_MININTEGER
))

306  (
i
 <
	`ˇ°
(
lua_I¡egî
, 
f
));

311  
	`luai_numÀ
(
	`ˇ°_num
(
i
), 
f
);

312 
	}
}

318 
	$LTnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

319 i‡(
	`âisöãgî
(
l
)) {

320 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

321 i‡(
	`âisöãgî
(
r
))

322  
li
 < 
	`ivÆue
(
r
);

324  
	`LTötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

327 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

328 i‡(
	`âisÊﬂt
(
r
))

329  
	`luai_num…
(
lf
, 
	`ÊtvÆue
(
r
));

330 i‡(
	`luai_numi¢™
(
lf
))

333  !
	`LEötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

335 
	}
}

341 
	$LEnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

342 i‡(
	`âisöãgî
(
l
)) {

343 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

344 i‡(
	`âisöãgî
(
r
))

345  
li
 <
	`ivÆue
(
r
);

347  
	`LEötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

350 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

351 i‡(
	`âisÊﬂt
(
r
))

352  
	`luai_numÀ
(
lf
, 
	`ÊtvÆue
(
r
));

353 i‡(
	`luai_numi¢™
(
lf
))

356  !
	`LTötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

358 
	}
}

364 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

365 
ªs
;

366 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

367  
	`LTnum
(
l
, 
r
);

368 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

369  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) < 0;

370 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

371 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

372  
ªs
;

373 
	}
}

384 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

385 
ªs
;

386 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

387  
	`LEnum
(
l
, 
r
);

388 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

389  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) <= 0;

390 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

391  
ªs
;

393 
L
->
ci
->
ˇŒ°©us
 |
CIST_LEQ
;

394 
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
);

395 
L
->
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

396 i‡(
ªs
 < 0)

397 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

398  !
ªs
;

400 
	}
}

407 
	$luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

408 c⁄° 
TVÆue
 *
tm
;

409 i‡(
	`ây≥
(
t1
Ë!ây≥(
t2
)) {

410 i‡(
	`ânov
(
t1
Ë!ânov(
t2
Ë||Åäov—1Ë!
LUA_TNUMBER
)

413 
lua_I¡egî
 
i1
, 
i2
;

414  (
	`toöãgî
(
t1
, &
i1
Ë&&Åoöãgî(
t2
, &
i2
) && i1 == i2);

418 
	`ây≥
(
t1
)) {

419 
LUA_TNIL
:  1;

420 
LUA_TNUMINT
:  (
	`ivÆue
(
t1
Ë=ivÆue(
t2
));

421 
LUA_TNUMFLT
:  
	`luai_numeq
(
	`ÊtvÆue
(
t1
), f…vÆue(
t2
));

422 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

423 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

424 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

425 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

426 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

427 
LUA_TUSERDATA
: {

428 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

429 i‡(
L
 =
NULL
)  0;

430 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

431 i‡(
tm
 =
NULL
)

432 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

435 
LUA_TTABLE
: {

436 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

437 i‡(
L
 =
NULL
)  0;

438 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

439 i‡(
tm
 =
NULL
)

440 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

444  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

446 i‡(
tm
 =
NULL
)

448 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

449  !
	`l_isÁl£
(
L
->
t›
);

450 
	}
}

454 
	#to°rög
(
L
,
o
) \

455 (
	`âis°rög
(
o
Ë|| (
	`cvt2°r
(oË&& (
	`luaO_to°rög
(
L
, o), 1)))

	)

457 
	#i£m±y°r
(
o
Ë(
	`âisshr°rög
(oË&& 
	`tsvÆue
(o)->
shæí
 =0)

	)

460 
	$c›y2buff
 (
StkId
 
t›
, 
n
, *
buff
) {

461 
size_t
 
é
 = 0;

463 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
);

464 
	`mem˝y
(
buff
 + 
é
, 
	`svÆue
(
t›
 - 
n
), 
l
 * ());

465 
é
 +
l
;

466 } --
n
 > 0);

467 
	}
}

474 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

475 
	`lua_as£π
(
tŸÆ
 >= 2);

477 
StkId
 
t›
 = 
L
->top;

478 
n
 = 2;

479 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`cvt2°r
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1))

480 
	`luaT_åyböTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
);

481 i‡(
	`i£m±y°r
(
t›
 - 1))

482 
	`ˇ°_void
(
	`to°rög
(
L
, 
t›
 - 2));

483 i‡(
	`i£m±y°r
(
t›
 - 2)) {

484 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

488 
size_t
 
é
 = 
	`v¶í
(
t›
 - 1);

489 
TSåög
 *
ts
;

491 
n
 = 1;Ç < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
 -Ç - 1);Ç++) {

492 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
 - 1);

493 i‡(
l
 >(
MAX_SIZE
/()Ë- 
é
)

494 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

495 
é
 +
l
;

497 i‡(
é
 <
LUAI_MAXSHORTLEN
) {

498 
buff
[
LUAI_MAXSHORTLEN
];

499 
	`c›y2buff
(
t›
, 
n
, 
buff
);

500 
ts
 = 
	`luaS_√wl°r
(
L
, 
buff
, 
é
);

503 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
é
);

504 
	`c›y2buff
(
t›
, 
n
, 
	`gë°r
(
ts
));

506 
	`£tsvÆue2s
(
L
, 
t›
 - 
n
, 
ts
);

508 
tŸÆ
 -
n
-1;

509 
L
->
t›
 -
n
-1;

510 } 
tŸÆ
 > 1);

511 
	}
}

517 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

518 c⁄° 
TVÆue
 *
tm
;

519 
	`ây≥
(
rb
)) {

520 
LUA_TTABLE
: {

521 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

522 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

523 i‡(
tm
) ;

524 
	`£tivÆue
(
ø
, 
	`luaH_gën
(
h
));

527 
LUA_TSHRSTR
: {

528 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
shæí
);

531 
LUA_TLNGSTR
: {

532 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
u
.
 gÀn
);

536 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

537 i‡(
	`âi¢û
(
tm
))

538 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

542 
	`luaT_ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

543 
	}
}

552 
lua_I¡egî
 
	$luaV_div
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

553 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

554 i‡(
n
 == 0)

555 
	`luaG_ru√º‹
(
L
, "attemptÅo divide by zero");

556  
	`öt›
(-, 0, 
m
);

559 
lua_I¡egî
 
q
 = 
m
 / 
n
;

560 i‡((
m
 ^ 
n
) < 0 && m %Ç != 0)

561 
q
 -= 1;

562  
q
;

564 
	}
}

572 
lua_I¡egî
 
	$luaV_mod
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

573 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

574 i‡(
n
 == 0)

575 
	`luaG_ru√º‹
(
L
, "attemptÅoÖerform 'n%%0'");

579 
lua_I¡egî
 
r
 = 
m
 % 
n
;

580 i‡(
r
 !0 && (
m
 ^ 
n
) < 0)

581 
r
 +
n
;

582  
r
;

584 
	}
}

588 
	#NBITS
 
	`ˇ°_öt
((
lua_I¡egî
Ë* 
CHAR_BIT
)

	)

593 
lua_I¡egî
 
	$luaV_shi·l
 (
lua_I¡egî
 
x
,Üua_I¡egî 
y
) {

594 i‡(
y
 < 0) {

595 i‡(
y
 <-
NBITS
)  0;

596  
	`öt›
(>>, 
x
, -
y
);

599 i‡(
y
 >
NBITS
)  0;

600  
	`öt›
(<<, 
x
, 
y
);

602 
	}
}

610 
LClosuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

611 
LClosuª
 *
c
 = 
p
->
ˇche
;

612 i‡(
c
 !
NULL
) {

613 
nup
 = 
p
->
sizeupvÆues
;

614 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

615 
i
;

616 
i
 = 0; i < 
nup
; i++) {

617 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

618 i‡(
c
->
upvÆs
[
i
]->
v
 != v)

619  
NULL
;

622  
c
;

623 
	}
}

632 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

633 
StkId
 
ø
) {

634 
nup
 = 
p
->
sizeupvÆues
;

635 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

636 
i
;

637 
LClosuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

638 
n˛
->
p
 =Ö;

639 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

640 
i
 = 0; i < 
nup
; i++) {

641 i‡(
uv
[
i
].
ö°ack
)

642 
n˛
->
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

644 
n˛
->
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

645 
n˛
->
upvÆs
[
i
]->
ªfcou¡
++;

648 i‡(!
	`isbœck
(
p
))

649 
p
->
ˇche
 = 
n˛
;

650 
	}
}

656 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

657 
CÆlInfo
 *
ci
 = 
L
->ci;

658 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

659 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

660 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

661 
›
) {

662 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
: 
OP_IDIV
:

663 
OP_BAND
: 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
:

664 
OP_MOD
: 
OP_POW
:

665 
OP_UNM
: 
OP_BNOT
: 
OP_LEN
:

666 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

667 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

670 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

671 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

672 
L
->
t›
--;

673 i‡(
ci
->
ˇŒ°©us
 & 
CIST_LEQ
) {

674 
	`lua_as£π
(
›
 =
OP_LE
);

675 
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

676 
ªs
 = !res;

678 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

679 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

680 
ci
->
u
.
l
.
ßvedpc
++;

683 
OP_CONCAT
: {

684 
StkId
 
t›
 = 
L
->top - 1;

685 
b
 = 
	`GETARG_B
(
ö°
);

686 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

687 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

688 i‡(
tŸÆ
 > 1) {

689 
L
->
t›
 =Åop - 1;

690 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

693 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

694 
L
->
t›
 = 
ci
->top;

697 
OP_TFORCALL
: {

698 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

699 
L
->
t›
 = 
ci
->top;

702 
OP_CALL
: {

703 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

704 
L
->
t›
 = 
ci
->top;

707 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

709 : 
	`lua_as£π
(0);

711 
	}
}

728 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

729 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

730 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

731 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

732 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

733 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

734 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

738 
	#dojump
(
ci
,
i
,
e
) \

739 { 
a
 = 
	`GETARG_A
(
i
); \

740 i‡(
a
 !0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

741 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

744 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

747 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

749 
	#checkGC
(
L
,
c
) \

750 { 
	`luaC_c⁄dGC
(
L
, L->
t›
 = (
c
), \

751 
	`PrŸe˘
(
L
->
t›
 = 
ci
->top)); \

752 
	`luai_thªadyõld
(
L
); }

	)

756 
	#vm„tch
() { \

757 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++); \

758 i‡(
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
)) \

759 
	`PrŸe˘
(
	`luaG_åa˚exec
(
L
)); \

760 
ø
 = 
	`RA
(
i
); \

761 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base); \

762 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
); \

763 }

	)

765 
	#vmdi•©ch
(
o
Ëo)

	)

766 
	#vmˇ£
(
l
Ël:

	)

767 
	#vmbªak
 

	)

774 
	#gëèbÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

775 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

776 
	`PrŸe˘
(
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

780 
	#£âabÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

781 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

782 
	`PrŸe˘
(
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

786 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

787 
CÆlInfo
 *
ci
 = 
L
->ci;

788 
LClosuª
 *
˛
;

789 
TVÆue
 *
k
;

790 
StkId
 
ba£
;

791 
ci
->
ˇŒ°©us
 |
CIST_FRESH
;

792 
√w‰ame
:

793 
	`lua_as£π
(
ci
 =
L
->ci);

794 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

795 
k
 = 
˛
->
p
->k;

796 
ba£
 = 
ci
->
u
.
l
.base;

799 
In°ru˘i⁄
 
i
;

800 
StkId
 
ø
;

801 
	`vm„tch
();

802 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

803 
	`vmˇ£
(
OP_MOVE
) {

804 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

805 
vmbªak
;

807 
	`vmˇ£
(
OP_LOADK
) {

808 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

809 
	`£tobj2s
(
L
, 
ø
, 
rb
);

810 
vmbªak
;

812 
	`vmˇ£
(
OP_LOADKX
) {

813 
TVÆue
 *
rb
;

814 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

815 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

816 
	`£tobj2s
(
L
, 
ø
, 
rb
);

817 
vmbªak
;

819 
	`vmˇ£
(
OP_LOADBOOL
) {

820 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

821 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

822 
vmbªak
;

824 
	`vmˇ£
(
OP_LOADNIL
) {

825 
b
 = 
	`GETARG_B
(
i
);

827 
	`£äûvÆue
(
ø
++);

828 } 
b
--);

829 
vmbªak
;

831 
	`vmˇ£
(
OP_GETUPVAL
) {

832 
b
 = 
	`GETARG_B
(
i
);

833 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

834 
vmbªak
;

836 
	`vmˇ£
(
OP_GETTABUP
) {

837 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)]->
v
;

838 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

839 
	`gëèbÀPrŸe˘ed
(
L
, 
upvÆ
, 
rc
, 
ø
);

840 
vmbªak
;

842 
	`vmˇ£
(
OP_GETTABLE
) {

843 
StkId
 
rb
 = 
	`RB
(
i
);

844 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

845 
	`gëèbÀPrŸe˘ed
(
L
, 
rb
, 
rc
, 
ø
);

846 
vmbªak
;

848 
	`vmˇ£
(
OP_SETTABUP
) {

849 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_A
(
i
)]->
v
;

850 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

851 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

852 
	`£âabÀPrŸe˘ed
(
L
, 
upvÆ
, 
rb
, 
rc
);

853 
vmbªak
;

855 
	`vmˇ£
(
OP_SETUPVAL
) {

856 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

857 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

858 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

859 
vmbªak
;

861 
	`vmˇ£
(
OP_SETTABLE
) {

862 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

863 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

864 
	`£âabÀPrŸe˘ed
(
L
, 
ø
, 
rb
, 
rc
);

865 
vmbªak
;

867 
	`vmˇ£
(
OP_NEWTABLE
) {

868 
b
 = 
	`GETARG_B
(
i
);

869 
c
 = 
	`GETARG_C
(
i
);

870 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

871 
	`£thvÆue
(
L
, 
ø
, 
t
);

872 i‡(
b
 !0 || 
c
 != 0)

873 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

874 
	`checkGC
(
L
, 
ø
 + 1);

875 
vmbªak
;

877 
	`vmˇ£
(
OP_SELF
) {

878 c⁄° 
TVÆue
 *
aux
;

879 
StkId
 
rb
 = 
	`RB
(
i
);

880 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

881 
TSåög
 *
key
 = 
	`tsvÆue
(
rc
);

882 
	`£tobjs2s
(
L
, 
ø
 + 1, 
rb
);

883 i‡(
	`luaV_Á°gë
(
L
, 
rb
, 
key
, 
aux
, 
luaH_gë°r
)) {

884 
	`£tobj2s
(
L
, 
ø
, 
aux
);

886 
	`PrŸe˘
(
	`luaV_föishgë
(
L
, 
rb
, 
rc
, 
ø
, 
aux
));

887 
vmbªak
;

889 
	`vmˇ£
(
OP_ADD
) {

890 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

891 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

892 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

893 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

894 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

895 
	`£tivÆue
(
ø
, 
	`öt›
(+, 
ib
, 
ic
));

897 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

898 
	`£tÊtvÆue
(
ø
, 
	`luai_numadd
(
L
, 
nb
, 
nc
));

900 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_ADD
)); }

901 
vmbªak
;

903 
	`vmˇ£
(
OP_SUB
) {

904 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

905 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

906 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

907 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

908 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

909 
	`£tivÆue
(
ø
, 
	`öt›
(-, 
ib
, 
ic
));

911 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

912 
	`£tÊtvÆue
(
ø
, 
	`luai_numsub
(
L
, 
nb
, 
nc
));

914 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SUB
)); }

915 
vmbªak
;

917 
	`vmˇ£
(
OP_MUL
) {

918 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

919 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

920 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

921 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

922 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

923 
	`£tivÆue
(
ø
, 
	`öt›
(*, 
ib
, 
ic
));

925 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

926 
	`£tÊtvÆue
(
ø
, 
	`luai_nummul
(
L
, 
nb
, 
nc
));

928 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MUL
)); }

929 
vmbªak
;

931 
	`vmˇ£
(
OP_DIV
) {

932 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

933 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

934 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

935 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

936 
	`£tÊtvÆue
(
ø
, 
	`luai_numdiv
(
L
, 
nb
, 
nc
));

938 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_DIV
)); }

939 
vmbªak
;

941 
	`vmˇ£
(
OP_BAND
) {

942 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

943 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

944 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

945 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

946 
	`£tivÆue
(
ø
, 
	`öt›
(&, 
ib
, 
ic
));

948 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BAND
)); }

949 
vmbªak
;

951 
	`vmˇ£
(
OP_BOR
) {

952 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

953 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

954 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

955 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

956 
	`£tivÆue
(
ø
, 
	`öt›
(|, 
ib
, 
ic
));

958 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BOR
)); }

959 
vmbªak
;

961 
	`vmˇ£
(
OP_BXOR
) {

962 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

963 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

964 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

965 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

966 
	`£tivÆue
(
ø
, 
	`öt›
(^, 
ib
, 
ic
));

968 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BXOR
)); }

969 
vmbªak
;

971 
	`vmˇ£
(
OP_SHL
) {

972 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

973 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

974 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

975 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

976 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, 
ic
));

978 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHL
)); }

979 
vmbªak
;

981 
	`vmˇ£
(
OP_SHR
) {

982 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

983 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

984 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

985 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

986 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, -
ic
));

988 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHR
)); }

989 
vmbªak
;

991 
	`vmˇ£
(
OP_MOD
) {

992 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

993 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

994 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

995 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

996 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

997 
	`£tivÆue
(
ø
, 
	`luaV_mod
(
L
, 
ib
, 
ic
));

999 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1000 
lua_Numbî
 
m
;

1001 
	`luai_nummod
(
L
, 
nb
, 
nc
, 
m
);

1002 
	`£tÊtvÆue
(
ø
, 
m
);

1004 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MOD
)); }

1005 
vmbªak
;

1007 
	`vmˇ£
(
OP_IDIV
) {

1008 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1009 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1010 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1011 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

1012 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

1013 
	`£tivÆue
(
ø
, 
	`luaV_div
(
L
, 
ib
, 
ic
));

1015 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1016 
	`£tÊtvÆue
(
ø
, 
	`luai_numidiv
(
L
, 
nb
, 
nc
));

1018 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_IDIV
)); }

1019 
vmbªak
;

1021 
	`vmˇ£
(
OP_POW
) {

1022 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1023 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1024 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1025 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1026 
	`£tÊtvÆue
(
ø
, 
	`luai_numpow
(
L
, 
nb
, 
nc
));

1028 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_POW
)); }

1029 
vmbªak
;

1031 
	`vmˇ£
(
OP_UNM
) {

1032 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1033 
lua_Numbî
 
nb
;

1034 i‡(
	`âisöãgî
(
rb
)) {

1035 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);

1036 
	`£tivÆue
(
ø
, 
	`öt›
(-, 0, 
ib
));

1038 i‡(
	`t⁄umbî
(
rb
, &
nb
)) {

1039 
	`£tÊtvÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

1042 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_UNM
));

1044 
vmbªak
;

1046 
	`vmˇ£
(
OP_BNOT
) {

1047 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1048 
lua_I¡egî
 
ib
;

1049 i‡(
	`toöãgî
(
rb
, &
ib
)) {

1050 
	`£tivÆue
(
ø
, 
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
ib
));

1053 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_BNOT
));

1055 
vmbªak
;

1057 
	`vmˇ£
(
OP_NOT
) {

1058 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1059 
ªs
 = 
	`l_isÁl£
(
rb
);

1060 
	`£tbvÆue
(
ø
, 
ªs
);

1061 
vmbªak
;

1063 
	`vmˇ£
(
OP_LEN
) {

1064 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

1065 
vmbªak
;

1067 
	`vmˇ£
(
OP_CONCAT
) {

1068 
b
 = 
	`GETARG_B
(
i
);

1069 
c
 = 
	`GETARG_C
(
i
);

1070 
StkId
 
rb
;

1071 
L
->
t›
 = 
ba£
 + 
c
 + 1;

1072 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

1073 
ø
 = 
	`RA
(
i
);

1074 
rb
 = 
ba£
 + 
b
;

1075 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1076 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

1077 
L
->
t›
 = 
ci
->top;

1078 
vmbªak
;

1080 
	`vmˇ£
(
OP_JMP
) {

1081 
	`dojump
(
ci
, 
i
, 0);

1082 
vmbªak
;

1084 
	`vmˇ£
(
OP_EQ
) {

1085 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1086 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1087 
	`PrŸe˘
(

1088 i‡(
	`luaV_equÆobj
(
L
, 
rb
, 
rc
Ë!
	`GETARG_A
(
i
))

1089 
ci
->
u
.
l
.
ßvedpc
++;

1091 
	`d⁄extjump
(
ci
);

1093 
vmbªak
;

1095 
	`vmˇ£
(
OP_LT
) {

1096 
	`PrŸe˘
(

1097 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1098 
ci
->
u
.
l
.
ßvedpc
++;

1100 
	`d⁄extjump
(
ci
);

1102 
vmbªak
;

1104 
	`vmˇ£
(
OP_LE
) {

1105 
	`PrŸe˘
(

1106 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1107 
ci
->
u
.
l
.
ßvedpc
++;

1109 
	`d⁄extjump
(
ci
);

1111 
vmbªak
;

1113 
	`vmˇ£
(
OP_TEST
) {

1114 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

1115 
ci
->
u
.
l
.
ßvedpc
++;

1117 
	`d⁄extjump
(
ci
);

1118 
vmbªak
;

1120 
	`vmˇ£
(
OP_TESTSET
) {

1121 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1122 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

1123 
ci
->
u
.
l
.
ßvedpc
++;

1125 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1126 
	`d⁄extjump
(
ci
);

1128 
vmbªak
;

1130 
	`vmˇ£
(
OP_CALL
) {

1131 
b
 = 
	`GETARG_B
(
i
);

1132 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

1133 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1134 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

1135 i‡(
ƒesu…s
 >= 0)

1136 
L
->
t›
 = 
ci
->top;

1137 
	`PrŸe˘
(()0);

1140 
ci
 = 
L
->ci;

1141 
√w‰ame
;

1143 
vmbªak
;

1145 
	`vmˇ£
(
OP_TAILCALL
) {

1146 
b
 = 
	`GETARG_B
(
i
);

1147 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1148 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

1149 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
)) {

1150 
	`PrŸe˘
(()0);

1154 
CÆlInfo
 *
nci
 = 
L
->
ci
;

1155 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

1156 
StkId
 
nfunc
 = 
nci
->
func
;

1157 
StkId
 
ofunc
 = 
oci
->
func
;

1159 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

1160 
aux
;

1162 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

1164 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

1165 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

1166 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

1167 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

1168 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

1169 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

1170 
ci
 = 
L
->cò
oci
;

1171 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

1172 
√w‰ame
;

1174 
vmbªak
;

1176 
	`vmˇ£
(
OP_RETURN
) {

1177 
b
 = 
	`GETARG_B
(
i
);

1178 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

1179 
b
 = 
	`luaD_posˇŒ
(
L
, 
ci
, 
ø
, (b !0 ? b - 1 : 
	`ˇ°_öt
(L->
t›
 -Ña)));

1180 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FRESH
)

1183 
ci
 = 
L
->ci;

1184 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

1185 
	`lua_as£π
(
	`isLua
(
ci
));

1186 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

1187 
√w‰ame
;

1190 
	`vmˇ£
(
OP_FORLOOP
) {

1191 i‡(
	`âisöãgî
(
ø
)) {

1192 
lua_I¡egî
 
°ï
 = 
	`ivÆue
(
ø
 + 2);

1193 
lua_I¡egî
 
idx
 = 
	`öt›
(+, 
	`ivÆue
(
ø
), 
°ï
);

1194 
lua_I¡egî
 
limô
 = 
	`ivÆue
(
ø
 + 1);

1195 i‡((0 < 
°ï
Ë? (
idx
 <
limô
) : (limit <= idx)) {

1196 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1197 
	`chgivÆue
(
ø
, 
idx
);

1198 
	`£tivÆue
(
ø
 + 3, 
idx
);

1202 
lua_Numbî
 
°ï
 = 
	`ÊtvÆue
(
ø
 + 2);

1203 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`ÊtvÆue
(
ø
), 
°ï
);

1204 
lua_Numbî
 
limô
 = 
	`ÊtvÆue
(
ø
 + 1);

1205 i‡(
	`luai_num…
(0, 
°ï
Ë? 
	`luai_numÀ
(
idx
, 
limô
)

1206 : 
	`luai_numÀ
(
limô
, 
idx
)) {

1207 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1208 
	`chgÊtvÆue
(
ø
, 
idx
);

1209 
	`£tÊtvÆue
(
ø
 + 3, 
idx
);

1212 
vmbªak
;

1214 
	`vmˇ£
(
OP_FORPREP
) {

1215 
TVÆue
 *
öô
 = 
ø
;

1216 
TVÆue
 *
∂imô
 = 
ø
 + 1;

1217 
TVÆue
 *
p°ï
 = 
ø
 + 2;

1218 
lua_I¡egî
 
ûimô
;

1219 
°›now
;

1220 i‡(
	`âisöãgî
(
öô
Ë&&Åtisöãgî(
p°ï
) &&

1221 
	`f‹limô
(
∂imô
, &
ûimô
, 
	`ivÆue
(
p°ï
), &
°›now
)) {

1223 
lua_I¡egî
 
öôv
 = (
°›now
 ? 0 : 
	`ivÆue
(
öô
));

1224 
	`£tivÆue
(
∂imô
, 
ûimô
);

1225 
	`£tivÆue
(
öô
, 
	`öt›
(-, 
öôv
, 
	`ivÆue
(
p°ï
)));

1228 
lua_Numbî
 
nöô
;Üua_Numbî 
∆imô
;Üua_Numbî 
n°ï
;

1229 i‡(!
	`t⁄umbî
(
∂imô
, &
∆imô
))

1230 
	`luaG_ru√º‹
(
L
, "'for'Üimit must beáÇumber");

1231 
	`£tÊtvÆue
(
∂imô
, 
∆imô
);

1232 i‡(!
	`t⁄umbî
(
p°ï
, &
n°ï
))

1233 
	`luaG_ru√º‹
(
L
, "'for' step must beáÇumber");

1234 
	`£tÊtvÆue
(
p°ï
, 
n°ï
);

1235 i‡(!
	`t⁄umbî
(
öô
, &
nöô
))

1236 
	`luaG_ru√º‹
(
L
, "'for' initial value must beáÇumber");

1237 
	`£tÊtvÆue
(
öô
, 
	`luai_numsub
(
L
, 
nöô
, 
n°ï
));

1239 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1240 
vmbªak
;

1242 
	`vmˇ£
(
OP_TFORCALL
) {

1243 
StkId
 
cb
 = 
ø
 + 3;

1244 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

1245 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

1246 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

1247 
L
->
t›
 = 
cb
 + 3;

1248 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
)));

1249 
L
->
t›
 = 
ci
->top;

1250 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

1251 
ø
 = 
	`RA
(
i
);

1252 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

1253 
l_tf‹lo›
;

1255 
	`vmˇ£
(
OP_TFORLOOP
) {

1256 
l_tf‹lo›
:

1257 i‡(!
	`âi¢û
(
ø
 + 1)) {

1258 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

1259 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1261 
vmbªak
;

1263 
	`vmˇ£
(
OP_SETLIST
) {

1264 
n
 = 
	`GETARG_B
(
i
);

1265 
c
 = 
	`GETARG_C
(
i
);

1266 
œ°
;

1267 
TabÀ
 *
h
;

1268 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

1269 i‡(
c
 == 0) {

1270 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

1271 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

1273 
h
 = 
	`hvÆue
(
ø
);

1274 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

1275 i‡(
œ°
 > 
h
->
sizóºay
)

1276 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

1277 ; 
n
 > 0;Ç--) {

1278 
TVÆue
 *
vÆ
 = 
ø
+
n
;

1279 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

1280 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

1282 
L
->
t›
 = 
ci
->top;

1283 
vmbªak
;

1285 
	`vmˇ£
(
OP_CLOSURE
) {

1286 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

1287 
LClosuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

1288 i‡(
n˛
 =
NULL
)

1289 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

1291 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

1292 
	`checkGC
(
L
, 
ø
 + 1);

1293 
vmbªak
;

1295 
	`vmˇ£
(
OP_VARARG
) {

1296 
b
 = 
	`GETARG_B
(
i
) - 1;

1297 
j
;

1298 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

1299 i‡(
n
 < 0)

1300 
n
 = 0;

1301 i‡(
b
 < 0) {

1302 
b
 = 
n
;

1303 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

1304 
ø
 = 
	`RA
(
i
);

1305 
L
->
t›
 = 
ø
 + 
n
;

1307 
j
 = 0; j < 
b
 && j < 
n
; j++)

1308 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

1309 ; 
j
 < 
b
; j++)

1310 
	`£äûvÆue
(
ø
 + 
j
);

1311 
vmbªak
;

1313 
	`vmˇ£
(
OP_EXTRAARG
) {

1314 
	`lua_as£π
(0);

1315 
vmbªak
;

1319 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lvm.h

7 #i‚de‡
lvm_h


8 
	#lvm_h


	)

11 
	~"ldo.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

16 #i‡!
deföed
(
LUA_NOCVTN2S
)

17 
	#cvt2°r
(
o
Ë
	`âi¢umbî
(o)

	)

19 
	#cvt2°r
(
o
Ë0

	)

23 #i‡!
deföed
(
LUA_NOCVTS2N
)

24 
	#cvt2num
(
o
Ë
	`âis°rög
(o)

	)

26 
	#cvt2num
(
o
Ë0

	)

35 #i‡!
deföed
(
LUA_FLOORN2I
)

36 
	#LUA_FLOORN2I
 0

	)

40 
	#t⁄umbî
(
o
,
n
) \

41 (
	`âisÊﬂt
(
o
Ë? (*(
n
Ë
	`ÊtvÆue
(o), 1Ë: 
	`luaV_t⁄umbî_
(o,n))

	)

43 
	#toöãgî
(
o
,
i
) \

44 (
	`âisöãgî
(
o
Ë? (*(
i
Ë
	`ivÆue
(o), 1Ë: 
	`luaV_toöãgî
(o,i,
LUA_FLOORN2I
))

	)

46 
	#öt›
(
›
,
v1
,
v2
Ë
	`l_ˇ°U2S
(
	`l_ˇ°S2U
(v1Ë›Ü_ˇ°S2U(v2))

	)

48 
	#luaV_øwequÆobj
(
t1
,
t2
Ë
	`luaV_equÆobj
(
NULL
,t1,t2)

	)

58 
	#luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
f
) \

59 (!
	`âi°abÀ
(
t
) \

60 ? (
¶Ÿ
 = 
NULL
, 0) \

61 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

62 !
	`âi¢û
(
¶Ÿ
))Ë

	)

67 
	#luaV_gëèbÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

68 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

69 
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

80 
	#luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
f
,
v
) \

81 (!
	`âi°abÀ
(
t
) \

82 ? (
¶Ÿ
 = 
NULL
, 0) \

83 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

84 
	`âi¢û
(
¶Ÿ
) ? 0 \

85 : (
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
t
), 
v
), \

86 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *,
¶Ÿ
), 
v
), \

87 1)))

	)

90 
	#luaV_£âabÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

91 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

92 
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

96 
LUAI_FUNC
 
luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
);

97 
LUAI_FUNC
 
luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

98 
LUAI_FUNC
 
luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

99 
LUAI_FUNC
 
luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
);

100 
LUAI_FUNC
 
luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
);

101 
LUAI_FUNC
 
luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

102 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

103 
LUAI_FUNC
 
luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

104 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

105 
LUAI_FUNC
 
luaV_föishOp
 (
lua_Sèã
 *
L
);

106 
LUAI_FUNC
 
luaV_execuã
 (
lua_Sèã
 *
L
);

107 
LUAI_FUNC
 
luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
);

108 
LUAI_FUNC
 
lua_I¡egî
 
luaV_div
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

109 
LUAI_FUNC
 
lua_I¡egî
 
luaV_mod
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

110 
LUAI_FUNC
 
lua_I¡egî
 
luaV_shi·l
 (lua_I¡egî 
x
,Üua_I¡egî 
y
);

111 
LUAI_FUNC
 
luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
);

	@/home/czl/Workspace/lua/lua-5.3.5/src/lzio.c

7 
	#lzio_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"Œimôs.h
"

18 
	~"lmem.h
"

19 
	~"l°©e.h
"

20 
	~"lzio.h
"

23 
	$luaZ_fûl
 (
ZIO
 *
z
) {

24 
size_t
 
size
;

25 
lua_Sèã
 *
L
 = 
z
->L;

26 c⁄° *
buff
;

27 
	`lua_u∆ock
(
L
);

28 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

29 
	`lua_lock
(
L
);

30 i‡(
buff
 =
NULL
 || 
size
 == 0)

31  
EOZ
;

32 
z
->
n
 = 
size
 - 1;

33 
z
->
p
 = 
buff
;

34  
	`ˇ°_uch¨
(*(
z
->
p
++));

35 
	}
}

38 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

39 
z
->
L
 = L;

40 
z
->
ªadî
 =Ñeader;

41 
z
->
d©a
 = data;

42 
z
->
n
 = 0;

43 
z
->
p
 = 
NULL
;

44 
	}
}

48 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

49 
n
) {

50 
size_t
 
m
;

51 i‡(
z
->
n
 == 0) {

52 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

53  
n
;

55 
z
->
n
++;

56 
z
->
p
--;

59 
m
 = (
n
 <
z
->n) ?Ç : z->n;

60 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

61 
z
->
n
 -
m
;

62 
z
->
p
 +
m
;

63 
b
 = (*)b + 
m
;

64 
n
 -
m
;

67 
	}
}

	@/home/czl/Workspace/lua/lua-5.3.5/src/lzio.h

8 #i‚de‡
lzio_h


9 
	#lzio_h


	)

11 
	~"lua.h
"

13 
	~"lmem.h
"

16 
	#EOZ
 (-1Ë

	)

18 
Zio
 
	tZIO
;

20 
	#zgëc
(
z
Ë(((z)->
n
--)>0 ? 
	`ˇ°_uch¨
(*(z)->
p
++Ë: 
	`luaZ_fûl
(z))

	)

23 
	sMbuf„r
 {

24 *
	mbuf„r
;

25 
size_t
 
	mn
;

26 
size_t
 
	mbuffsize
;

27 } 
	tMbuf„r
;

29 
	#luaZ_öôbuf„r
(
L
, 
buff
Ë((buff)->
buf„r
 = 
NULL
, (buff)->
buffsize
 = 0)

	)

31 
	#luaZ_buf„r
(
buff
Ë((buff)->
buf„r
)

	)

32 
	#luaZ_sizebuf„r
(
buff
Ë((buff)->
buffsize
)

	)

33 
	#luaZ_bufÊí
(
buff
Ë((buff)->
n
)

	)

35 
	#luaZ_buf‰emove
(
buff
,
i
Ë((buff)->
n
 -(i))

	)

36 
	#luaZ_ª£tbuf„r
(
buff
Ë((buff)->
n
 = 0)

	)

39 
	#luaZ_ªsizebuf„r
(
L
, 
buff
, 
size
) \

40 ((
buff
)->
buf„r
 = 
	`luaM_ªÆlocvch¨
(
L
, (buff)->buffer, \

41 (
buff
)->
buffsize
, 
size
), \

42 (
buff
)->
buffsize
 = 
size
)

	)

44 
	#luaZ_‰ìbuf„r
(
L
, 
buff
Ë
	`luaZ_ªsizebuf„r
(L, buff, 0)

	)

47 
LUAI_FUNC
 
luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
,

48 *
d©a
);

49 
LUAI_FUNC
 
size_t
 
luaZ_ªad
 (
ZIO
* 
z
, *
b
, size_à
n
);

55 
	sZio
 {

56 
size_t
 
	mn
;

57 c⁄° *
	mp
;

58 
lua_Ródî
 
	mªadî
;

59 *
	md©a
;

60 
lua_Sèã
 *
	mL
;

64 
LUAI_FUNC
 
luaZ_fûl
 (
ZIO
 *
z
);

	@
1
.
0
64
2996
/home/czl/Workspace/lua/lua-5.3.5/luatest/lua1.c
/home/czl/Workspace/lua/lua-5.3.5/luatest/luabuiltin.c
/home/czl/Workspace/lua/lua-5.3.5/luatest/luamod.c
/home/czl/Workspace/lua/lua-5.3.5/src/lapi.c
/home/czl/Workspace/lua/lua-5.3.5/src/lapi.h
/home/czl/Workspace/lua/lua-5.3.5/src/lauxlib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lauxlib.h
/home/czl/Workspace/lua/lua-5.3.5/src/lbaselib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lbitlib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lcode.c
/home/czl/Workspace/lua/lua-5.3.5/src/lcode.h
/home/czl/Workspace/lua/lua-5.3.5/src/lcorolib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lctype.c
/home/czl/Workspace/lua/lua-5.3.5/src/lctype.h
/home/czl/Workspace/lua/lua-5.3.5/src/ldblib.c
/home/czl/Workspace/lua/lua-5.3.5/src/ldebug.c
/home/czl/Workspace/lua/lua-5.3.5/src/ldebug.h
/home/czl/Workspace/lua/lua-5.3.5/src/ldo.c
/home/czl/Workspace/lua/lua-5.3.5/src/ldo.h
/home/czl/Workspace/lua/lua-5.3.5/src/ldump.c
/home/czl/Workspace/lua/lua-5.3.5/src/lfunc.c
/home/czl/Workspace/lua/lua-5.3.5/src/lfunc.h
/home/czl/Workspace/lua/lua-5.3.5/src/lgc.c
/home/czl/Workspace/lua/lua-5.3.5/src/lgc.h
/home/czl/Workspace/lua/lua-5.3.5/src/linit.c
/home/czl/Workspace/lua/lua-5.3.5/src/liolib.c
/home/czl/Workspace/lua/lua-5.3.5/src/llex.c
/home/czl/Workspace/lua/lua-5.3.5/src/llex.h
/home/czl/Workspace/lua/lua-5.3.5/src/llimits.h
/home/czl/Workspace/lua/lua-5.3.5/src/lmathlib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lmem.c
/home/czl/Workspace/lua/lua-5.3.5/src/lmem.h
/home/czl/Workspace/lua/lua-5.3.5/src/loadlib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lobject.c
/home/czl/Workspace/lua/lua-5.3.5/src/lobject.h
/home/czl/Workspace/lua/lua-5.3.5/src/lopcodes.c
/home/czl/Workspace/lua/lua-5.3.5/src/lopcodes.h
/home/czl/Workspace/lua/lua-5.3.5/src/loslib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lparser.c
/home/czl/Workspace/lua/lua-5.3.5/src/lparser.h
/home/czl/Workspace/lua/lua-5.3.5/src/lprefix.h
/home/czl/Workspace/lua/lua-5.3.5/src/lstate.c
/home/czl/Workspace/lua/lua-5.3.5/src/lstate.h
/home/czl/Workspace/lua/lua-5.3.5/src/lstring.c
/home/czl/Workspace/lua/lua-5.3.5/src/lstring.h
/home/czl/Workspace/lua/lua-5.3.5/src/lstrlib.c
/home/czl/Workspace/lua/lua-5.3.5/src/ltable.c
/home/czl/Workspace/lua/lua-5.3.5/src/ltable.h
/home/czl/Workspace/lua/lua-5.3.5/src/ltablib.c
/home/czl/Workspace/lua/lua-5.3.5/src/ltm.c
/home/czl/Workspace/lua/lua-5.3.5/src/ltm.h
/home/czl/Workspace/lua/lua-5.3.5/src/lua.c
/home/czl/Workspace/lua/lua-5.3.5/src/lua.h
/home/czl/Workspace/lua/lua-5.3.5/src/lua.hpp
/home/czl/Workspace/lua/lua-5.3.5/src/luac.c
/home/czl/Workspace/lua/lua-5.3.5/src/luaconf.h
/home/czl/Workspace/lua/lua-5.3.5/src/lualib.h
/home/czl/Workspace/lua/lua-5.3.5/src/lundump.c
/home/czl/Workspace/lua/lua-5.3.5/src/lundump.h
/home/czl/Workspace/lua/lua-5.3.5/src/lutf8lib.c
/home/czl/Workspace/lua/lua-5.3.5/src/lvm.c
/home/czl/Workspace/lua/lua-5.3.5/src/lvm.h
/home/czl/Workspace/lua/lua-5.3.5/src/lzio.c
/home/czl/Workspace/lua/lua-5.3.5/src/lzio.h
