!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	doc/manual.html	/^<h1>1 &ndash; <a name="1">Introduction<\/a><\/h1>$/;"	a
2	doc/manual.html	/^<h1>2 &ndash; <a name="2">Basic Concepts<\/a><\/h1>$/;"	a
2.1	doc/manual.html	/^<h2>2.1 &ndash; <a name="2.1">Values and Types<\/a><\/h2>$/;"	a
2.2	doc/manual.html	/^<h2>2.2 &ndash; <a name="2.2">Environments and the Global Environment<\/a><\/h2>$/;"	a
2.3	doc/manual.html	/^<h2>2.3 &ndash; <a name="2.3">Error Handling<\/a><\/h2>$/;"	a
2.4	doc/manual.html	/^<h2>2.4 &ndash; <a name="2.4">Metatables and Metamethods<\/a><\/h2>$/;"	a
2.5	doc/manual.html	/^<h2>2.5 &ndash; <a name="2.5">Garbage Collection<\/a><\/h2>$/;"	a
2.5.1	doc/manual.html	/^<h3>2.5.1 &ndash; <a name="2.5.1">Garbage-Collection Metamethods<\/a><\/h3>$/;"	a
2.5.2	doc/manual.html	/^<h3>2.5.2 &ndash; <a name="2.5.2">Weak Tables<\/a><\/h3>$/;"	a
2.6	doc/manual.html	/^<h2>2.6 &ndash; <a name="2.6">Coroutines<\/a><\/h2>$/;"	a
3	doc/manual.html	/^<h1>3 &ndash; <a name="3">The Language<\/a><\/h1>$/;"	a
3.1	doc/manual.html	/^<h2>3.1 &ndash; <a name="3.1">Lexical Conventions<\/a><\/h2>$/;"	a
3.2	doc/manual.html	/^<h2>3.2 &ndash; <a name="3.2">Variables<\/a><\/h2>$/;"	a
3.3	doc/manual.html	/^<h2>3.3 &ndash; <a name="3.3">Statements<\/a><\/h2>$/;"	a
3.3.1	doc/manual.html	/^<h3>3.3.1 &ndash; <a name="3.3.1">Blocks<\/a><\/h3>$/;"	a
3.3.2	doc/manual.html	/^<h3>3.3.2 &ndash; <a name="3.3.2">Chunks<\/a><\/h3>$/;"	a
3.3.3	doc/manual.html	/^<h3>3.3.3 &ndash; <a name="3.3.3">Assignment<\/a><\/h3>$/;"	a
3.3.4	doc/manual.html	/^<h3>3.3.4 &ndash; <a name="3.3.4">Control Structures<\/a><\/h3><p>$/;"	a
3.3.5	doc/manual.html	/^<h3>3.3.5 &ndash; <a name="3.3.5">For Statement<\/a><\/h3>$/;"	a
3.3.6	doc/manual.html	/^<h3>3.3.6 &ndash; <a name="3.3.6">Function Calls as Statements<\/a><\/h3><p>$/;"	a
3.3.7	doc/manual.html	/^<h3>3.3.7 &ndash; <a name="3.3.7">Local Declarations<\/a><\/h3><p>$/;"	a
3.4	doc/manual.html	/^<h2>3.4 &ndash; <a name="3.4">Expressions<\/a><\/h2>$/;"	a
3.4.1	doc/manual.html	/^<h3>3.4.1 &ndash; <a name="3.4.1">Arithmetic Operators<\/a><\/h3><p>$/;"	a
3.4.10	doc/manual.html	/^<h3>3.4.10 &ndash; <a name="3.4.10">Function Calls<\/a><\/h3><p>$/;"	a
3.4.11	doc/manual.html	/^<h3>3.4.11 &ndash; <a name="3.4.11">Function Definitions<\/a><\/h3>$/;"	a
3.4.2	doc/manual.html	/^<h3>3.4.2 &ndash; <a name="3.4.2">Bitwise Operators<\/a><\/h3><p>$/;"	a
3.4.3	doc/manual.html	/^<h3>3.4.3 &ndash; <a name="3.4.3">Coercions and Conversions<\/a><\/h3><p>$/;"	a
3.4.4	doc/manual.html	/^<h3>3.4.4 &ndash; <a name="3.4.4">Relational Operators<\/a><\/h3><p>$/;"	a
3.4.5	doc/manual.html	/^<h3>3.4.5 &ndash; <a name="3.4.5">Logical Operators<\/a><\/h3><p>$/;"	a
3.4.6	doc/manual.html	/^<h3>3.4.6 &ndash; <a name="3.4.6">Concatenation<\/a><\/h3><p>$/;"	a
3.4.7	doc/manual.html	/^<h3>3.4.7 &ndash; <a name="3.4.7">The Length Operator<\/a><\/h3>$/;"	a
3.4.8	doc/manual.html	/^<h3>3.4.8 &ndash; <a name="3.4.8">Precedence<\/a><\/h3><p>$/;"	a
3.4.9	doc/manual.html	/^<h3>3.4.9 &ndash; <a name="3.4.9">Table Constructors<\/a><\/h3><p>$/;"	a
3.5	doc/manual.html	/^<h2>3.5 &ndash; <a name="3.5">Visibility Rules<\/a><\/h2>$/;"	a
4	doc/manual.html	/^<h1>4 &ndash; <a name="4">The Application Program Interface<\/a><\/h1>$/;"	a
4.1	doc/manual.html	/^<h2>4.1 &ndash; <a name="4.1">The Stack<\/a><\/h2>$/;"	a
4.2	doc/manual.html	/^<h2>4.2 &ndash; <a name="4.2">Stack Size<\/a><\/h2>$/;"	a
4.3	doc/manual.html	/^<h2>4.3 &ndash; <a name="4.3">Valid and Acceptable Indices<\/a><\/h2>$/;"	a
4.4	doc/manual.html	/^<h2>4.4 &ndash; <a name="4.4">C Closures<\/a><\/h2>$/;"	a
4.5	doc/manual.html	/^<h2>4.5 &ndash; <a name="4.5">Registry<\/a><\/h2>$/;"	a
4.6	doc/manual.html	/^<h2>4.6 &ndash; <a name="4.6">Error Handling in C<\/a><\/h2>$/;"	a
4.7	doc/manual.html	/^<h2>4.7 &ndash; <a name="4.7">Handling Yields in C<\/a><\/h2>$/;"	a
4.8	doc/manual.html	/^<h2>4.8 &ndash; <a name="4.8">Functions and Types<\/a><\/h2>$/;"	a
4.9	doc/manual.html	/^<h2>4.9 &ndash; <a name="4.9">The Debug Interface<\/a><\/h2>$/;"	a
5	doc/manual.html	/^<h1>5 &ndash; <a name="5">The Auxiliary Library<\/a><\/h1>$/;"	a
5.1	doc/manual.html	/^<h2>5.1 &ndash; <a name="5.1">Functions and Types<\/a><\/h2>$/;"	a
6	doc/manual.html	/^<h1>6 &ndash; <a name="6">Standard Libraries<\/a><\/h1>$/;"	a
6.1	doc/manual.html	/^<h2>6.1 &ndash; <a name="6.1">Basic Functions<\/a><\/h2>$/;"	a
6.10	doc/manual.html	/^<h2>6.10 &ndash; <a name="6.10">The Debug Library<\/a><\/h2>$/;"	a
6.2	doc/manual.html	/^<h2>6.2 &ndash; <a name="6.2">Coroutine Manipulation<\/a><\/h2>$/;"	a
6.3	doc/manual.html	/^<h2>6.3 &ndash; <a name="6.3">Modules<\/a><\/h2>$/;"	a
6.4	doc/manual.html	/^<h2>6.4 &ndash; <a name="6.4">String Manipulation<\/a><\/h2>$/;"	a
6.4.1	doc/manual.html	/^<h3>6.4.1 &ndash; <a name="6.4.1">Patterns<\/a><\/h3>$/;"	a
6.4.2	doc/manual.html	/^<h3>6.4.2 &ndash; <a name="6.4.2">Format Strings for Pack and Unpack<\/a><\/h3>$/;"	a
6.5	doc/manual.html	/^<h2>6.5 &ndash; <a name="6.5">UTF-8 Support<\/a><\/h2>$/;"	a
6.6	doc/manual.html	/^<h2>6.6 &ndash; <a name="6.6">Table Manipulation<\/a><\/h2>$/;"	a
6.7	doc/manual.html	/^<h2>6.7 &ndash; <a name="6.7">Mathematical Functions<\/a><\/h2>$/;"	a
6.8	doc/manual.html	/^<h2>6.8 &ndash; <a name="6.8">Input and Output Facilities<\/a><\/h2>$/;"	a
6.9	doc/manual.html	/^<h2>6.9 &ndash; <a name="6.9">Operating System Facilities<\/a><\/h2>$/;"	a
7	doc/manual.html	/^<h1>7 &ndash; <a name="7">Lua Standalone<\/a><\/h1>$/;"	a
8	doc/manual.html	/^<h1>8 &ndash; <a name="8">Incompatibilities with the Previous Version<\/a><\/h1>$/;"	a
8.1	doc/manual.html	/^<h2>8.1 &ndash; <a name="8.1">Changes in the Language<\/a><\/h2>$/;"	a
8.2	doc/manual.html	/^<h2>8.2 &ndash; <a name="8.2">Changes in the Libraries<\/a><\/h2>$/;"	a
8.3	doc/manual.html	/^<h2>8.3 &ndash; <a name="8.3">Changes in the API<\/a><\/h2>$/;"	a
9	doc/manual.html	/^<h1>9 &ndash; <a name="9">The Complete Syntax of Lua<\/a><\/h1>$/;"	a
ALL	src/Makefile	/^ALL= all$/;"	m
ALLONES	src/lbitlib.c	37;"	d	file:
ALL_A	src/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	src/Makefile	/^ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	src/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALPHABIT	src/lctype.h	39;"	d
AR	src/Makefile	/^AR= ar rcu$/;"	m
AUXMARK	src/loadlib.c	272;"	d	file:
AuxsetnodeT	src/ltable.c	/^} AuxsetnodeT;$/;"	t	typeref:struct:__anon2	file:
BASE_O	src/Makefile	/^BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)$/;"	m
BASIC_STACK_SIZE	src/lstate.h	68;"	d
BITRK	src/lopcodes.h	134;"	d
BIT_ISCOLLECTABLE	src/lobject.h	63;"	d
BLACKBIT	src/lgc.h	80;"	d
BinOpr	src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
CAP_POSITION	src/lstrlib.c	211;"	d	file:
CAP_UNFINISHED	src/lstrlib.c	210;"	d	file:
CC	src/Makefile	/^CC= gcc -std=gnu99$/;"	m
CClosure	src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFLAGS	src/Makefile	/^CFLAGS= -fPIC -O2 -Wall -Wextra -DLUA_COMPAT_5_2 $(SYSCFLAGS) $(MYCFLAGS)$/;"	m
CIST_FIN	src/lstate.h	125;"	d
CIST_FRESH	src/lstate.h	119;"	d
CIST_HOOKED	src/lstate.h	118;"	d
CIST_HOOKYIELD	src/lstate.h	123;"	d
CIST_LEQ	src/lstate.h	124;"	d
CIST_LUA	src/lstate.h	117;"	d
CIST_OAH	src/lstate.h	116;"	d
CIST_TAIL	src/lstate.h	122;"	d
CIST_YPCALL	src/lstate.h	121;"	d
CLIBS	src/loadlib.c	/^static const int CLIBS = 0;$/;"	v	file:
CORE_O	src/Makefile	/^CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o \\$/;"	m
CREATE_ABC	src/lopcodes.h	116;"	d
CREATE_ABx	src/lopcodes.h	121;"	d
CREATE_Ax	src/lopcodes.h	125;"	d
CallInfo	src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	src/lapi.c	/^struct CallS {  \/* data to 'f_call' *\/$/;"	s	file:
Closure	src/lobject.h	/^typedef union Closure {$/;"	u
Closure	src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	src/lobject.h	443;"	d
CommonHeader	src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject
CommonHeader	src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	src/lobject.h	/^  CommonHeader;$/;"	m	struct:TString
CommonHeader	src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata
CommonHeader	src/lobject.h	79;"	d
CommonHeader	src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
ConsControl	src/lparser.c	/^struct ConsControl {$/;"	s	file:
DIGITBIT	src/lctype.h	40;"	d
DLMSG	src/loadlib.c	228;"	d	file:
DumpBlock	src/ldump.c	/^static void DumpBlock (const void *b, size_t size, DumpState *D) {$/;"	f	file:
DumpByte	src/ldump.c	/^static void DumpByte (int y, DumpState *D) {$/;"	f	file:
DumpCode	src/ldump.c	/^static void DumpCode (const Proto *f, DumpState *D) {$/;"	f	file:
DumpConstants	src/ldump.c	/^static void DumpConstants (const Proto *f, DumpState *D) {$/;"	f	file:
DumpDebug	src/ldump.c	/^static void DumpDebug (const Proto *f, DumpState *D) {$/;"	f	file:
DumpFunction	src/ldump.c	/^static void DumpFunction (const Proto *f, TString *psource, DumpState *D) {$/;"	f	file:
DumpHeader	src/ldump.c	/^static void DumpHeader (DumpState *D) {$/;"	f	file:
DumpInt	src/ldump.c	/^static void DumpInt (int x, DumpState *D) {$/;"	f	file:
DumpInteger	src/ldump.c	/^static void DumpInteger (lua_Integer x, DumpState *D) {$/;"	f	file:
DumpLiteral	src/ldump.c	37;"	d	file:
DumpNumber	src/ldump.c	/^static void DumpNumber (lua_Number x, DumpState *D) {$/;"	f	file:
DumpProtos	src/ldump.c	/^static void DumpProtos (const Proto *f, DumpState *D) {$/;"	f	file:
DumpState	src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon10	file:
DumpString	src/ldump.c	/^static void DumpString (const TString *s, DumpState *D) {$/;"	f	file:
DumpUpvalues	src/ldump.c	/^static void DumpUpvalues (const Proto *f, DumpState *D) {$/;"	f	file:
DumpVar	src/ldump.c	49;"	d	file:
DumpVector	src/ldump.c	35;"	d	file:
Dyndata	src/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	src/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
EOFMARK	src/lua.c	282;"	d	file:
EOZ	src/lzio.h	16;"	d
ERRFUNC	src/loadlib.c	359;"	d	file:
ERRLIB	src/loadlib.c	358;"	d	file:
ERRORSTACKSIZE	src/ldo.c	174;"	d	file:
EXTRA_STACK	src/lstate.h	65;"	d
FINALIZEDBIT	src/lgc.h	81;"	d
FIRST_RESERVED	src/llex.h	14;"	d
FLAGS	src/lstrlib.c	900;"	d	file:
FUNCTION	src/luac.c	120;"	d	file:
Ftypes	src/lstrlib.c	/^typedef union Ftypes {$/;"	u	file:
Ftypes	src/lstrlib.c	/^} Ftypes;$/;"	t	typeref:union:Ftypes	file:
FuncState	src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
G	src/lstate.h	205;"	d
GCFINALIZECOST	src/lgc.c	45;"	d	file:
GCObject	src/lobject.h	/^struct GCObject {$/;"	s
GCObject	src/lobject.h	/^typedef struct GCObject GCObject;$/;"	t	typeref:struct:GCObject
GCSTEPSIZE	src/lgc.h	32;"	d
GCSWEEPCOST	src/lgc.c	39;"	d	file:
GCSWEEPMAX	src/lgc.c	42;"	d	file:
GCSatomic	src/lgc.h	40;"	d
GCScallfin	src/lgc.h	45;"	d
GCSinsideatomic	src/lgc.c	33;"	d	file:
GCSpause	src/lgc.h	46;"	d
GCSpropagate	src/lgc.h	39;"	d
GCSswpallgc	src/lgc.h	41;"	d
GCSswpend	src/lgc.h	44;"	d
GCSswpfinobj	src/lgc.h	42;"	d
GCSswptobefnz	src/lgc.h	43;"	d
GCTM	src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
GCUnion	src/lstate.h	/^union GCUnion {$/;"	u
GCdebt	src/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	src/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GCmemtrav	src/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State
GETARG_A	src/lopcodes.h	97;"	d
GETARG_Ax	src/lopcodes.h	109;"	d
GETARG_B	src/lopcodes.h	100;"	d
GETARG_Bx	src/lopcodes.h	106;"	d
GETARG_C	src/lopcodes.h	103;"	d
GETARG_sBx	src/lopcodes.h	112;"	d
GET_OPCODE	src/lopcodes.h	89;"	d
GMatchState	src/lstrlib.c	/^typedef struct GMatchState {$/;"	s	file:
GMatchState	src/lstrlib.c	/^} GMatchState;$/;"	t	typeref:struct:GMatchState	file:
HOOKKEY	src/ldblib.c	/^static const int HOOKKEY = 0;$/;"	v	file:
Header	src/lstrlib.c	/^typedef struct Header {$/;"	s	file:
Header	src/lstrlib.c	/^} Header;$/;"	t	typeref:struct:Header	file:
INDEXK	src/lopcodes.h	140;"	d
INSTALL	Makefile	/^INSTALL= install -p$/;"	m
INSTALL_BIN	Makefile	/^INSTALL_BIN= $(INSTALL_TOP)\/bin$/;"	m
INSTALL_CMOD	Makefile	/^INSTALL_CMOD= $(INSTALL_TOP)\/lib\/lua\/$V$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA= $(INSTALL) -m 0644$/;"	m
INSTALL_EXEC	Makefile	/^INSTALL_EXEC= $(INSTALL) -m 0755$/;"	m
INSTALL_INC	Makefile	/^INSTALL_INC= $(INSTALL_TOP)\/include$/;"	m
INSTALL_LIB	Makefile	/^INSTALL_LIB= $(INSTALL_TOP)\/lib$/;"	m
INSTALL_LMOD	Makefile	/^INSTALL_LMOD= $(INSTALL_TOP)\/share\/lua\/$V$/;"	m
INSTALL_MAN	Makefile	/^INSTALL_MAN= $(INSTALL_TOP)\/man\/man1$/;"	m
INSTALL_TOP	Makefile	/^INSTALL_TOP= \/usr\/local$/;"	m
IOPREF_LEN	src/liolib.c	137;"	d	file:
IO_INPUT	src/liolib.c	138;"	d	file:
IO_OUTPUT	src/liolib.c	139;"	d	file:
IO_PREFIX	src/liolib.c	136;"	d	file:
IS	src/luac.c	70;"	d	file:
ISK	src/lopcodes.h	137;"	d
IdxT	src/ltablib.c	/^typedef unsigned int IdxT;$/;"	t	file:
Instruction	src/llimits.h	/^typedef unsigned int Instruction;$/;"	t
Instruction	src/llimits.h	/^typedef unsigned long Instruction;$/;"	t
KGC_EMERGENCY	src/lstate.h	73;"	d
KGC_NORMAL	src/lstate.h	72;"	d
KOption	src/lstrlib.c	/^typedef enum KOption {$/;"	g	file:
KOption	src/lstrlib.c	/^} KOption;$/;"	t	typeref:enum:KOption	file:
Kchar	src/lstrlib.c	/^  Kchar,	\/* fixed-length strings *\/$/;"	e	enum:KOption	file:
Kfloat	src/lstrlib.c	/^  Kfloat,	\/* floating-point numbers *\/$/;"	e	enum:KOption	file:
Kint	src/lstrlib.c	/^  Kint,		\/* signed integers *\/$/;"	e	enum:KOption	file:
Knop	src/lstrlib.c	/^  Knop		\/* no-op (configuration or spaces) *\/$/;"	e	enum:KOption	file:
Kpaddalign	src/lstrlib.c	/^  Kpaddalign,	\/* padding for alignment *\/$/;"	e	enum:KOption	file:
Kpadding	src/lstrlib.c	/^  Kpadding,	\/* padding *\/$/;"	e	enum:KOption	file:
Kstring	src/lstrlib.c	/^  Kstring,	\/* strings with prefixed length *\/$/;"	e	enum:KOption	file:
Kuint	src/lstrlib.c	/^  Kuint,	\/* unsigned integers *\/$/;"	e	enum:KOption	file:
Kzstr	src/lstrlib.c	/^  Kzstr,	\/* zero-terminated strings *\/$/;"	e	enum:KOption	file:
L	src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	src/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon10	file:
L	src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:
L	src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	src/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon7	file:
L	src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
LClosure	src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDFLAGS	src/Makefile	/^LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)$/;"	m
LEVELS1	src/lauxlib.c	37;"	d	file:
LEVELS2	src/lauxlib.c	38;"	d	file:
LEintfloat	src/lvm.c	/^static int LEintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LEnum	src/lvm.c	/^static int LEnum (const TValue *l, const TValue *r) {$/;"	f	file:
LFIELDS_PER_FLUSH	src/lopcodes.h	294;"	d
LG	src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBS	src/Makefile	/^LIBS= -lm $(SYSLIBS) $(MYLIBS)$/;"	m
LIB_FAIL	src/loadlib.c	224;"	d	file:
LIB_FAIL	src/loadlib.c	225;"	d	file:
LIB_FAIL	src/loadlib.c	64;"	d	file:
LIB_O	src/Makefile	/^LIB_O=	lauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o \\$/;"	m
LL	src/lobject.c	479;"	d	file:
LStream	src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LTintfloat	src/lvm.c	/^static int LTintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LTnum	src/lvm.c	/^static int LTnum (const TValue *l, const TValue *r) {$/;"	f	file:
LUAC_DATA	src/lundump.h	16;"	d
LUAC_FORMAT	src/lundump.h	23;"	d
LUAC_INT	src/lundump.h	18;"	d
LUAC_NUM	src/lundump.h	19;"	d
LUAC_O	src/Makefile	/^LUAC_O=	luac.o$/;"	m
LUAC_T	src/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	src/lundump.h	22;"	d
LUAI_BITSINT	src/luaconf.h	91;"	d
LUAI_BITSINT	src/luaconf.h	94;"	d
LUAI_DDEC	src/luaconf.h	285;"	d
LUAI_DDEF	src/luaconf.h	286;"	d
LUAI_FUNC	src/luaconf.h	280;"	d
LUAI_FUNC	src/luaconf.h	282;"	d
LUAI_GCMUL	src/lstate.c	36;"	d	file:
LUAI_GCPAUSE	src/lstate.c	32;"	d	file:
LUAI_HASHLIMIT	src/lstring.c	33;"	d	file:
LUAI_MAXCCALLS	src/llimits.h	153;"	d
LUAI_MAXSHORTLEN	src/llimits.h	177;"	d
LUAI_MAXSTACK	src/luaconf.h	729;"	d
LUAI_MAXSTACK	src/luaconf.h	731;"	d
LUAI_THROW	src/ldo.c	58;"	d	file:
LUAI_THROW	src/ldo.c	66;"	d	file:
LUAI_THROW	src/ldo.c	73;"	d	file:
LUAI_TRY	src/ldo.c	59;"	d	file:
LUAI_TRY	src/ldo.c	67;"	d	file:
LUAI_TRY	src/ldo.c	74;"	d	file:
LUAI_UACINT	src/luaconf.h	528;"	d
LUAI_UACNUMBER	src/luaconf.h	461;"	d
LUAI_UACNUMBER	src/luaconf.h	477;"	d
LUAI_UACNUMBER	src/luaconf.h	492;"	d
LUALIB_API	src/luaconf.h	260;"	d
LUAL_BUFFERSIZE	src/luaconf.h	759;"	d
LUAL_BUFFERSIZE	src/luaconf.h	761;"	d
LUAL_NUMSIZES	src/lauxlib.h	37;"	d
LUAL_PACKPADBYTE	src/lstrlib.c	1107;"	d	file:
LUAMOD_API	src/luaconf.h	261;"	d
LUA_A	src/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_API	src/luaconf.h	247;"	d
LUA_API	src/luaconf.h	249;"	d
LUA_API	src/luaconf.h	254;"	d
LUA_AUTHORS	src/lua.h	27;"	d
LUA_BITLIBNAME	src/lualib.h	38;"	d
LUA_C89_NUMBERS	src/luaconf.h	81;"	d
LUA_CDIR	src/luaconf.h	189;"	d
LUA_CDIR	src/luaconf.h	205;"	d
LUA_COLIBNAME	src/lualib.h	20;"	d
LUA_COMPAT_APIINTCASTS	src/luaconf.h	326;"	d
LUA_COMPAT_APIINTCASTS	src/luaconf.h	335;"	d
LUA_COMPAT_BITLIB	src/luaconf.h	314;"	d
LUA_COMPAT_IPAIRS	src/luaconf.h	319;"	d
LUA_COMPAT_LOADERS	src/luaconf.h	347;"	d
LUA_COMPAT_LOADSTRING	src/luaconf.h	369;"	d
LUA_COMPAT_LOG10	src/luaconf.h	363;"	d
LUA_COMPAT_MATHLIB	src/luaconf.h	309;"	d
LUA_COMPAT_MATHLIB	src/luaconf.h	334;"	d
LUA_COMPAT_MAXN	src/luaconf.h	374;"	d
LUA_COMPAT_MODULE	src/luaconf.h	392;"	d
LUA_COMPAT_UNPACK	src/luaconf.h	341;"	d
LUA_COPYRIGHT	src/lua.h	26;"	d
LUA_CORE	src/lapi.c	8;"	d	file:
LUA_CORE	src/lcode.c	8;"	d	file:
LUA_CORE	src/lctype.c	8;"	d	file:
LUA_CORE	src/ldebug.c	8;"	d	file:
LUA_CORE	src/ldo.c	8;"	d	file:
LUA_CORE	src/ldump.c	8;"	d	file:
LUA_CORE	src/lfunc.c	8;"	d	file:
LUA_CORE	src/lgc.c	8;"	d	file:
LUA_CORE	src/llex.c	8;"	d	file:
LUA_CORE	src/lmem.c	8;"	d	file:
LUA_CORE	src/lobject.c	8;"	d	file:
LUA_CORE	src/lopcodes.c	8;"	d	file:
LUA_CORE	src/lparser.c	8;"	d	file:
LUA_CORE	src/lstate.c	8;"	d	file:
LUA_CORE	src/lstring.c	8;"	d	file:
LUA_CORE	src/ltable.c	8;"	d	file:
LUA_CORE	src/ltm.c	8;"	d	file:
LUA_CORE	src/luac.c	218;"	d	file:
LUA_CORE	src/luac.c	8;"	d	file:
LUA_CORE	src/lundump.c	8;"	d	file:
LUA_CORE	src/lvm.c	8;"	d	file:
LUA_CORE	src/lzio.c	8;"	d	file:
LUA_CPATH_DEFAULT	src/luaconf.h	196;"	d
LUA_CPATH_DEFAULT	src/luaconf.h	210;"	d
LUA_CPATH_VAR	src/loadlib.c	268;"	d	file:
LUA_CSUBSEP	src/loadlib.c	43;"	d	file:
LUA_DBLIBNAME	src/lualib.h	44;"	d
LUA_DIRSEP	src/luaconf.h	221;"	d
LUA_DIRSEP	src/luaconf.h	223;"	d
LUA_DL_DLL	src/luaconf.h	56;"	d
LUA_ENV	src/llex.h	18;"	d
LUA_ERRERR	src/lua.h	53;"	d
LUA_ERRFILE	src/lauxlib.h	20;"	d
LUA_ERRGCMM	src/lua.h	52;"	d
LUA_ERRMEM	src/lua.h	51;"	d
LUA_ERRRUN	src/lua.h	49;"	d
LUA_ERRSYNTAX	src/lua.h	50;"	d
LUA_EXEC_DIR	src/luaconf.h	170;"	d
LUA_EXTRASPACE	src/luaconf.h	740;"	d
LUA_FILEHANDLE	src/lauxlib.h	190;"	d
LUA_FLOAT_DOUBLE	src/luaconf.h	115;"	d
LUA_FLOAT_FLOAT	src/luaconf.h	114;"	d
LUA_FLOAT_LONGDOUBLE	src/luaconf.h	116;"	d
LUA_FLOAT_TYPE	src/luaconf.h	127;"	d
LUA_FLOAT_TYPE	src/luaconf.h	134;"	d
LUA_FLOAT_TYPE	src/luaconf.h	147;"	d
LUA_FLOORN2I	src/lvm.h	36;"	d
LUA_GCCOLLECT	src/lua.h	304;"	d
LUA_GCCOUNT	src/lua.h	305;"	d
LUA_GCCOUNTB	src/lua.h	306;"	d
LUA_GCISRUNNING	src/lua.h	310;"	d
LUA_GCRESTART	src/lua.h	303;"	d
LUA_GCSETPAUSE	src/lua.h	308;"	d
LUA_GCSETSTEPMUL	src/lua.h	309;"	d
LUA_GCSTEP	src/lua.h	307;"	d
LUA_GCSTOP	src/lua.h	302;"	d
LUA_HOOKCALL	src/lua.h	402;"	d
LUA_HOOKCOUNT	src/lua.h	405;"	d
LUA_HOOKLINE	src/lua.h	404;"	d
LUA_HOOKRET	src/lua.h	403;"	d
LUA_HOOKTAILCALL	src/lua.h	406;"	d
LUA_IDSIZE	src/luaconf.h	748;"	d
LUA_IGMARK	src/loadlib.c	32;"	d	file:
LUA_INITVARVERSION	src/lua.c	41;"	d	file:
LUA_INIT_VAR	src/lua.c	38;"	d	file:
LUA_INTEGER	src/luaconf.h	544;"	d
LUA_INTEGER	src/luaconf.h	552;"	d
LUA_INTEGER	src/luaconf.h	564;"	d
LUA_INTEGER	src/luaconf.h	573;"	d
LUA_INTEGER_FMT	src/luaconf.h	526;"	d
LUA_INTEGER_FRMLEN	src/luaconf.h	545;"	d
LUA_INTEGER_FRMLEN	src/luaconf.h	553;"	d
LUA_INTEGER_FRMLEN	src/luaconf.h	565;"	d
LUA_INTEGER_FRMLEN	src/luaconf.h	574;"	d
LUA_INT_INT	src/luaconf.h	109;"	d
LUA_INT_LONG	src/luaconf.h	110;"	d
LUA_INT_LONGLONG	src/luaconf.h	111;"	d
LUA_INT_TYPE	src/luaconf.h	123;"	d
LUA_INT_TYPE	src/luaconf.h	125;"	d
LUA_INT_TYPE	src/luaconf.h	133;"	d
LUA_INT_TYPE	src/luaconf.h	143;"	d
LUA_IOLIBNAME	src/lualib.h	26;"	d
LUA_KCONTEXT	src/luaconf.h	662;"	d
LUA_KCONTEXT	src/luaconf.h	668;"	d
LUA_KCONTEXT	src/luaconf.h	669;"	d
LUA_LDIR	src/luaconf.h	188;"	d
LUA_LDIR	src/luaconf.h	204;"	d
LUA_LIB	src/lauxlib.c	8;"	d	file:
LUA_LIB	src/lbaselib.c	8;"	d	file:
LUA_LIB	src/lbitlib.c	8;"	d	file:
LUA_LIB	src/lcorolib.c	8;"	d	file:
LUA_LIB	src/ldblib.c	8;"	d	file:
LUA_LIB	src/linit.c	9;"	d	file:
LUA_LIB	src/liolib.c	8;"	d	file:
LUA_LIB	src/lmathlib.c	8;"	d	file:
LUA_LIB	src/loadlib.c	12;"	d	file:
LUA_LIB	src/loslib.c	8;"	d	file:
LUA_LIB	src/lstrlib.c	8;"	d	file:
LUA_LIB	src/ltablib.c	8;"	d	file:
LUA_LIB	src/lutf8lib.c	8;"	d	file:
LUA_LLE_FLAGS	src/loadlib.c	157;"	d	file:
LUA_LOADED_TABLE	src/lauxlib.h	24;"	d
LUA_LOADLIBNAME	src/lualib.h	47;"	d
LUA_LSUBSEP	src/loadlib.c	47;"	d	file:
LUA_MASKCALL	src/lua.h	412;"	d
LUA_MASKCOUNT	src/lua.h	415;"	d
LUA_MASKLINE	src/lua.h	414;"	d
LUA_MASKRET	src/lua.h	413;"	d
LUA_MATHLIBNAME	src/lualib.h	41;"	d
LUA_MAXCAPTURES	src/lstrlib.c	34;"	d	file:
LUA_MAXINPUT	src/lua.c	34;"	d	file:
LUA_MAXINTEGER	src/luaconf.h	547;"	d
LUA_MAXINTEGER	src/luaconf.h	555;"	d
LUA_MAXINTEGER	src/luaconf.h	567;"	d
LUA_MAXINTEGER	src/luaconf.h	576;"	d
LUA_MINBUFFER	src/llimits.h	205;"	d
LUA_MININTEGER	src/luaconf.h	548;"	d
LUA_MININTEGER	src/luaconf.h	556;"	d
LUA_MININTEGER	src/luaconf.h	568;"	d
LUA_MININTEGER	src/luaconf.h	577;"	d
LUA_MINSTACK	src/lua.h	79;"	d
LUA_MULTRET	src/lua.h	34;"	d
LUA_NBITS	src/lbitlib.c	28;"	d	file:
LUA_NOREF	src/lauxlib.h	77;"	d
LUA_NUMBER	src/luaconf.h	457;"	d
LUA_NUMBER	src/luaconf.h	473;"	d
LUA_NUMBER	src/luaconf.h	488;"	d
LUA_NUMBER_FMT	src/luaconf.h	464;"	d
LUA_NUMBER_FMT	src/luaconf.h	480;"	d
LUA_NUMBER_FMT	src/luaconf.h	495;"	d
LUA_NUMBER_FRMLEN	src/luaconf.h	463;"	d
LUA_NUMBER_FRMLEN	src/luaconf.h	479;"	d
LUA_NUMBER_FRMLEN	src/luaconf.h	494;"	d
LUA_NUMTAGS	src/lua.h	74;"	d
LUA_O	src/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	src/loadlib.c	55;"	d	file:
LUA_OK	src/lua.h	47;"	d
LUA_OPADD	src/lua.h	196;"	d
LUA_OPBAND	src/lua.h	203;"	d
LUA_OPBNOT	src/lua.h	209;"	d
LUA_OPBOR	src/lua.h	204;"	d
LUA_OPBXOR	src/lua.h	205;"	d
LUA_OPDIV	src/lua.h	201;"	d
LUA_OPEQ	src/lua.h	213;"	d
LUA_OPIDIV	src/lua.h	202;"	d
LUA_OPLE	src/lua.h	215;"	d
LUA_OPLT	src/lua.h	214;"	d
LUA_OPMOD	src/lua.h	199;"	d
LUA_OPMUL	src/lua.h	198;"	d
LUA_OPPOW	src/lua.h	200;"	d
LUA_OPSHL	src/lua.h	206;"	d
LUA_OPSHR	src/lua.h	207;"	d
LUA_OPSUB	src/lua.h	197;"	d
LUA_OPUNM	src/lua.h	208;"	d
LUA_OSLIBNAME	src/lualib.h	29;"	d
LUA_PATH_DEFAULT	src/luaconf.h	191;"	d
LUA_PATH_DEFAULT	src/luaconf.h	206;"	d
LUA_PATH_MARK	src/luaconf.h	169;"	d
LUA_PATH_SEP	src/luaconf.h	168;"	d
LUA_PATH_VAR	src/loadlib.c	264;"	d	file:
LUA_POF	src/loadlib.c	52;"	d	file:
LUA_PRELOAD_TABLE	src/lauxlib.h	28;"	d
LUA_PROGNAME	src/lua.c	30;"	d	file:
LUA_PROMPT	src/lua.c	25;"	d	file:
LUA_PROMPT2	src/lua.c	26;"	d	file:
LUA_QL	src/luaconf.h	772;"	d
LUA_QS	src/luaconf.h	773;"	d
LUA_REFNIL	src/lauxlib.h	78;"	d
LUA_REGISTRYINDEX	src/lua.h	42;"	d
LUA_RELEASE	src/lua.h	25;"	d
LUA_RIDX_GLOBALS	src/lua.h	84;"	d
LUA_RIDX_LAST	src/lua.h	85;"	d
LUA_RIDX_MAINTHREAD	src/lua.h	83;"	d
LUA_ROOT	src/luaconf.h	203;"	d
LUA_SHRDIR	src/luaconf.h	190;"	d
LUA_SIGNATURE	src/lua.h	31;"	d
LUA_STRFTIMEOPTIONS	src/loslib.c	45;"	d	file:
LUA_STRFTIMEOPTIONS	src/loslib.c	47;"	d	file:
LUA_STRFTIMEOPTIONS	src/loslib.c	49;"	d	file:
LUA_STRLIBNAME	src/lualib.h	32;"	d
LUA_T	src/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	src/lualib.h	23;"	d
LUA_TBOOLEAN	src/lua.h	65;"	d
LUA_TCCL	src/lobject.h	49;"	d
LUA_TDEADKEY	src/lobject.h	23;"	d
LUA_TFUNCTION	src/lua.h	70;"	d
LUA_TLCF	src/lobject.h	48;"	d
LUA_TLCL	src/lobject.h	47;"	d
LUA_TLIGHTUSERDATA	src/lua.h	66;"	d
LUA_TLNGSTR	src/lobject.h	54;"	d
LUA_TMPNAMBUFSIZE	src/loslib.c	115;"	d	file:
LUA_TMPNAMBUFSIZE	src/loslib.c	130;"	d	file:
LUA_TMPNAMTEMPLATE	src/loslib.c	118;"	d	file:
LUA_TNIL	src/lua.h	64;"	d
LUA_TNONE	src/lua.h	62;"	d
LUA_TNUMBER	src/lua.h	67;"	d
LUA_TNUMFLT	src/lobject.h	58;"	d
LUA_TNUMINT	src/lobject.h	59;"	d
LUA_TOTALTAGS	src/lobject.h	28;"	d
LUA_TPROTO	src/lobject.h	22;"	d
LUA_TSHRSTR	src/lobject.h	53;"	d
LUA_TSTRING	src/lua.h	68;"	d
LUA_TTABLE	src/lua.h	69;"	d
LUA_TTHREAD	src/lua.h	72;"	d
LUA_TUSERDATA	src/lua.h	71;"	d
LUA_UNSIGNED	src/luaconf.h	537;"	d
LUA_USE_C89	src/luaconf.h	57;"	d
LUA_USE_CTYPE	src/lctype.h	23;"	d
LUA_USE_CTYPE	src/lctype.h	26;"	d
LUA_USE_DLOPEN	src/luaconf.h	63;"	d
LUA_USE_DLOPEN	src/luaconf.h	70;"	d
LUA_USE_POSIX	src/luaconf.h	62;"	d
LUA_USE_POSIX	src/luaconf.h	69;"	d
LUA_USE_READLINE	src/luaconf.h	64;"	d
LUA_USE_READLINE	src/luaconf.h	71;"	d
LUA_USE_WINDOWS	src/luaconf.h	51;"	d
LUA_UTF8LIBNAME	src/lualib.h	35;"	d
LUA_VDIR	src/luaconf.h	182;"	d
LUA_VERSION	src/lua.h	24;"	d
LUA_VERSION_MAJOR	src/lua.h	19;"	d
LUA_VERSION_MINOR	src/lua.h	20;"	d
LUA_VERSION_NUM	src/lua.h	21;"	d
LUA_VERSION_RELEASE	src/lua.h	22;"	d
LUA_VERSUFFIX	src/lualib.h	15;"	d
LUA_YIELD	src/lua.h	48;"	d
LX	src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	src/lstrlib.c	238;"	d	file:
L_MAXDATEFIELD	src/loslib.c	236;"	d	file:
L_MAXLENNUM	src/liolib.c	385;"	d	file:
L_MAXLENNUM	src/lobject.c	248;"	d	file:
L_MODEEXT	src/liolib.c	36;"	d	file:
L_NBFD	src/lstrlib.c	827;"	d	file:
L_RANDMAX	src/lmathlib.c	30;"	d	file:
L_RANDMAX	src/lmathlib.c	34;"	d	file:
L_STRFTIMEC89	src/loslib.c	34;"	d	file:
L_STRFTIMEC99	src/loslib.c	37;"	d	file:
L_STRFTIMEWIN	src/loslib.c	41;"	d	file:
L_Umaxalign	src/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
L_Umaxalign	src/llimits.h	/^} L_Umaxalign;$/;"	t	typeref:union:__anon1
Labeldesc	src/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	src/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	src/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	src/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LexState	src/llex.h	/^typedef struct LexState {$/;"	s
LexState	src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LoadBlock	src/lundump.c	/^static void LoadBlock (LoadState *S, void *b, size_t size) {$/;"	f	file:
LoadByte	src/lundump.c	/^static lu_byte LoadByte (LoadState *S) {$/;"	f	file:
LoadCode	src/lundump.c	/^static void LoadCode (LoadState *S, Proto *f) {$/;"	f	file:
LoadConstants	src/lundump.c	/^static void LoadConstants (LoadState *S, Proto *f) {$/;"	f	file:
LoadDebug	src/lundump.c	/^static void LoadDebug (LoadState *S, Proto *f) {$/;"	f	file:
LoadF	src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	src/lundump.c	/^static void LoadFunction (LoadState *S, Proto *f, TString *psource) {$/;"	f	file:
LoadInt	src/lundump.c	/^static int LoadInt (LoadState *S) {$/;"	f	file:
LoadInteger	src/lundump.c	/^static lua_Integer LoadInteger (LoadState *S) {$/;"	f	file:
LoadNumber	src/lundump.c	/^static lua_Number LoadNumber (LoadState *S) {$/;"	f	file:
LoadProtos	src/lundump.c	/^static void LoadProtos (LoadState *S, Proto *f) {$/;"	f	file:
LoadS	src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon7	file:
LoadString	src/lundump.c	/^static TString *LoadString (LoadState *S) {$/;"	f	file:
LoadUpvalues	src/lundump.c	/^static void LoadUpvalues (LoadState *S, Proto *f) {$/;"	f	file:
LoadVar	src/lundump.c	57;"	d	file:
LoadVector	src/lundump.c	49;"	d	file:
LocVar	src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
MASK	src/lctype.h	46;"	d
MASK0	src/lopcodes.h	83;"	d
MASK1	src/lopcodes.h	80;"	d
MAXABITS	src/ltable.c	46;"	d	file:
MAXALIGN	src/lstrlib.c	1136;"	d	file:
MAXARGLINE	src/liolib.c	337;"	d	file:
MAXARG_A	src/lopcodes.h	74;"	d
MAXARG_Ax	src/lopcodes.h	68;"	d
MAXARG_Ax	src/lopcodes.h	70;"	d
MAXARG_B	src/lopcodes.h	75;"	d
MAXARG_Bx	src/lopcodes.h	60;"	d
MAXARG_Bx	src/lopcodes.h	63;"	d
MAXARG_C	src/lopcodes.h	76;"	d
MAXARG_sBx	src/lopcodes.h	61;"	d
MAXARG_sBx	src/lopcodes.h	64;"	d
MAXASIZE	src/ltable.c	47;"	d	file:
MAXBY10	src/lobject.c	296;"	d	file:
MAXCCALLS	src/lstrlib.c	234;"	d	file:
MAXHBITS	src/ltable.c	55;"	d	file:
MAXINDEXRK	src/lopcodes.h	143;"	d
MAXINTSIZE	src/lstrlib.c	1111;"	d	file:
MAXLASTD	src/lobject.c	297;"	d	file:
MAXNUMBER2STR	src/lobject.c	365;"	d	file:
MAXREGS	src/lcode.c	33;"	d	file:
MAXSIGDIG	src/lobject.c	187;"	d	file:
MAXSIZE	src/lstrlib.c	48;"	d	file:
MAXTAGLOOP	src/lvm.c	35;"	d	file:
MAXUNICODE	src/lutf8lib.c	23;"	d	file:
MAXUPVAL	src/lfunc.h	29;"	d
MAXVARS	src/lparser.c	34;"	d	file:
MAX_FORMAT	src/lstrlib.c	905;"	d	file:
MAX_INT	src/llimits.h	51;"	d
MAX_ITEM	src/lstrlib.c	896;"	d	file:
MAX_LMEM	src/llimits.h	48;"	d
MAX_LUMEM	src/llimits.h	46;"	d
MAX_SIZE	src/llimits.h	42;"	d
MAX_SIZET	src/llimits.h	39;"	d
MAX_SIZET	src/lstrlib.c	46;"	d	file:
MC	src/lstrlib.c	1117;"	d	file:
MEMERRMSG	src/lstring.c	25;"	d	file:
MINSIZEARRAY	src/lmem.c	45;"	d	file:
MINSTRTABSIZE	src/llimits.h	188;"	d
MKDIR	Makefile	/^MKDIR= mkdir -p$/;"	m
MYCFLAGS	src/Makefile	/^MYCFLAGS=$/;"	m
MYINT	src/lundump.h	21;"	d
MYK	src/luac.c	286;"	d	file:
MYLDFLAGS	src/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	src/Makefile	/^MYLIBS=$/;"	m
MYOBJS	src/Makefile	/^MYOBJS=$/;"	m
MatchState	src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
NB	src/lstrlib.c	1114;"	d	file:
NBITS	src/lvm.c	588;"	d	file:
NBM	src/lvm.c	47;"	d	file:
NILCONSTANT	src/lobject.h	120;"	d
NONVALIDVALUE	src/lapi.c	40;"	d	file:
NO_JUMP	src/lcode.h	20;"	d
NO_REG	src/lopcodes.h	153;"	d
NUM_OPCODES	src/lopcodes.h	237;"	d
NUM_RESERVED	src/llex.h	40;"	d
Node	src/lobject.h	/^typedef struct Node {$/;"	s
Node	src/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
OPR_ADD	src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_BAND	src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BNOT	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_BOR	src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BXOR	src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_CONCAT	src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	src/lcode.h	/^  OPR_DIV,$/;"	e	enum:BinOpr
OPR_EQ	src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_IDIV	src/lcode.h	/^  OPR_IDIV,$/;"	e	enum:BinOpr
OPR_LE	src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SHL	src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SHR	src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SUB	src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	src/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon15
OP_BAND	src/lopcodes.h	/^OP_BAND,\/*	A B C	R(A) := RK(B) & RK(C)				*\/$/;"	e	enum:__anon15
OP_BNOT	src/lopcodes.h	/^OP_BNOT,\/*	A B	R(A) := ~R(B)					*\/$/;"	e	enum:__anon15
OP_BOR	src/lopcodes.h	/^OP_BOR,\/*	A B C	R(A) := RK(B) | RK(C)				*\/$/;"	e	enum:__anon15
OP_BXOR	src/lopcodes.h	/^OP_BXOR,\/*	A B C	R(A) := RK(B) ~ RK(C)				*\/$/;"	e	enum:__anon15
OP_CALL	src/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon15
OP_CLOSURE	src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon15
OP_CONCAT	src/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon15
OP_DIV	src/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon15
OP_EQ	src/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon15
OP_EXTRAARG	src/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon15
OP_FORLOOP	src/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon15
OP_FORPREP	src/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon15
OP_GETTABLE	src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon15
OP_GETTABUP	src/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R(A) := UpValue[B][RK(C)]			*\/$/;"	e	enum:__anon15
OP_GETUPVAL	src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon15
OP_IDIV	src/lopcodes.h	/^OP_IDIV,\/*	A B C	R(A) := RK(B) \/\/ RK(C)				*\/$/;"	e	enum:__anon15
OP_JMP	src/lopcodes.h	/^OP_JMP,\/*	A sBx	pc+=sBx; if (A) close all upvalues >= R(A - 1)	*\/$/;"	e	enum:__anon15
OP_LE	src/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon15
OP_LEN	src/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon15
OP_LOADBOOL	src/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon15
OP_LOADK	src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon15
OP_LOADKX	src/lopcodes.h	/^OP_LOADKX,\/*	A 	R(A) := Kst(extra arg)				*\/$/;"	e	enum:__anon15
OP_LOADNIL	src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A), R(A+1), ..., R(A+B) := nil		*\/$/;"	e	enum:__anon15
OP_LT	src/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon15
OP_MOD	src/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon15
OP_MOVE	src/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon15
OP_MUL	src/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon15
OP_NEWTABLE	src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon15
OP_NOT	src/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon15
OP_POW	src/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon15
OP_RETURN	src/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon15
OP_SELF	src/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon15
OP_SETLIST	src/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon15
OP_SETTABLE	src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon15
OP_SETTABUP	src/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][RK(B)] := RK(C)			*\/$/;"	e	enum:__anon15
OP_SETUPVAL	src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon15
OP_SHL	src/lopcodes.h	/^OP_SHL,\/*	A B C	R(A) := RK(B) << RK(C)				*\/$/;"	e	enum:__anon15
OP_SHR	src/lopcodes.h	/^OP_SHR,\/*	A B C	R(A) := RK(B) >> RK(C)				*\/$/;"	e	enum:__anon15
OP_SUB	src/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon15
OP_TAILCALL	src/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon15
OP_TEST	src/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/$/;"	e	enum:__anon15
OP_TESTSET	src/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/$/;"	e	enum:__anon15
OP_TFORCALL	src/lopcodes.h	/^OP_TFORCALL,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));	*\/$/;"	e	enum:__anon15
OP_TFORLOOP	src/lopcodes.h	/^OP_TFORLOOP,\/*	A sBx	if R(A+1) ~= nil then { R(A)=R(A+1); pc += sBx }*\/$/;"	e	enum:__anon15
OP_UNM	src/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon15
OP_VARARG	src/lopcodes.h	/^OP_VARARG,\/*	A B	R(A), R(A+1), ..., R(A+B-2) = vararg		*\/$/;"	e	enum:__anon15
OUTPUT	src/luac.c	29;"	d	file:
OpArgK	src/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	src/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	src/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	src/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	src/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon15
OpMode	src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	g
Output	src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
PAUSEADJ	src/lgc.c	59;"	d	file:
PI	src/lmathlib.c	22;"	d	file:
PI	src/lmathlib.c	23;"	d	file:
PLAT	Makefile	/^PLAT= none$/;"	m
PLAT	src/Makefile	/^PLAT= none$/;"	m
PLATS	Makefile	/^PLATS= aix bsd c89 freebsd generic linux macosx mingw posix solaris$/;"	m
PLATS	src/Makefile	/^PLATS= aix bsd c89 freebsd generic linux macosx mingw posix solaris$/;"	m
POS	src/lobject.c	483;"	d	file:
POS_A	src/lopcodes.h	47;"	d
POS_Ax	src/lopcodes.h	51;"	d
POS_B	src/lopcodes.h	49;"	d
POS_Bx	src/lopcodes.h	50;"	d
POS_C	src/lopcodes.h	48;"	d
POS_OP	src/lopcodes.h	46;"	d
PRE	src/lobject.c	482;"	d	file:
PRINTBIT	src/lctype.h	41;"	d
PROGNAME	src/luac.c	28;"	d	file:
Pfunc	src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PrintCode	src/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	src/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintDebug	src/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:
PrintFunction	src/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:
PrintHeader	src/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintString	src/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:
Protect	src/lvm.c	747;"	d	file:
Proto	src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
R	Makefile	/^R= $V.4$/;"	m
RA	src/lvm.c	728;"	d	file:
RANLIB	src/Makefile	/^RANLIB= ranlib$/;"	m
RANLIMIT	src/ltablib.c	274;"	d	file:
RB	src/lvm.c	729;"	d	file:
RC	src/lvm.c	730;"	d	file:
RESERVED	src/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	src/lbaselib.c	308;"	d	file:
RETS	src/lobject.c	481;"	d	file:
RKASK	src/lopcodes.h	147;"	d
RKB	src/lvm.c	731;"	d	file:
RKC	src/lvm.c	733;"	d	file:
RM	Makefile	/^RM= rm -f$/;"	m
RM	src/Makefile	/^RM= rm -f$/;"	m
RN	src/liolib.c	/^} RN;$/;"	t	typeref:struct:__anon23	file:
S	src/luac.c	394;"	d	file:
SETARG_A	src/lopcodes.h	98;"	d
SETARG_Ax	src/lopcodes.h	110;"	d
SETARG_B	src/lopcodes.h	101;"	d
SETARG_Bx	src/lopcodes.h	107;"	d
SETARG_C	src/lopcodes.h	104;"	d
SETARG_sBx	src/lopcodes.h	113;"	d
SET_OPCODE	src/lopcodes.h	90;"	d
SIZELENMOD	src/lstrlib.c	818;"	d	file:
SIZETIMEFMT	src/loslib.c	280;"	d	file:
SIZE_A	src/lopcodes.h	41;"	d
SIZE_Ax	src/lopcodes.h	42;"	d
SIZE_B	src/lopcodes.h	39;"	d
SIZE_Bx	src/lopcodes.h	40;"	d
SIZE_C	src/lopcodes.h	38;"	d
SIZE_OP	src/lopcodes.h	44;"	d
SPACEBIT	src/lctype.h	42;"	d
SPACECHARS	src/lbaselib.c	46;"	d	file:
SPECIALS	src/lstrlib.c	239;"	d	file:
SParser	src/ldo.c	/^struct SParser {  \/* data to 'f_parser' *\/$/;"	s	file:
SS	src/luac.c	393;"	d	file:
STEPMULADJ	src/lgc.c	52;"	d	file:
STRCACHE_M	src/llimits.h	199;"	d
STRCACHE_N	src/llimits.h	198;"	d
SYSCFLAGS	src/Makefile	/^SYSCFLAGS=$/;"	m
SYSLDFLAGS	src/Makefile	/^SYSLDFLAGS=$/;"	m
SYSLIBS	src/Makefile	/^SYSLIBS=$/;"	m
SZINT	src/lstrlib.c	1120;"	d	file:
SemInfo	src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon16
StkId	src/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
TAB_L	src/ltablib.c	29;"	d	file:
TAB_R	src/ltablib.c	27;"	d	file:
TAB_RW	src/ltablib.c	30;"	d	file:
TAB_W	src/ltablib.c	28;"	d	file:
TK_AND	src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_DBCOLON	src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_ELSE	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_FALSE	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FLT	src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_FOR	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_GOTO	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IDIV	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_IF	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_INT	src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_LE	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_LOCAL	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_NIL	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_OR	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_SHL	src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_SHR	src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_STRING	src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	src/lobject.h	/^typedef union TKey {$/;"	u
TKey	src/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TMS	src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon3
TM_ADD	src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon3
TM_BAND	src/ltm.h	/^  TM_BAND,$/;"	e	enum:__anon3
TM_BNOT	src/ltm.h	/^  TM_BNOT,$/;"	e	enum:__anon3
TM_BOR	src/ltm.h	/^  TM_BOR,$/;"	e	enum:__anon3
TM_BXOR	src/ltm.h	/^  TM_BXOR,$/;"	e	enum:__anon3
TM_CALL	src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon3
TM_CONCAT	src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon3
TM_DIV	src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon3
TM_EQ	src/ltm.h	/^  TM_EQ,  \/* last tag method with fast access *\/$/;"	e	enum:__anon3
TM_GC	src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon3
TM_IDIV	src/ltm.h	/^  TM_IDIV,$/;"	e	enum:__anon3
TM_INDEX	src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon3
TM_LE	src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon3
TM_LEN	src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon3
TM_LT	src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon3
TM_MOD	src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon3
TM_MODE	src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon3
TM_MUL	src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon3
TM_N	src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon3
TM_NEWINDEX	src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon3
TM_POW	src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon3
TM_SHL	src/ltm.h	/^  TM_SHL,$/;"	e	enum:__anon3
TM_SHR	src/ltm.h	/^  TM_SHR,$/;"	e	enum:__anon3
TM_SUB	src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon3
TM_UNM	src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon3
TO_BIN	Makefile	/^TO_BIN= lua luac$/;"	m
TO_INC	Makefile	/^TO_INC= lua.h luaconf.h lualib.h lauxlib.h lua.hpp$/;"	m
TO_LIB	Makefile	/^TO_LIB= liblua.a$/;"	m
TO_MAN	Makefile	/^TO_MAN= lua.1 luac.1$/;"	m
TString	src/lobject.h	/^typedef struct TString {$/;"	s
TString	src/lobject.h	/^} TString;$/;"	t	typeref:struct:TString
TValue	src/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon9
TValuefields	src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	src/lobject.h	110;"	d
Table	src/lobject.h	/^typedef struct Table {$/;"	s
Table	src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Token	src/llex.h	/^typedef struct Token {$/;"	s
Token	src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
UBox	src/lauxlib.c	/^typedef struct UBox {$/;"	s	file:
UBox	src/lauxlib.c	/^} UBox;$/;"	t	typeref:struct:UBox	file:
UNARY_PRIORITY	src/lparser.c	1041;"	d	file:
UNUSED	src/llimits.h	106;"	d
UPVALNAME	src/luac.c	285;"	d	file:
UTF8BUFFSZ	src/lobject.h	531;"	d
UTF8PATT	src/lutf8lib.c	235;"	d	file:
UTString	src/lobject.h	/^typedef union UTString {$/;"	u
UTString	src/lobject.h	/^} UTString;$/;"	t	typeref:union:UTString
UUdata	src/lobject.h	/^typedef union UUdata {$/;"	u
UUdata	src/lobject.h	/^} UUdata;$/;"	t	typeref:union:UUdata
Udata	src/lobject.h	/^typedef struct Udata {$/;"	s
Udata	src/lobject.h	/^} Udata;$/;"	t	typeref:struct:Udata
UnOpr	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	src/lfunc.h	/^struct UpVal {$/;"	s
UpVal	src/lobject.h	/^typedef struct UpVal UpVal;$/;"	t	typeref:struct:UpVal
Upvaldesc	src/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	src/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
V	Makefile	/^V= 5.3$/;"	m
VCALL	src/lparser.h	/^  VCALL,  \/* expression is a function call; info = instruction pc *\/$/;"	e	enum:__anon17
VFALSE	src/lparser.h	/^  VFALSE,  \/* constant false *\/$/;"	e	enum:__anon17
VINDEXED	src/lparser.h	/^  VINDEXED,  \/* indexed variable;$/;"	e	enum:__anon17
VJMP	src/lparser.h	/^  VJMP,  \/* expression is a test\/comparison;$/;"	e	enum:__anon17
VK	src/lparser.h	/^  VK,  \/* constant in 'k'; info = index of constant in 'k' *\/$/;"	e	enum:__anon17
VKFLT	src/lparser.h	/^  VKFLT,  \/* floating constant; nval = numerical float value *\/$/;"	e	enum:__anon17
VKINT	src/lparser.h	/^  VKINT,  \/* integer constant; nval = numerical integer value *\/$/;"	e	enum:__anon17
VLOCAL	src/lparser.h	/^  VLOCAL,  \/* local variable; info = local register *\/$/;"	e	enum:__anon17
VNIL	src/lparser.h	/^  VNIL,  \/* constant nil *\/$/;"	e	enum:__anon17
VNONRELOC	src/lparser.h	/^  VNONRELOC,  \/* expression has its value in a fixed register;$/;"	e	enum:__anon17
VOID	src/luac.c	224;"	d	file:
VRELOCABLE	src/lparser.h	/^  VRELOCABLE,  \/* expression can put result in any register;$/;"	e	enum:__anon17
VTRUE	src/lparser.h	/^  VTRUE,  \/* constant true *\/$/;"	e	enum:__anon17
VUPVAL	src/lparser.h	/^  VUPVAL,  \/* upvalue variable; info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon17
VVARARG	src/lparser.h	/^  VVARARG  \/* vararg expression; info = instruction pc *\/$/;"	e	enum:__anon17
VVOID	src/lparser.h	/^  VVOID,  \/* when 'expdesc' describes the last expression a list,$/;"	e	enum:__anon17
Value	src/lobject.h	/^typedef union Value {$/;"	u
Value	src/lobject.h	/^} Value;$/;"	t	typeref:union:Value
Vardesc	src/lparser.h	/^typedef struct Vardesc {$/;"	s
Vardesc	src/lparser.h	/^} Vardesc;$/;"	t	typeref:struct:Vardesc
WHITE0BIT	src/lgc.h	78;"	d
WHITE1BIT	src/lgc.h	79;"	d
WHITEBITS	src/lgc.h	84;"	d
XDIGITBIT	src/lctype.h	43;"	d
Z	src/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon7	file:
ZIO	src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	src/lzio.h	/^struct Zio {$/;"	s
_CRT_SECURE_NO_WARNINGS	src/lprefix.h	39;"	d
_FILE_OFFSET_BITS	src/lprefix.h	27;"	d
_LARGEFILE_SOURCE	src/lprefix.h	26;"	d
_XOPEN_SOURCE	src/lprefix.h	17;"	d
_XOPEN_SOURCE	src/lprefix.h	19;"	d
about	doc/readme.html	/^<H2><A NAME="about">About Lua<\/A><\/H2>$/;"	a
actvar	src/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon20
add	luatest/luamod.c	/^int add(lua_State* L) $/;"	f
add2	luatest/lua1.c	/^static int add2(lua_State* L)$/;"	f	file:
add_s	src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addbuff	src/lstate.c	77;"	d	file:
adddigit	src/lstrlib.c	/^static lua_Number adddigit (char *buff, int n, lua_Number x) {$/;"	f	file:
addfield	src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, lua_Integer i) {$/;"	f	file:
addk	src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addliteral	src/lstrlib.c	/^static void addliteral (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addprototype	src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	src/lstrlib.c	/^static void addquoted (luaL_Buffer *b, const char *s, size_t len) {$/;"	f	file:
addreturn	src/lua.c	/^static int addreturn (lua_State *L) {$/;"	f	file:
addstr	src/lobject.c	485;"	d	file:
addtoclib	src/loadlib.c	/^static void addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
adjust_assign	src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	src/lapi.h	17;"	d
allgc	src/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
allocsizenode	src/ltable.h	35;"	d
allowhook	src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	src/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
andaux	src/lbitlib.c	/^static lua_Unsigned andaux (lua_State *L) {$/;"	f	file:
api	doc/contents.html	/^<H3><A NAME="api">C API<\/A><\/H3>$/;"	a
api_check	src/llimits.h	101;"	d
api_checknelems	src/lapi.h	20;"	d
api_checkstackindex	src/lapi.c	56;"	d	file:
api_checkvalidindex	src/lapi.c	54;"	d	file:
api_incr_top	src/lapi.h	14;"	d
arr	src/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon20
arr	src/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
arrayindex	src/ltable.c	/^static unsigned int arrayindex (const TValue *key) {$/;"	f	file:
assignment	src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
atomic	src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
aux_close	src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	src/ltablib.c	33;"	d	file:
aux_lines	src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxgetstr	src/lapi.c	/^static int auxgetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxlib	doc/contents.html	/^<H3><A NAME="auxlib">auxiliary library<\/A><\/H3>$/;"	a
auxresume	src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsetnode	src/ltable.c	/^static void auxsetnode (lua_State *L, void *ud) {$/;"	f	file:
auxsetstr	src/lapi.c	/^static void auxsetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxsort	src/ltablib.c	/^static void auxsort (lua_State *L, IdxT lo, IdxT up,$/;"	f	file:
auxupvalue	src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
b	src/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	src/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value
b_and	src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	src/lbitlib.c	/^static int b_rot (lua_State *L, lua_Integer d) {$/;"	f	file:
b_rrot	src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	src/lbitlib.c	/^static int b_shift (lua_State *L, lua_Unsigned r, lua_Integer i) {$/;"	f	file:
b_str2int	src/lbaselib.c	/^static const char *b_str2int (const char *s, int base, lua_Integer *pn) {$/;"	f	file:
b_test	src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_xor	src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
bail	luatest/luabuiltin.c	/^void bail(lua_State *L, char *msg){$/;"	f
base	src/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon4::__anon5
base_ci	src/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_funcs	src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
bit2mask	src/lgc.h	71;"	d
bitlib	src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bitmask	src/lgc.h	70;"	d
bl	src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	src/lgc.c	71;"	d	file:
block	src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
body	src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolK	src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
box	src/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:
boxgc	src/lauxlib.c	/^static int boxgc (lua_State *L) {$/;"	f	file:
breaklabel	src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
bsize	src/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:
buff	src/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	src/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon23	file:
buff	src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	src/lstrlib.c	/^  char buff[5 * sizeof(lua_Number)];  \/* enough for any float type *\/$/;"	m	union:Ftypes	file:
buffer	src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffonstack	src/lauxlib.c	499;"	d	file:
buffsize	src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
bvalue	src/lobject.h	176;"	d
byteoffset	src/lutf8lib.c	/^static int byteoffset (lua_State *L) {$/;"	f	file:
c	src/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon23	file:
c	src/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	src/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon4	typeref:struct:CallInfo::__anon4::__anon6
c	src/lstrlib.c	/^  char c;$/;"	m	struct:cD	file:
cD	src/lstrlib.c	/^struct cD {$/;"	s	file:
cache	src/lobject.h	/^  struct LClosure *cache;  \/* last-created closure with this prototype *\/$/;"	m	struct:Proto	typeref:struct:Proto::LClosure
callallpendingfinalizers	src/lgc.c	/^static void callallpendingfinalizers (lua_State *L) {$/;"	f	file:
callhook	src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
callstatus	src/lstate.h	/^  unsigned short callstatus;$/;"	m	struct:CallInfo
cannot	src/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capture	src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon11	file:
capture_to_close	src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
cast	src/llimits.h	111;"	d
cast_byte	src/llimits.h	114;"	d
cast_func	src/loadlib.c	115;"	d	file:
cast_func	src/loadlib.c	117;"	d	file:
cast_int	src/llimits.h	116;"	d
cast_num	src/llimits.h	115;"	d
cast_u	src/lstate.h	222;"	d
cast_uchar	src/llimits.h	117;"	d
cast_void	src/llimits.h	113;"	d
changes	doc/readme.html	/^<H2><A NAME="changes">Changes since Lua 5.2<\/A><\/H2>$/;"	a
changewhite	src/lgc.h	98;"	d
check	src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkGC	src/lvm.c	749;"	d	file:
checkHeader	src/lundump.c	/^static void checkHeader (LoadState *S) {$/;"	f	file:
checkSizes	src/lgc.c	/^static void checkSizes (lua_State *L, global_State *g) {$/;"	f	file:
check_capture	src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	src/lparser.c	118;"	d	file:
check_conflict	src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_exp	src/llimits.h	85;"	d
check_exp	src/llimits.h	90;"	d
check_match	src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next1	src/llex.c	/^static int check_next1 (LexState *ls, int c) {$/;"	f	file:
check_next2	src/llex.c	/^static int check_next2 (LexState *ls, const char *set) {$/;"	f	file:
checkclib	src/loadlib.c	/^static void *checkclib (lua_State *L, const char *path) {$/;"	f	file:
checkconsistency	src/lgc.c	79;"	d	file:
checkdeadkey	src/lgc.c	76;"	d	file:
checkdp	src/lstrlib.c	/^static void checkdp (char *buff, int nb) {$/;"	f	file:
checkfield	src/ltablib.c	/^static int checkfield (lua_State *L, const char *key, int n) {$/;"	f	file:
checklimit	src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkliteral	src/lundump.c	/^static void checkliteral (LoadState *S, const char *s, const char *msg) {$/;"	f	file:
checkliveness	src/lobject.h	190;"	d
checkload	src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkoption	src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv,$/;"	f	file:
checkrepeated	src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	src/lapi.c	904;"	d	file:
checksize	src/lundump.c	234;"	d	file:
checkstack	src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkstackp	src/ldo.c	399;"	d	file:
checktab	src/ltablib.c	/^static void checktab (lua_State *L, int arg, int what) {$/;"	f	file:
checktag	src/lobject.h	140;"	d
checktype	src/lobject.h	141;"	d
checkunsigned	src/lbitlib.c	23;"	d	file:
checkupval	src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
chgfltvalue	src/lobject.h	201;"	d
chgivalue	src/lobject.h	207;"	d
choosePivot	src/ltablib.c	/^static IdxT choosePivot (IdxT lo, IdxT up, unsigned int rnd) {$/;"	f	file:
ci	src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	src/ldebug.c	38;"	d	file:
cl	src/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure
clCvalue	src/lobject.h	173;"	d
clLvalue	src/lobject.h	172;"	d
classend	src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clearkeys	src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
close_func	src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closef	src/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closegoto	src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
clvalue	src/lobject.h	171;"	d
co_funcs	src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	src/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto
code_loadbool	src/lcode.c	/^static int code_loadbool (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codebinexpval	src/lcode.c	/^static void codebinexpval (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	src/lcode.c	/^static void codecomp (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:
codeextraarg	src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codepoint	src/lutf8lib.c	/^static int codepoint (lua_State *L) {$/;"	f	file:
codestring	src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
codeunexpval	src/lcode.c	/^static void codeunexpval (FuncState *fs, OpCode op, expdesc *e, int line) {$/;"	f	file:
collectargs	src/lua.c	/^static int collectargs (char **argv, int *first) {$/;"	f	file:
collectvalidlines	src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
combine	src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
computesizes	src/ltable.c	/^static unsigned int computesizes (unsigned int nums[], unsigned int *pna) {$/;"	f	file:
cond	src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condchangemem	src/llimits.h	317;"	d
condchangemem	src/llimits.h	319;"	d
condjump	src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
condmovestack	src/llimits.h	309;"	d
condmovestack	src/llimits.h	312;"	d
constants	doc/contents.html	/^<H3><A NAME="constants">constants<\/A><\/H3>$/;"	a
constfolding	src/lcode.c	/^static int constfolding (FuncState *fs, int op, expdesc *e1,$/;"	f	file:
constructor	src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
contents	doc/contents.html	/^<H2><A NAME="contents">Contents<\/A><\/H2>$/;"	a
convergeephemerons	src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
copy2buff	src/lvm.c	/^static void copy2buff (StkId top, int n, char *buff) {$/;"	f	file:
copywithendian	src/lstrlib.c	/^static void copywithendian (volatile char *dest, volatile const char *src,$/;"	f	file:
correctstack	src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
countint	src/ltable.c	/^static int countint (const TValue *key, unsigned int *nums) {$/;"	f	file:
createargtable	src/lua.c	/^static void createargtable (lua_State *L, char **argv, int argc, int script) {$/;"	f	file:
createclibstable	src/loadlib.c	/^static void createclibstable (lua_State *L) {$/;"	f	file:
createmeta	src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	src/lstring.c	/^static TString *createstrobj (lua_State *L, size_t l, int tag, unsigned int h) {$/;"	f	file:
ctb	src/lobject.h	66;"	d
ctx	src/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon4::__anon6
currIsNewline	src/llex.c	36;"	d	file:
current	src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
currentline	src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentline	src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
customization	doc/readme.html	/^<H3><A NAME="customization">Customization<\/A><\/H3>$/;"	a
cvt2num	src/lvm.h	24;"	d
cvt2num	src/lvm.h	26;"	d
cvt2str	src/lvm.h	17;"	d
cvt2str	src/lvm.h	19;"	d
d	src/lstrlib.c	/^  double d;$/;"	m	union:Ftypes	file:
d	src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon13	file:
data	src/ldump.c	/^  void *data;$/;"	m	struct:__anon10	file:
data	src/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio
db_debug	src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dblib	src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
deadvalue	src/lobject.h	179;"	d
digit	src/lstrlib.c	/^static int digit (int c) { return '0' <= c && c <= '9'; }$/;"	f	file:
discharge2anyreg	src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
doREPL	src/lua.c	/^static void doREPL (lua_State *L) {$/;"	f	file:
doargs	src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
dochunk	src/lua.c	/^static int dochunk (lua_State *L, int status) {$/;"	f	file:
dofile	src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	src/lbaselib.c	/^static int dofilecont (lua_State *L, int d1, lua_KContext d2) {$/;"	f	file:
dojump	src/lvm.c	738;"	d	file:
dolibrary	src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
donextjump	src/lvm.c	744;"	d	file:
dooptions	src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dothecall	src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
dummy	src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for 'local' udata *\/$/;"	m	union:UUdata
dummy	src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:UTString
dummy	src/lstrlib.c	/^  int dummy;$/;"	m	union:__anon12	file:
dummynode	src/ltable.c	75;"	d	file:
dummynode_	src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumping	src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dyd	src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dyd	src/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
end_capture	src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
endpc	src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
enterblock	src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entersweep	src/lgc.c	/^static void entersweep (lua_State *L) {$/;"	f	file:
env	doc/contents.html	/^<H3><A NAME="env">environment<BR>variables<\/A><\/H3>$/;"	a
envn	src/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
ephemeron	src/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
eqshrstr	src/lstring.h	33;"	d
eqstr	src/lparser.c	42;"	d	file:
errfile	src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
error	src/lundump.c	/^static l_noret error(LoadState *S, const char *why) {$/;"	f	file:
errorJmp	src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
errorlimit	src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errorstatus	src/ldo.c	38;"	d	file:
esccheck	src/llex.c	/^static void esccheck (LexState *ls, int c, const char *msg) {$/;"	f	file:
event	src/lua.h	/^  int event;$/;"	m	struct:lua_Debug
exp1	src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expdesc	src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expkind	src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon17
explist	src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
expr	src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extra	src/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString
extra	src/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo
extra_	src/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:
f	doc/manual.html	/^     function f () <em>body<\/em> end$/;"	f
f	doc/manual.html	/^     function f(a, b) end$/;"	f
f	src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f	src/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	src/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon23	file:
f	src/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	src/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc
f	src/lstrlib.c	/^  float f;$/;"	m	union:Ftypes	file:
f_call	src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_close	src/liolib.c	/^static int f_close (lua_State *L) {$/;"	f	file:
f_flush	src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
fasttm	src/ltm.h	51;"	d
fatal	src/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fchecksize	src/lundump.c	/^static void fchecksize (LoadState *S, size_t size, const char *tname) {$/;"	f	file:
field	src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldargs	src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fieldsel	src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
filterpc	src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
findfield	src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	src/ltable.c	/^static unsigned int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlabel	src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findlast	src/lgc.c	/^static GCObject **findlast (GCObject **p) {$/;"	f	file:
findloader	src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	src/ldo.c	/^static void finishCcall (lua_State *L, int status) {$/;"	f	file:
finishpcall	src/lbaselib.c	/^static int finishpcall (lua_State *L, int status, lua_KContext extra) {$/;"	f	file:
finobj	src/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
firstgoto	src/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	src/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlocal	src/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
fixedgc	src/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State
fixjump	src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flags	src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flib	src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
fltvalue	src/lobject.h	164;"	d
foo	doc/manual.html	/^     function foo (a)$/;"	f
forbody	src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forlimit	src/lvm.c	/^static int forlimit (const TValue *obj, lua_Integer *p, lua_Integer step,$/;"	f	file:
forlist	src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
fornum	src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
frealloc	src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
freeLclosure	src/lgc.c	/^static void freeLclosure (lua_State *L, LClosure *cl) {$/;"	f	file:
freeexp	src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeexps	src/lcode.c	/^static void freeexps (FuncState *fs, expdesc *e1, expdesc *e2) {$/;"	f	file:
freelist	src/lauxlib.c	592;"	d	file:
freeobj	src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	src/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freestack	src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
fromstate	src/lstate.c	70;"	d	file:
fs	src/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
func	src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
funcargs	src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcnamefromcode	src/ldebug.c	/^static const char *funcnamefromcode (lua_State *L, CallInfo *ci,$/;"	f	file:
funcs	src/lutf8lib.c	/^static const luaL_Reg funcs[] = {$/;"	v	file:
funcstat	src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
functions	doc/contents.html	/^<H3><A NAME="functions">Lua functions<\/A><\/H3>$/;"	a
fvalue	src/lobject.h	174;"	d
g	doc/manual.html	/^     function g(a, b, ...) end$/;"	f
g	src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_iofile	src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gc	src/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value
gc	src/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion
gcfinnum	src/lstate.h	/^  unsigned int gcfinnum;  \/* number of finalizers to call in each GC step *\/$/;"	m	struct:global_State
gckind	src/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2ccl	src/lstate.h	229;"	d
gco2cl	src/lstate.h	230;"	d
gco2lcl	src/lstate.h	228;"	d
gco2p	src/lstate.h	233;"	d
gco2t	src/lstate.h	232;"	d
gco2th	src/lstate.h	234;"	d
gco2ts	src/lstate.h	225;"	d
gco2u	src/lstate.h	227;"	d
gcpause	src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	src/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State
gcstate	src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	src/lstate.h	/^  int gcstepmul;  \/* GC 'granularity' *\/$/;"	m	struct:global_State
gctm	src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	src/lobject.h	167;"	d
generic_reader	src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getBMode	src/lopcodes.h	284;"	d
getCMode	src/lopcodes.h	285;"	d
getF	src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getOpMode	src/lopcodes.h	283;"	d
getS	src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_prompt	src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
getarg	src/lopcodes.h	93;"	d
getbinopr	src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcached	src/lvm.c	/^static LClosure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getco	src/lcorolib.c	/^static lua_State *getco (lua_State *L) {$/;"	f	file:
getdebt	src/lgc.c	/^static l_mem getdebt (global_State *g) {$/;"	f	file:
getdetails	src/lstrlib.c	/^static KOption getdetails (Header *h, size_t totalsize,$/;"	f	file:
getfield	src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d, int delta) {$/;"	f	file:
getfreepos	src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncline	src/ldebug.h	16;"	d
getfuncname	src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
getgeneric	src/ltable.c	/^static const TValue *getgeneric (Table *t, const TValue *key) {$/;"	f	file:
gethexa	src/llex.c	/^static int gethexa (LexState *ls) {$/;"	f	file:
getinstruction	src/lcode.h	44;"	d
getiofile	src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocvar	src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getnum	src/lstrlib.c	/^static int getnum (const char **fmt, int df) {$/;"	f	file:
getnumlimit	src/lstrlib.c	/^static int getnumlimit (Header *h, const char **fmt, int df) {$/;"	f	file:
getoah	src/lstate.h	131;"	d
getobjname	src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
getoption	src/lstrlib.c	/^static KOption getoption (Header *h, const char **fmt, int *size) {$/;"	f	file:
getproto	src/lobject.h	468;"	d
getstr	src/lobject.h	328;"	d
gettableProtected	src/lvm.c	774;"	d	file:
getthread	src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettotalbytes	src/lstate.h	243;"	d
getudatamem	src/lobject.h	368;"	d
getunopr	src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
getuservalue	src/lobject.h	377;"	d
gfasttm	src/ltm.h	48;"	d
gkey	src/ltable.h	19;"	d
globalL	src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
gmatch	src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	src/ltable.h	15;"	d
gnode	src/ltable.h	13;"	d
gnodelast	src/lgc.c	107;"	d	file:
gotostat	src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
gray	src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	src/lgc.h	99;"	d
grayagain	src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
growstack	src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
gt	src/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
gval	src/ltable.h	14;"	d
h	src/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState
h	src/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table
handle_luainit	src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	src/lua.c	/^static int handle_script (lua_State *L, char **argv) {$/;"	f	file:
has_E	src/lua.c	457;"	d	file:
has_e	src/lua.c	456;"	d	file:
has_error	src/lua.c	453;"	d	file:
has_i	src/lua.c	454;"	d	file:
has_v	src/lua.c	455;"	d	file:
hash	src/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString
hash	src/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable
hashboolean	src/ltable.c	61;"	d	file:
hashint	src/ltable.c	62;"	d	file:
hashmod	src/ltable.c	69;"	d	file:
hashpointer	src/ltable.c	72;"	d	file:
hashpow2	src/ltable.c	58;"	d	file:
hashstr	src/ltable.c	60;"	d	file:
hasjumps	src/lcode.c	36;"	d	file:
hasmultret	src/lparser.c	37;"	d	file:
hnext	src/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon8	typeref:struct:TString::__anon8::TString
hook	src/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State
hookcount	src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	src/lstate.h	/^  l_signalT hookmask;$/;"	m	struct:lua_State
hvalue	src/lobject.h	175;"	d
i	src/llex.h	/^  lua_Integer i;$/;"	m	union:__anon16
i	src/llimits.h	/^  lua_Integer i;$/;"	m	union:__anon1
i	src/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value
i	src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon13	file:
iABC	src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAx	src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	src/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_key	src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
idx	src/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	src/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon18::__anon19
idx	src/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc
ifstat	src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
inclinenumber	src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incomplete	src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
ind	src/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon18	typeref:struct:expdesc::__anon18::__anon19
index	doc/contents.html	/^<H2><A NAME="index">Index<\/A><\/H2>$/;"	a
index2addr	src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
info	src/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon18
init	src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon11	file:
init_exp	src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_registry	src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
initb	src/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer
initheader	src/lstrlib.c	/^static void initheader (lua_State *L, Header *h) {$/;"	f	file:
instack	src/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc
install	doc/readme.html	/^<H2><A NAME="install">Installing Lua<\/A><\/H2>$/;"	a
intarith	src/lobject.c	/^static lua_Integer intarith (lua_State *L, int op, lua_Integer v1,$/;"	f	file:
internshrstr	src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interror	src/lauxlib.c	/^static void interror (lua_State *L, int arg) {$/;"	f	file:
intop	src/lvm.h	46;"	d
invalidateTMcache	src/ltable.h	27;"	d
io_close	src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipairsaux	src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
isLfunction	src/lobject.h	466;"	d
isLua	src/lstate.h	127;"	d
is_vararg	src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
isblack	src/lgc.h	88;"	d
iscleared	src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	src/liolib.c	147;"	d	file:
iscollectable	src/lobject.h	184;"	d
iscont	src/lutf8lib.c	25;"	d	file:
isdead	src/lgc.h	96;"	d
isdeadm	src/lgc.h	95;"	d
isdummy	src/ltable.h	31;"	d
isemptystr	src/lvm.c	457;"	d	file:
isgray	src/lgc.h	89;"	d
isinstack	src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isintwups	src/lfunc.h	22;"	d
islittle	src/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:
isloop	src/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
ispseudo	src/lapi.c	46;"	d	file:
isreserved	src/lstring.h	27;"	d
isstackindex	src/lapi.c	52;"	d	file:
issweepphase	src/lgc.h	49;"	d
istailcall	src/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isupvalue	src/lapi.c	49;"	d	file:
isvalid	src/lapi.c	43;"	d	file:
isvararg	src/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	src/lgc.h	87;"	d
iter_aux	src/lutf8lib.c	/^static int iter_aux (lua_State *L) {$/;"	f	file:
iter_codes	src/lutf8lib.c	/^static int iter_codes (lua_State *L) {$/;"	f	file:
ival	src/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon18
ivalue	src/lobject.h	163;"	d
jpc	src/lparser.h	/^  int jpc;  \/* list of pending jumps to 'pc' *\/$/;"	m	struct:FuncState
jumponcond	src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k	src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	src/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon4::__anon6
keepinvariant	src/lgc.h	61;"	d
keyfromval	src/ltable.h	39;"	d
kname	src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
l	src/llimits.h	/^  long l;$/;"	m	union:__anon1
l	src/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l	src/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon4	typeref:struct:CallInfo::__anon4::__anon5
l_G	src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_castS2U	src/llimits.h	122;"	d
l_castU2S	src/llimits.h	131;"	d
l_checkmode	src/liolib.c	/^static int l_checkmode (const char *mode) {$/;"	f	file:
l_checktime	src/loslib.c	/^static time_t l_checktime (lua_State *L, int arg) {$/;"	f	file:
l_floor	src/luaconf.h	434;"	d
l_fseek	src/liolib.c	110;"	d	file:
l_fseek	src/liolib.c	118;"	d	file:
l_fseek	src/liolib.c	125;"	d	file:
l_ftell	src/liolib.c	111;"	d	file:
l_ftell	src/liolib.c	119;"	d	file:
l_ftell	src/liolib.c	126;"	d	file:
l_getc	src/liolib.c	86;"	d	file:
l_getc	src/liolib.c	90;"	d	file:
l_gmtime	src/loslib.c	86;"	d	file:
l_gmtime	src/loslib.c	92;"	d	file:
l_hashfloat	src/ltable.c	/^static int l_hashfloat (lua_Number n) {$/;"	f	file:
l_inspectstat	src/lauxlib.c	261;"	d	file:
l_inspectstat	src/lauxlib.c	267;"	d	file:
l_intfitsf	src/lvm.c	59;"	d	file:
l_isfalse	src/lobject.h	181;"	d
l_localtime	src/loslib.c	87;"	d	file:
l_localtime	src/loslib.c	93;"	d	file:
l_lockfile	src/liolib.c	87;"	d	file:
l_lockfile	src/liolib.c	91;"	d	file:
l_mathlim	src/luaconf.h	459;"	d
l_mathlim	src/luaconf.h	475;"	d
l_mathlim	src/luaconf.h	490;"	d
l_mathop	src/luaconf.h	466;"	d
l_mathop	src/luaconf.h	482;"	d
l_mathop	src/luaconf.h	497;"	d
l_mathop	src/luaconf.h	649;"	d
l_mathop	src/luaconf.h	651;"	d
l_mem	src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_mem	src/llimits.h	/^typedef long l_mem;$/;"	t
l_mem	src/llimits.h	/^typedef ptrdiff_t l_mem;$/;"	t
l_message	src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_noret	src/llimits.h	139;"	d
l_noret	src/llimits.h	141;"	d
l_noret	src/llimits.h	143;"	d
l_pclose	src/liolib.c	60;"	d	file:
l_pclose	src/liolib.c	65;"	d	file:
l_pclose	src/liolib.c	74;"	d	file:
l_popen	src/liolib.c	59;"	d	file:
l_popen	src/liolib.c	64;"	d	file:
l_popen	src/liolib.c	70;"	d	file:
l_print	src/lua.c	/^static void l_print (lua_State *L) {$/;"	f	file:
l_pushtime	src/loslib.c	67;"	d	file:
l_rand	src/lmathlib.c	28;"	d	file:
l_rand	src/lmathlib.c	32;"	d	file:
l_randomizePivot	src/ltablib.c	/^static unsigned int l_randomizePivot (void) {$/;"	f	file:
l_registry	src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	src/liolib.c	112;"	d	file:
l_seeknum	src/liolib.c	120;"	d	file:
l_seeknum	src/liolib.c	127;"	d	file:
l_setbit	src/lgc.h	72;"	d
l_signalT	src/lstate.h	60;"	d
l_sprintf	src/luaconf.h	606;"	d
l_sprintf	src/luaconf.h	608;"	d
l_srand	src/lmathlib.c	29;"	d	file:
l_srand	src/lmathlib.c	33;"	d	file:
l_str2d	src/lobject.c	/^static const char *l_str2d (const char *s, lua_Number *result) {$/;"	f	file:
l_str2dloc	src/lobject.c	/^static const char *l_str2dloc (const char *s, lua_Number *result, int mode) {$/;"	f	file:
l_str2int	src/lobject.c	/^static const char *l_str2int (const char *s, lua_Integer *result) {$/;"	f	file:
l_strcmp	src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_timet	src/loslib.c	66;"	d	file:
l_uacInt	src/llimits.h	/^typedef LUAI_UACINT l_uacInt;$/;"	t
l_uacNumber	src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_unlockfile	src/liolib.c	88;"	d	file:
l_unlockfile	src/liolib.c	92;"	d	file:
label	src/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	src/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	src/lapi.c	7;"	d	file:
lapi_h	src/lapi.h	8;"	d
lastfree	src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastlevel	src/lauxlib.c	/^static int lastlevel (lua_State *L) {$/;"	f	file:
lastline	src/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState
lastlinedefined	src/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto
lastlinedefined	src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lastmatch	src/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:
lasttarget	src/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
lauxlib_c	src/lauxlib.c	7;"	d	file:
lauxlib_h	src/lauxlib.h	9;"	d
lbaselib_c	src/lbaselib.c	7;"	d	file:
lbitlib_c	src/lbitlib.c	7;"	d	file:
lcode_c	src/lcode.c	7;"	d	file:
lcode_h	src/lcode.h	8;"	d
lcorolib_c	src/lcorolib.c	7;"	d	file:
lctype_c	src/lctype.c	7;"	d	file:
lctype_h	src/lctype.h	8;"	d
ldblib_c	src/ldblib.c	7;"	d	file:
ldebug_c	src/ldebug.c	7;"	d	file:
ldebug_h	src/ldebug.h	8;"	d
ldo_c	src/ldo.c	7;"	d	file:
ldo_h	src/ldo.h	8;"	d
ldump_c	src/ldump.c	7;"	d	file:
leaveblock	src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	src/lparser.c	338;"	d	file:
left	src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon14	file:
len	src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata
len	src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon11	file:
level	src/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfunc_c	src/lfunc.c	7;"	d	file:
lfunc_h	src/lfunc.h	8;"	d
lgc_c	src/lgc.c	7;"	d	file:
lgc_h	src/lgc.h	8;"	d
library	doc/contents.html	/^<H3><A NAME="library">standard library<\/A><\/H3>$/;"	a
libsize	src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
license	doc/readme.html	/^<H2><A NAME="license">License<\/A><\/H2>$/;"	a
line	src/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
linedefined	src/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto
linedefined	src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto
linenumber	src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
linit_c	src/linit.c	8;"	d	file:
linkgclist	src/lgc.c	113;"	d	file:
liolib_c	src/liolib.c	7;"	d	file:
lisdigit	src/lctype.h	59;"	d
lisdigit	src/lctype.h	85;"	d
lislalnum	src/lctype.h	58;"	d
lislalnum	src/lctype.h	84;"	d
lislalpha	src/lctype.h	57;"	d
lislalpha	src/lctype.h	83;"	d
lisprint	src/lctype.h	61;"	d
lisprint	src/lctype.h	87;"	d
lisspace	src/lctype.h	60;"	d
lisspace	src/lctype.h	86;"	d
listfield	src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lisxdigit	src/lctype.h	62;"	d
lisxdigit	src/lctype.h	88;"	d
little	src/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon12	file:
ll_funcs	src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_loadlib	src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
llex	src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	src/llex.c	7;"	d	file:
llex_h	src/llex.h	8;"	d
llimits_h	src/llimits.h	8;"	d
lmathlib_c	src/lmathlib.c	7;"	d	file:
lmem_c	src/lmem.c	7;"	d	file:
lmem_h	src/lmem.h	8;"	d
lmemfind	src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	src/lobject.h	514;"	d
lnglen	src/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon8
load_aux	src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
loadedlibs	src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	src/loadlib.c	11;"	d	file:
loadline	src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	src/lobject.c	7;"	d	file:
lobject_h	src/lobject.h	9;"	d
localfunc	src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
locvars	src/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
lookahead	src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookforfunc	src/loadlib.c	/^static int lookforfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
lopcodes_c	src/lopcodes.c	7;"	d	file:
lopcodes_h	src/lopcodes.h	8;"	d
loslib_c	src/loslib.c	7;"	d	file:
lparser_c	src/lparser.c	7;"	d	file:
lparser_h	src/lparser.h	8;"	d
lprefix_h	src/lprefix.h	8;"	d
ls	src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsizenode	src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table
lstate_c	src/lstate.c	7;"	d	file:
lstate_h	src/lstate.h	8;"	d
lstop	src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	src/lstring.c	7;"	d	file:
lstring_h	src/lstring.h	8;"	d
lstrlib_c	src/lstrlib.c	7;"	d	file:
lsys_load	src/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
lsys_sym	src/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
lsys_unloadlib	src/loadlib.c	/^static void lsys_unloadlib (void *lib) {$/;"	f	file:
ltable_c	src/ltable.c	7;"	d	file:
ltable_h	src/ltable.h	8;"	d
ltablib_c	src/ltablib.c	7;"	d	file:
ltm_c	src/ltm.c	7;"	d	file:
ltm_h	src/ltm.h	8;"	d
ltolower	src/lctype.h	67;"	d
ltolower	src/lctype.h	90;"	d
lu_byte	src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_mem	src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lu_mem	src/llimits.h	/^typedef size_t lu_mem;$/;"	t
lu_mem	src/llimits.h	/^typedef unsigned long lu_mem;$/;"	t
luaB_assert	src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaB_yieldable	src/lcorolib.c	/^static int luaB_yieldable (lua_State *L) {$/;"	f	file:
luaC_barrier	src/lgc.h	118;"	d
luaC_barrier_	src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	src/lgc.h	122;"	d
luaC_barrierback_	src/lgc.c	/^void luaC_barrierback_ (lua_State *L, Table *t) {$/;"	f
luaC_checkGC	src/lgc.h	115;"	d
luaC_checkfinalizer	src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_condGC	src/lgc.h	110;"	d
luaC_fix	src/lgc.c	/^void luaC_fix (lua_State *L, GCObject *o) {$/;"	f
luaC_freeallobjects	src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {$/;"	f
luaC_objbarrier	src/lgc.h	126;"	d
luaC_runtilstate	src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_upvalbarrier	src/lgc.h	130;"	d
luaC_upvalbarrier_	src/lgc.c	/^void luaC_upvalbarrier_ (lua_State *L, UpVal *uv) {$/;"	f
luaC_upvdeccount	src/lgc.c	/^void luaC_upvdeccount (lua_State *L, UpVal *uv) {$/;"	f
luaC_white	src/lgc.h	101;"	d
luaD_call	src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callnoyield	src/ldo.c	/^void luaD_callnoyield (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_checkstack	src/ldo.h	28;"	d
luaD_checkstackaux	src/ldo.h	23;"	d
luaD_growstack	src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_inctop	src/ldo.c	/^void luaD_inctop (lua_State *L) {$/;"	f
luaD_pcall	src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	src/ldo.c	/^int luaD_poscall (lua_State *L, CallInfo *ci, StkId firstResult, int nres) {$/;"	f
luaD_precall	src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaE_shrinkCI	src/lstate.c	/^void luaE_shrinkCI (lua_State *L) {$/;"	f
luaF_close	src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_getlocalname	src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_initupvals	src/lfunc.c	/^void luaF_initupvals (lua_State *L, LClosure *cl) {$/;"	f
luaF_newCclosure	src/lfunc.c	/^CClosure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	src/lfunc.c	/^LClosure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaG_addinfo	src/ldebug.c	/^const char *luaG_addinfo (lua_State *L, const char *msg, TString *src,$/;"	f
luaG_concaterror	src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_errormsg	src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_opinterror	src/ldebug.c	/^l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	f
luaG_ordererror	src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_tointerror	src/ldebug.c	/^l_noret luaG_tointerror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_traceexec	src/ldebug.c	/^void luaG_traceexec (lua_State *L) {$/;"	f
luaG_typeerror	src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	src/ltable.c	/^const TValue *luaH_getint (Table *t, lua_Integer key) {$/;"	f
luaH_getn	src/ltable.c	/^lua_Unsigned luaH_getn (Table *t) {$/;"	f
luaH_getshortstr	src/ltable.c	/^const TValue *luaH_getshortstr (Table *t, TString *key) {$/;"	f
luaH_getstr	src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	src/ltable.c	/^int luaH_isdummy (const Table *t) { return isdummy(t); }$/;"	f
luaH_mainposition	src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, unsigned int nasize,$/;"	f
luaH_resizearray	src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize) {$/;"	f
luaH_set	src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, lua_Integer key, TValue *value) {$/;"	f
luaK_checkstack	src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	src/lcode.h	46;"	d
luaK_codek	src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_intK	src/lcode.c	/^int luaK_intK (FuncState *fs, lua_Integer n) {$/;"	f
luaK_jump	src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	src/lcode.h	50;"	d
luaK_nil	src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	src/lcode.c	/^static int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	file:
luaK_patchclose	src/lcode.c	/^void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	src/lcode.h	48;"	d
luaK_setoneret	src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	doc/manual.html	/^<hr><h3><a name="luaL_Buffer"><code>luaL_Buffer<\/code><\/a><\/h3>$/;"	a
luaL_Buffer	src/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	src/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	doc/manual.html	/^<hr><h3><a name="luaL_Reg"><code>luaL_Reg<\/code><\/a><\/h3>$/;"	a
luaL_Reg	src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	doc/manual.html	/^<hr><h3><a name="luaL_Stream"><code>luaL_Stream<\/code><\/a><\/h3>$/;"	a
luaL_Stream	src/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	src/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	doc/manual.html	/^<hr><h3><a name="luaL_addchar"><code>luaL_addchar<\/code><\/a><\/h3><p>$/;"	a
luaL_addchar	src/lauxlib.h	157;"	d
luaL_addlstring	doc/manual.html	/^<hr><h3><a name="luaL_addlstring"><code>luaL_addlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addlstring	src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	doc/manual.html	/^<hr><h3><a name="luaL_addsize"><code>luaL_addsize<\/code><\/a><\/h3><p>$/;"	a
luaL_addsize	src/lauxlib.h	161;"	d
luaL_addstring	doc/manual.html	/^<hr><h3><a name="luaL_addstring"><code>luaL_addstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addstring	src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	doc/manual.html	/^<hr><h3><a name="luaL_addvalue"><code>luaL_addvalue<\/code><\/a><\/h3><p>$/;"	a
luaL_addvalue	src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	doc/manual.html	/^<hr><h3><a name="luaL_argcheck"><code>luaL_argcheck<\/code><\/a><\/h3><p>$/;"	a
luaL_argcheck	src/lauxlib.h	122;"	d
luaL_argerror	doc/manual.html	/^<hr><h3><a name="luaL_argerror"><code>luaL_argerror<\/code><\/a><\/h3><p>$/;"	a
luaL_argerror	src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int arg, const char *extramsg) {$/;"	f
luaL_buffinit	doc/manual.html	/^<hr><h3><a name="luaL_buffinit"><code>luaL_buffinit<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinit	src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	doc/manual.html	/^<hr><h3><a name="luaL_buffinitsize"><code>luaL_buffinitsize<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinitsize	src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	doc/manual.html	/^<hr><h3><a name="luaL_callmeta"><code>luaL_callmeta<\/code><\/a><\/h3><p>$/;"	a
luaL_callmeta	src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	doc/manual.html	/^<hr><h3><a name="luaL_checkany"><code>luaL_checkany<\/code><\/a><\/h3><p>$/;"	a
luaL_checkany	src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int arg) {$/;"	f
luaL_checkint	src/lauxlib.h	251;"	d
luaL_checkinteger	doc/manual.html	/^<hr><h3><a name="luaL_checkinteger"><code>luaL_checkinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_checkinteger	src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int arg) {$/;"	f
luaL_checklong	src/lauxlib.h	254;"	d
luaL_checklstring	doc/manual.html	/^<hr><h3><a name="luaL_checklstring"><code>luaL_checklstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checklstring	src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {$/;"	f
luaL_checknumber	doc/manual.html	/^<hr><h3><a name="luaL_checknumber"><code>luaL_checknumber<\/code><\/a><\/h3><p>$/;"	a
luaL_checknumber	src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int arg) {$/;"	f
luaL_checkoption	doc/manual.html	/^<hr><h3><a name="luaL_checkoption"><code>luaL_checkoption<\/code><\/a><\/h3><p>$/;"	a
luaL_checkoption	src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int arg, const char *def,$/;"	f
luaL_checkstack	doc/manual.html	/^<hr><h3><a name="luaL_checkstack"><code>luaL_checkstack<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstack	src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	doc/manual.html	/^<hr><h3><a name="luaL_checkstring"><code>luaL_checkstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstring	src/lauxlib.h	124;"	d
luaL_checktype	doc/manual.html	/^<hr><h3><a name="luaL_checktype"><code>luaL_checktype<\/code><\/a><\/h3><p>$/;"	a
luaL_checktype	src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int arg, int t) {$/;"	f
luaL_checkudata	doc/manual.html	/^<hr><h3><a name="luaL_checkudata"><code>luaL_checkudata<\/code><\/a><\/h3><p>$/;"	a
luaL_checkudata	src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	src/lauxlib.h	247;"	d
luaL_checkversion	doc/manual.html	/^<hr><h3><a name="luaL_checkversion"><code>luaL_checkversion<\/code><\/a><\/h3><p>$/;"	a
luaL_checkversion	src/lauxlib.h	40;"	d
luaL_checkversion_	src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver, size_t sz) {$/;"	f
luaL_dofile	doc/manual.html	/^<hr><h3><a name="luaL_dofile"><code>luaL_dofile<\/code><\/a><\/h3><p>$/;"	a
luaL_dofile	src/lauxlib.h	129;"	d
luaL_dostring	doc/manual.html	/^<hr><h3><a name="luaL_dostring"><code>luaL_dostring<\/code><\/a><\/h3><p>$/;"	a
luaL_dostring	src/lauxlib.h	132;"	d
luaL_error	doc/manual.html	/^<hr><h3><a name="luaL_error"><code>luaL_error<\/code><\/a><\/h3><p>$/;"	a
luaL_error	src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	doc/manual.html	/^<hr><h3><a name="luaL_execresult"><code>luaL_execresult<\/code><\/a><\/h3><p>$/;"	a
luaL_execresult	src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	doc/manual.html	/^<hr><h3><a name="luaL_fileresult"><code>luaL_fileresult<\/code><\/a><\/h3><p>$/;"	a
luaL_fileresult	src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	doc/manual.html	/^<hr><h3><a name="luaL_getmetafield"><code>luaL_getmetafield<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetafield	src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	doc/manual.html	/^<hr><h3><a name="luaL_getmetatable"><code>luaL_getmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetatable	src/lauxlib.h	135;"	d
luaL_getsubtable	doc/manual.html	/^<hr><h3><a name="luaL_getsubtable"><code>luaL_getsubtable<\/code><\/a><\/h3><p>$/;"	a
luaL_getsubtable	src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	doc/manual.html	/^<hr><h3><a name="luaL_gsub"><code>luaL_gsub<\/code><\/a><\/h3><p>$/;"	a
luaL_gsub	src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	doc/manual.html	/^<hr><h3><a name="luaL_len"><code>luaL_len<\/code><\/a><\/h3><p>$/;"	a
luaL_len	src/lauxlib.c	/^LUALIB_API lua_Integer luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	doc/manual.html	/^<hr><h3><a name="luaL_loadbuffer"><code>luaL_loadbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbuffer	src/lauxlib.h	139;"	d
luaL_loadbufferx	doc/manual.html	/^<hr><h3><a name="luaL_loadbufferx"><code>luaL_loadbufferx<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbufferx	src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	doc/manual.html	/^<hr><h3><a name="luaL_loadfile"><code>luaL_loadfile<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfile	src/lauxlib.h	86;"	d
luaL_loadfilex	doc/manual.html	/^<hr><h3><a name="luaL_loadfilex"><code>luaL_loadfilex<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfilex	src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	doc/manual.html	/^<hr><h3><a name="luaL_loadstring"><code>luaL_loadstring<\/code><\/a><\/h3><p>$/;"	a
luaL_loadstring	src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	doc/manual.html	/^<hr><h3><a name="luaL_newlib"><code>luaL_newlib<\/code><\/a><\/h3><p>$/;"	a
luaL_newlib	src/lauxlib.h	119;"	d
luaL_newlibtable	doc/manual.html	/^<hr><h3><a name="luaL_newlibtable"><code>luaL_newlibtable<\/code><\/a><\/h3><p>$/;"	a
luaL_newlibtable	src/lauxlib.h	116;"	d
luaL_newmetatable	doc/manual.html	/^<hr><h3><a name="luaL_newmetatable"><code>luaL_newmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_newmetatable	src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	doc/manual.html	/^<hr><h3><a name="luaL_newstate"><code>luaL_newstate<\/code><\/a><\/h3><p>$/;"	a
luaL_newstate	src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	doc/manual.html	/^<hr><h3><a name="luaL_openlibs"><code>luaL_openlibs<\/code><\/a><\/h3><p>$/;"	a
luaL_openlibs	src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	doc/manual.html	/^<hr><h3><a name="luaL_opt"><code>luaL_opt<\/code><\/a><\/h3><p>$/;"	a
luaL_opt	src/lauxlib.h	137;"	d
luaL_optint	src/lauxlib.h	252;"	d
luaL_optinteger	doc/manual.html	/^<hr><h3><a name="luaL_optinteger"><code>luaL_optinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_optinteger	src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int arg,$/;"	f
luaL_optlong	src/lauxlib.h	255;"	d
luaL_optlstring	doc/manual.html	/^<hr><h3><a name="luaL_optlstring"><code>luaL_optlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optlstring	src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int arg,$/;"	f
luaL_optnumber	doc/manual.html	/^<hr><h3><a name="luaL_optnumber"><code>luaL_optnumber<\/code><\/a><\/h3><p>$/;"	a
luaL_optnumber	src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int arg, lua_Number def) {$/;"	f
luaL_optstring	doc/manual.html	/^<hr><h3><a name="luaL_optstring"><code>luaL_optstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optstring	src/lauxlib.h	125;"	d
luaL_optunsigned	src/lauxlib.h	248;"	d
luaL_prepbuffer	doc/manual.html	/^<hr><h3><a name="luaL_prepbuffer"><code>luaL_prepbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffer	src/lauxlib.h	172;"	d
luaL_prepbuffsize	doc/manual.html	/^<hr><h3><a name="luaL_prepbuffsize"><code>luaL_prepbuffsize<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffsize	src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	doc/manual.html	/^<hr><h3><a name="luaL_pushresult"><code>luaL_pushresult<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresult	src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	doc/manual.html	/^<hr><h3><a name="luaL_pushresultsize"><code>luaL_pushresultsize<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresultsize	src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	doc/manual.html	/^<hr><h3><a name="luaL_ref"><code>luaL_ref<\/code><\/a><\/h3><p>$/;"	a
luaL_ref	src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_register	src/lauxlib.h	210;"	d
luaL_requiref	doc/manual.html	/^<hr><h3><a name="luaL_requiref"><code>luaL_requiref<\/code><\/a><\/h3><p>$/;"	a
luaL_requiref	src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	doc/manual.html	/^<hr><h3><a name="luaL_setfuncs"><code>luaL_setfuncs<\/code><\/a><\/h3><p>$/;"	a
luaL_setfuncs	src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	doc/manual.html	/^<hr><h3><a name="luaL_setmetatable"><code>luaL_setmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_setmetatable	src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	doc/manual.html	/^<hr><h3><a name="luaL_testudata"><code>luaL_testudata<\/code><\/a><\/h3><p>$/;"	a
luaL_testudata	src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	doc/manual.html	/^<hr><h3><a name="luaL_tolstring"><code>luaL_tolstring<\/code><\/a><\/h3><p>$/;"	a
luaL_tolstring	src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	doc/manual.html	/^<hr><h3><a name="luaL_traceback"><code>luaL_traceback<\/code><\/a><\/h3><p>$/;"	a
luaL_traceback	src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typename	doc/manual.html	/^<hr><h3><a name="luaL_typename"><code>luaL_typename<\/code><\/a><\/h3><p>$/;"	a
luaL_typename	src/lauxlib.h	127;"	d
luaL_unref	doc/manual.html	/^<hr><h3><a name="luaL_unref"><code>luaL_unref<\/code><\/a><\/h3><p>$/;"	a
luaL_unref	src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	doc/manual.html	/^<hr><h3><a name="luaL_where"><code>luaL_where<\/code><\/a><\/h3><p>$/;"	a
luaL_where	src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	src/lmem.h	42;"	d
luaM_freearray	src/lmem.h	43;"	d
luaM_freemem	src/lmem.h	41;"	d
luaM_growaux_	src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	src/lmem.h	52;"	d
luaM_malloc	src/lmem.h	45;"	d
luaM_new	src/lmem.h	46;"	d
luaM_newobject	src/lmem.h	50;"	d
luaM_newvector	src/lmem.h	47;"	d
luaM_realloc_	src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	src/lmem.h	30;"	d
luaM_reallocvchar	src/lmem.h	38;"	d
luaM_reallocvector	src/lmem.h	56;"	d
luaM_toobig	src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	src/lobject.c	/^void luaO_arith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_ceillog2	src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject	src/lobject.h	525;"	d
luaO_nilobject_	src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_nilobject_	src/lobject.h	/^LUAI_DDEC const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2num	src/lobject.c	/^size_t luaO_str2num (const char *s, TValue *o) {$/;"	f
luaO_tostring	src/lobject.c	/^void luaO_tostring (lua_State *L, StkId obj) {$/;"	f
luaO_utf8esc	src/lobject.c	/^int luaO_utf8esc (char *buff, unsigned long x) {$/;"	f
luaP_opmodes	src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	src/lopcodes.h	/^LUAI_DDEC const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	src/lopcodes.h	/^LUAI_DDEC const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaS_clearcache	src/lstring.c	/^void luaS_clearcache (global_State *g) {$/;"	f
luaS_createlngstrobj	src/lstring.c	/^TString *luaS_createlngstrobj (lua_State *L, size_t l) {$/;"	f
luaS_eqlngstr	src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_hash	src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_hashlongstr	src/lstring.c	/^unsigned int luaS_hashlongstr (TString *ts) {$/;"	f
luaS_init	src/lstring.c	/^void luaS_init (lua_State *L) {$/;"	f
luaS_new	src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	src/lstring.h	20;"	d
luaS_newlstr	src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s) {$/;"	f
luaS_remove	src/lstring.c	/^void luaS_remove (lua_State *L, TString *ts) {$/;"	f
luaS_resize	src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_callTM	src/ltm.c	/^void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callbinTM	src/ltm.c	/^int luaT_callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_callorderTM	src/ltm.c	/^int luaT_callorderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_gettm	src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_objtypename	src/ltm.c	/^const char *luaT_objtypename (lua_State *L, const TValue *o) {$/;"	f
luaT_trybinTM	src/ltm.c	/^void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_typenames_	src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaT_typenames_	src/ltm.h	/^LUAI_DDEC const char *const luaT_typenames_[LUA_TOTALTAGS];$/;"	v
luaU_dump	src/ldump.c	/^int luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data,$/;"	f
luaU_print	src/luac.c	26;"	d	file:
luaU_undump	src/lundump.c	/^LClosure *luaU_undump(lua_State *L, ZIO *Z, const char *name) {$/;"	f
luaV_concat	src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_div	src/lvm.c	/^lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_equalobj	src/lvm.c	/^int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_fastget	src/lvm.h	58;"	d
luaV_fastset	src/lvm.h	80;"	d
luaV_finishOp	src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_finishget	src/lvm.c	/^void luaV_finishget (lua_State *L, const TValue *t, TValue *key, StkId val,$/;"	f
luaV_finishset	src/lvm.c	/^void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	f
luaV_gettable	src/lvm.h	67;"	d
luaV_lessequal	src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_mod	src/lvm.c	/^lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_objlen	src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	src/lvm.h	48;"	d
luaV_settable	src/lvm.h	90;"	d
luaV_shiftl	src/lvm.c	/^lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y) {$/;"	f
luaV_tointeger	src/lvm.c	/^int luaV_tointeger (const TValue *obj, lua_Integer *p, int mode) {$/;"	f
luaV_tonumber_	src/lvm.c	/^int luaV_tonumber_ (const TValue *obj, lua_Number *n) {$/;"	f
luaX_init	src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	src/lparser.c	/^LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	src/lzio.h	31;"	d
luaZ_bufflen	src/lzio.h	33;"	d
luaZ_buffremove	src/lzio.h	35;"	d
luaZ_fill	src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	src/lzio.h	44;"	d
luaZ_init	src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	src/lzio.h	29;"	d
luaZ_read	src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	src/lzio.h	36;"	d
luaZ_resizebuffer	src/lzio.h	39;"	d
luaZ_sizebuffer	src/lzio.h	32;"	d
lua_Alloc	doc/manual.html	/^<hr><h3><a name="lua_Alloc"><code>lua_Alloc<\/code><\/a><\/h3>$/;"	a
lua_Alloc	src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	doc/manual.html	/^<hr><h3><a name="lua_CFunction"><code>lua_CFunction<\/code><\/a><\/h3>$/;"	a
lua_CFunction	src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	doc/manual.html	/^<hr><h3><a name="lua_Debug"><code>lua_Debug<\/code><\/a><\/h3>$/;"	a
lua_Debug	src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	doc/manual.html	/^<hr><h3><a name="lua_Hook"><code>lua_Hook<\/code><\/a><\/h3>$/;"	a
lua_Hook	src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	doc/manual.html	/^<hr><h3><a name="lua_Integer"><code>lua_Integer<\/code><\/a><\/h3>$/;"	a
lua_Integer	src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_KContext	doc/manual.html	/^<hr><h3><a name="lua_KContext"><code>lua_KContext<\/code><\/a><\/h3>$/;"	a
lua_KContext	src/lua.h	/^typedef LUA_KCONTEXT lua_KContext;$/;"	t
lua_KFunction	doc/manual.html	/^<hr><h3><a name="lua_KFunction"><code>lua_KFunction<\/code><\/a><\/h3>$/;"	a
lua_KFunction	src/lua.h	/^typedef int (*lua_KFunction) (lua_State *L, int status, lua_KContext ctx);$/;"	t
lua_Number	doc/manual.html	/^<hr><h3><a name="lua_Number"><code>lua_Number<\/code><\/a><\/h3>$/;"	a
lua_Number	src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	doc/manual.html	/^<hr><h3><a name="lua_Reader"><code>lua_Reader<\/code><\/a><\/h3>$/;"	a
lua_Reader	src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	doc/manual.html	/^<hr><h3><a name="lua_State"><code>lua_State<\/code><\/a><\/h3>$/;"	a
lua_State	src/lstate.h	/^struct lua_State {$/;"	s
lua_State	src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	src/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Unsigned	doc/manual.html	/^<hr><h3><a name="lua_Unsigned"><code>lua_Unsigned<\/code><\/a><\/h3>$/;"	a
lua_Unsigned	src/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	doc/manual.html	/^<hr><h3><a name="lua_Writer"><code>lua_Writer<\/code><\/a><\/h3>$/;"	a
lua_Writer	src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void *p, size_t sz, void *ud);$/;"	t
lua_absindex	doc/manual.html	/^<hr><h3><a name="lua_absindex"><code>lua_absindex<\/code><\/a><\/h3><p>$/;"	a
lua_absindex	src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	doc/manual.html	/^<hr><h3><a name="lua_arith"><code>lua_arith<\/code><\/a><\/h3><p>$/;"	a
lua_arith	src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	src/llimits.h	89;"	d
lua_assert	src/lualib.h	57;"	d
lua_atpanic	doc/manual.html	/^<hr><h3><a name="lua_atpanic"><code>lua_atpanic<\/code><\/a><\/h3><p>$/;"	a
lua_atpanic	src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	src/lua.c	7;"	d	file:
lua_call	doc/manual.html	/^<hr><h3><a name="lua_call"><code>lua_call<\/code><\/a><\/h3><p>$/;"	a
lua_call	src/lua.h	274;"	d
lua_callk	doc/manual.html	/^<hr><h3><a name="lua_callk"><code>lua_callk<\/code><\/a><\/h3><p>$/;"	a
lua_callk	src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults,$/;"	f
lua_checkstack	doc/manual.html	/^<hr><h3><a name="lua_checkstack"><code>lua_checkstack<\/code><\/a><\/h3><p>$/;"	a
lua_checkstack	src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int n) {$/;"	f
lua_close	doc/manual.html	/^<hr><h3><a name="lua_close"><code>lua_close<\/code><\/a><\/h3><p>$/;"	a
lua_close	src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_compare	doc/manual.html	/^<hr><h3><a name="lua_compare"><code>lua_compare<\/code><\/a><\/h3><p>$/;"	a
lua_compare	src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	doc/manual.html	/^<hr><h3><a name="lua_concat"><code>lua_concat<\/code><\/a><\/h3><p>$/;"	a
lua_concat	src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	doc/manual.html	/^<hr><h3><a name="lua_copy"><code>lua_copy<\/code><\/a><\/h3><p>$/;"	a
lua_copy	src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_cpcall	src/luaconf.h	353;"	d
lua_createtable	doc/manual.html	/^<hr><h3><a name="lua_createtable"><code>lua_createtable<\/code><\/a><\/h3><p>$/;"	a
lua_createtable	src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	doc/manual.html	/^<hr><h3><a name="lua_dump"><code>lua_dump<\/code><\/a><\/h3><p>$/;"	a
lua_dump	src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data, int strip) {$/;"	f
lua_equal	src/luaconf.h	385;"	d
lua_error	doc/manual.html	/^<hr><h3><a name="lua_error"><code>lua_error<\/code><\/a><\/h3><p>$/;"	a
lua_error	src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	src/lua.c	86;"	d	file:
lua_freeline	src/lua.c	94;"	d	file:
lua_gc	doc/manual.html	/^<hr><h3><a name="lua_gc"><code>lua_gc<\/code><\/a><\/h3><p>$/;"	a
lua_gc	src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	doc/manual.html	/^<hr><h3><a name="lua_getallocf"><code>lua_getallocf<\/code><\/a><\/h3><p>$/;"	a
lua_getallocf	src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getextraspace	doc/manual.html	/^<hr><h3><a name="lua_getextraspace"><code>lua_getextraspace<\/code><\/a><\/h3><p>$/;"	a
lua_getextraspace	src/lua.h	339;"	d
lua_getfield	doc/manual.html	/^<hr><h3><a name="lua_getfield"><code>lua_getfield<\/code><\/a><\/h3><p>$/;"	a
lua_getfield	src/lapi.c	/^LUA_API int lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	doc/manual.html	/^<hr><h3><a name="lua_getglobal"><code>lua_getglobal<\/code><\/a><\/h3><p>$/;"	a
lua_getglobal	src/lapi.c	/^LUA_API int lua_getglobal (lua_State *L, const char *name) {$/;"	f
lua_gethook	doc/manual.html	/^<hr><h3><a name="lua_gethook"><code>lua_gethook<\/code><\/a><\/h3><p>$/;"	a
lua_gethook	src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	doc/manual.html	/^<hr><h3><a name="lua_gethookcount"><code>lua_gethookcount<\/code><\/a><\/h3><p>$/;"	a
lua_gethookcount	src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	doc/manual.html	/^<hr><h3><a name="lua_gethookmask"><code>lua_gethookmask<\/code><\/a><\/h3><p>$/;"	a
lua_gethookmask	src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_geti	doc/manual.html	/^<hr><h3><a name="lua_geti"><code>lua_geti<\/code><\/a><\/h3><p>$/;"	a
lua_geti	src/lapi.c	/^LUA_API int lua_geti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_getinfo	doc/manual.html	/^<hr><h3><a name="lua_getinfo"><code>lua_getinfo<\/code><\/a><\/h3><p>$/;"	a
lua_getinfo	src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	doc/manual.html	/^<hr><h3><a name="lua_getlocal"><code>lua_getlocal<\/code><\/a><\/h3><p>$/;"	a
lua_getlocal	src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getlocaledecpoint	src/luaconf.h	680;"	d
lua_getmetatable	doc/manual.html	/^<hr><h3><a name="lua_getmetatable"><code>lua_getmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_getmetatable	src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	doc/manual.html	/^<hr><h3><a name="lua_getstack"><code>lua_getstack<\/code><\/a><\/h3><p>$/;"	a
lua_getstack	src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	doc/manual.html	/^<hr><h3><a name="lua_gettable"><code>lua_gettable<\/code><\/a><\/h3><p>$/;"	a
lua_gettable	src/lapi.c	/^LUA_API int lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	doc/manual.html	/^<hr><h3><a name="lua_gettop"><code>lua_gettop<\/code><\/a><\/h3><p>$/;"	a
lua_gettop	src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	doc/manual.html	/^<hr><h3><a name="lua_getupvalue"><code>lua_getupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_getupvalue	src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	doc/manual.html	/^<hr><h3><a name="lua_getuservalue"><code>lua_getuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_getuservalue	src/lapi.c	/^LUA_API int lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_h	src/lua.h	10;"	d
lua_ident	src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	doc/manual.html	/^<hr><h3><a name="lua_insert"><code>lua_insert<\/code><\/a><\/h3><p>$/;"	a
lua_insert	src/lua.h	369;"	d
lua_integer2str	src/luaconf.h	530;"	d
lua_isboolean	doc/manual.html	/^<hr><h3><a name="lua_isboolean"><code>lua_isboolean<\/code><\/a><\/h3><p>$/;"	a
lua_isboolean	src/lua.h	356;"	d
lua_iscfunction	doc/manual.html	/^<hr><h3><a name="lua_iscfunction"><code>lua_iscfunction<\/code><\/a><\/h3><p>$/;"	a
lua_iscfunction	src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	doc/manual.html	/^<hr><h3><a name="lua_isfunction"><code>lua_isfunction<\/code><\/a><\/h3><p>$/;"	a
lua_isfunction	src/lua.h	352;"	d
lua_isinteger	doc/manual.html	/^<hr><h3><a name="lua_isinteger"><code>lua_isinteger<\/code><\/a><\/h3><p>$/;"	a
lua_isinteger	src/lapi.c	/^LUA_API int lua_isinteger (lua_State *L, int idx) {$/;"	f
lua_islightuserdata	doc/manual.html	/^<hr><h3><a name="lua_islightuserdata"><code>lua_islightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_islightuserdata	src/lua.h	354;"	d
lua_isnil	doc/manual.html	/^<hr><h3><a name="lua_isnil"><code>lua_isnil<\/code><\/a><\/h3><p>$/;"	a
lua_isnil	src/lua.h	355;"	d
lua_isnone	doc/manual.html	/^<hr><h3><a name="lua_isnone"><code>lua_isnone<\/code><\/a><\/h3><p>$/;"	a
lua_isnone	src/lua.h	358;"	d
lua_isnoneornil	doc/manual.html	/^<hr><h3><a name="lua_isnoneornil"><code>lua_isnoneornil<\/code><\/a><\/h3><p>$/;"	a
lua_isnoneornil	src/lua.h	359;"	d
lua_isnumber	doc/manual.html	/^<hr><h3><a name="lua_isnumber"><code>lua_isnumber<\/code><\/a><\/h3><p>$/;"	a
lua_isnumber	src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	doc/manual.html	/^<hr><h3><a name="lua_isstring"><code>lua_isstring<\/code><\/a><\/h3><p>$/;"	a
lua_isstring	src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	doc/manual.html	/^<hr><h3><a name="lua_istable"><code>lua_istable<\/code><\/a><\/h3><p>$/;"	a
lua_istable	src/lua.h	353;"	d
lua_isthread	doc/manual.html	/^<hr><h3><a name="lua_isthread"><code>lua_isthread<\/code><\/a><\/h3><p>$/;"	a
lua_isthread	src/lua.h	357;"	d
lua_isuserdata	doc/manual.html	/^<hr><h3><a name="lua_isuserdata"><code>lua_isuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_isuserdata	src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_isyieldable	doc/manual.html	/^<hr><h3><a name="lua_isyieldable"><code>lua_isyieldable<\/code><\/a><\/h3><p>$/;"	a
lua_isyieldable	src/ldo.c	/^LUA_API int lua_isyieldable (lua_State *L) {$/;"	f
lua_len	doc/manual.html	/^<hr><h3><a name="lua_len"><code>lua_len<\/code><\/a><\/h3><p>$/;"	a
lua_len	src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	src/luaconf.h	386;"	d
lua_load	doc/manual.html	/^<hr><h3><a name="lua_load"><code>lua_load<\/code><\/a><\/h3><p>$/;"	a
lua_load	src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	src/llimits.h	214;"	d
lua_longassert	src/llimits.h	87;"	d
lua_longassert	src/llimits.h	91;"	d
lua_longjmp	src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	doc/manual.html	/^<hr><h3><a name="lua_newstate"><code>lua_newstate<\/code><\/a><\/h3><p>$/;"	a
lua_newstate	src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	doc/manual.html	/^<hr><h3><a name="lua_newtable"><code>lua_newtable<\/code><\/a><\/h3><p>$/;"	a
lua_newtable	src/lua.h	346;"	d
lua_newthread	doc/manual.html	/^<hr><h3><a name="lua_newthread"><code>lua_newthread<\/code><\/a><\/h3><p>$/;"	a
lua_newthread	src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	doc/manual.html	/^<hr><h3><a name="lua_newuserdata"><code>lua_newuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_newuserdata	src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	doc/manual.html	/^<hr><h3><a name="lua_next"><code>lua_next<\/code><\/a><\/h3><p>$/;"	a
lua_next	src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2str	src/luaconf.h	436;"	d
lua_number2strx	src/lstrlib.c	/^static int lua_number2strx (lua_State *L, char *buff, int sz,$/;"	f	file:
lua_number2strx	src/luaconf.h	637;"	d
lua_numbertointeger	doc/manual.html	/^<hr><h3><a name="lua_numbertointeger"><code>lua_numbertointeger<\/code><\/a><\/h3>$/;"	a
lua_numbertointeger	src/luaconf.h	447;"	d
lua_objlen	src/luaconf.h	383;"	d
lua_pcall	doc/manual.html	/^<hr><h3><a name="lua_pcall"><code>lua_pcall<\/code><\/a><\/h3><p>$/;"	a
lua_pcall	src/lua.h	278;"	d
lua_pcallk	doc/manual.html	/^<hr><h3><a name="lua_pcallk"><code>lua_pcallk<\/code><\/a><\/h3><p>$/;"	a
lua_pcallk	src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pointer2str	src/luaconf.h	627;"	d
lua_pop	doc/manual.html	/^<hr><h3><a name="lua_pop"><code>lua_pop<\/code><\/a><\/h3><p>$/;"	a
lua_pop	src/lua.h	344;"	d
lua_pushboolean	doc/manual.html	/^<hr><h3><a name="lua_pushboolean"><code>lua_pushboolean<\/code><\/a><\/h3><p>$/;"	a
lua_pushboolean	src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	doc/manual.html	/^<hr><h3><a name="lua_pushcclosure"><code>lua_pushcclosure<\/code><\/a><\/h3><p>$/;"	a
lua_pushcclosure	src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	doc/manual.html	/^<hr><h3><a name="lua_pushcfunction"><code>lua_pushcfunction<\/code><\/a><\/h3><p>$/;"	a
lua_pushcfunction	src/lua.h	350;"	d
lua_pushfstring	doc/manual.html	/^<hr><h3><a name="lua_pushfstring"><code>lua_pushfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushfstring	src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	doc/manual.html	/^<hr><h3><a name="lua_pushglobaltable"><code>lua_pushglobaltable<\/code><\/a><\/h3><p>$/;"	a
lua_pushglobaltable	src/lua.h	363;"	d
lua_pushinteger	doc/manual.html	/^<hr><h3><a name="lua_pushinteger"><code>lua_pushinteger<\/code><\/a><\/h3><p>$/;"	a
lua_pushinteger	src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	doc/manual.html	/^<hr><h3><a name="lua_pushlightuserdata"><code>lua_pushlightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_pushlightuserdata	src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	doc/manual.html	/^<hr><h3><a name="lua_pushliteral"><code>lua_pushliteral<\/code><\/a><\/h3><p>$/;"	a
lua_pushliteral	src/lua.h	361;"	d
lua_pushlstring	doc/manual.html	/^<hr><h3><a name="lua_pushlstring"><code>lua_pushlstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushlstring	src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	doc/manual.html	/^<hr><h3><a name="lua_pushnil"><code>lua_pushnil<\/code><\/a><\/h3><p>$/;"	a
lua_pushnil	src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	doc/manual.html	/^<hr><h3><a name="lua_pushnumber"><code>lua_pushnumber<\/code><\/a><\/h3><p>$/;"	a
lua_pushnumber	src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	doc/manual.html	/^<hr><h3><a name="lua_pushstring"><code>lua_pushstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushstring	src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	doc/manual.html	/^<hr><h3><a name="lua_pushthread"><code>lua_pushthread<\/code><\/a><\/h3><p>$/;"	a
lua_pushthread	src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	src/lua.h	385;"	d
lua_pushvalue	doc/manual.html	/^<hr><h3><a name="lua_pushvalue"><code>lua_pushvalue<\/code><\/a><\/h3><p>$/;"	a
lua_pushvalue	src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	doc/manual.html	/^<hr><h3><a name="lua_pushvfstring"><code>lua_pushvfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushvfstring	src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	doc/manual.html	/^<hr><h3><a name="lua_rawequal"><code>lua_rawequal<\/code><\/a><\/h3><p>$/;"	a
lua_rawequal	src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	doc/manual.html	/^<hr><h3><a name="lua_rawget"><code>lua_rawget<\/code><\/a><\/h3><p>$/;"	a
lua_rawget	src/lapi.c	/^LUA_API int lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	doc/manual.html	/^<hr><h3><a name="lua_rawgeti"><code>lua_rawgeti<\/code><\/a><\/h3><p>$/;"	a
lua_rawgeti	src/lapi.c	/^LUA_API int lua_rawgeti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawgetp	doc/manual.html	/^<hr><h3><a name="lua_rawgetp"><code>lua_rawgetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawgetp	src/lapi.c	/^LUA_API int lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	doc/manual.html	/^<hr><h3><a name="lua_rawlen"><code>lua_rawlen<\/code><\/a><\/h3><p>$/;"	a
lua_rawlen	src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	doc/manual.html	/^<hr><h3><a name="lua_rawset"><code>lua_rawset<\/code><\/a><\/h3><p>$/;"	a
lua_rawset	src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	doc/manual.html	/^<hr><h3><a name="lua_rawseti"><code>lua_rawseti<\/code><\/a><\/h3><p>$/;"	a
lua_rawseti	src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawsetp	doc/manual.html	/^<hr><h3><a name="lua_rawsetp"><code>lua_rawsetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawsetp	src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	src/lua.c	84;"	d	file:
lua_readline	src/lua.c	90;"	d	file:
lua_register	doc/manual.html	/^<hr><h3><a name="lua_register"><code>lua_register<\/code><\/a><\/h3><p>$/;"	a
lua_register	src/lua.h	348;"	d
lua_remove	doc/manual.html	/^<hr><h3><a name="lua_remove"><code>lua_remove<\/code><\/a><\/h3><p>$/;"	a
lua_remove	src/lua.h	371;"	d
lua_replace	doc/manual.html	/^<hr><h3><a name="lua_replace"><code>lua_replace<\/code><\/a><\/h3><p>$/;"	a
lua_replace	src/lua.h	373;"	d
lua_resume	doc/manual.html	/^<hr><h3><a name="lua_resume"><code>lua_resume<\/code><\/a><\/h3><p>$/;"	a
lua_resume	src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_rotate	doc/manual.html	/^<hr><h3><a name="lua_rotate"><code>lua_rotate<\/code><\/a><\/h3><p>$/;"	a
lua_rotate	src/lapi.c	/^LUA_API void lua_rotate (lua_State *L, int idx, int n) {$/;"	f
lua_saveline	src/lua.c	85;"	d	file:
lua_saveline	src/lua.c	93;"	d	file:
lua_setallocf	doc/manual.html	/^<hr><h3><a name="lua_setallocf"><code>lua_setallocf<\/code><\/a><\/h3><p>$/;"	a
lua_setallocf	src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	doc/manual.html	/^<hr><h3><a name="lua_setfield"><code>lua_setfield<\/code><\/a><\/h3><p>$/;"	a
lua_setfield	src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	doc/manual.html	/^<hr><h3><a name="lua_setglobal"><code>lua_setglobal<\/code><\/a><\/h3><p>$/;"	a
lua_setglobal	src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *name) {$/;"	f
lua_sethook	doc/manual.html	/^<hr><h3><a name="lua_sethook"><code>lua_sethook<\/code><\/a><\/h3><p>$/;"	a
lua_sethook	src/ldebug.c	/^LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_seti	doc/manual.html	/^<hr><h3><a name="lua_seti"><code>lua_seti<\/code><\/a><\/h3><p>$/;"	a
lua_seti	src/lapi.c	/^LUA_API void lua_seti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_setlocal	doc/manual.html	/^<hr><h3><a name="lua_setlocal"><code>lua_setlocal<\/code><\/a><\/h3><p>$/;"	a
lua_setlocal	src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	doc/manual.html	/^<hr><h3><a name="lua_setmetatable"><code>lua_setmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_setmetatable	src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	doc/manual.html	/^<hr><h3><a name="lua_settable"><code>lua_settable<\/code><\/a><\/h3><p>$/;"	a
lua_settable	src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	doc/manual.html	/^<hr><h3><a name="lua_settop"><code>lua_settop<\/code><\/a><\/h3><p>$/;"	a
lua_settop	src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	doc/manual.html	/^<hr><h3><a name="lua_setupvalue"><code>lua_setupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_setupvalue	src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	doc/manual.html	/^<hr><h3><a name="lua_setuservalue"><code>lua_setuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_setuservalue	src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	doc/manual.html	/^<hr><h3><a name="lua_status"><code>lua_status<\/code><\/a><\/h3><p>$/;"	a
lua_status	src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	src/lua.c	53;"	d	file:
lua_stdin_is_tty	src/lua.c	60;"	d	file:
lua_stdin_is_tty	src/lua.c	65;"	d	file:
lua_str2number	src/luaconf.h	468;"	d
lua_str2number	src/luaconf.h	484;"	d
lua_str2number	src/luaconf.h	499;"	d
lua_str2number	src/luaconf.h	650;"	d
lua_str2number	src/luaconf.h	652;"	d
lua_stringtonumber	doc/manual.html	/^<hr><h3><a name="lua_stringtonumber"><code>lua_stringtonumber<\/code><\/a><\/h3><p>$/;"	a
lua_stringtonumber	src/lapi.c	/^LUA_API size_t lua_stringtonumber (lua_State *L, const char *s) {$/;"	f
lua_strlen	src/luaconf.h	381;"	d
lua_strx2number	src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_strx2number	src/luaconf.h	619;"	d
lua_tmpnam	src/loslib.c	121;"	d	file:
lua_tmpnam	src/loslib.c	131;"	d	file:
lua_toboolean	doc/manual.html	/^<hr><h3><a name="lua_toboolean"><code>lua_toboolean<\/code><\/a><\/h3><p>$/;"	a
lua_toboolean	src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	doc/manual.html	/^<hr><h3><a name="lua_tocfunction"><code>lua_tocfunction<\/code><\/a><\/h3><p>$/;"	a
lua_tocfunction	src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	doc/manual.html	/^<hr><h3><a name="lua_tointeger"><code>lua_tointeger<\/code><\/a><\/h3><p>$/;"	a
lua_tointeger	src/lua.h	342;"	d
lua_tointegerx	doc/manual.html	/^<hr><h3><a name="lua_tointegerx"><code>lua_tointegerx<\/code><\/a><\/h3><p>$/;"	a
lua_tointegerx	src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_tolstring	doc/manual.html	/^<hr><h3><a name="lua_tolstring"><code>lua_tolstring<\/code><\/a><\/h3><p>$/;"	a
lua_tolstring	src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	doc/manual.html	/^<hr><h3><a name="lua_tonumber"><code>lua_tonumber<\/code><\/a><\/h3><p>$/;"	a
lua_tonumber	src/lua.h	341;"	d
lua_tonumberx	doc/manual.html	/^<hr><h3><a name="lua_tonumberx"><code>lua_tonumberx<\/code><\/a><\/h3><p>$/;"	a
lua_tonumberx	src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_topointer	doc/manual.html	/^<hr><h3><a name="lua_topointer"><code>lua_topointer<\/code><\/a><\/h3><p>$/;"	a
lua_topointer	src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	doc/manual.html	/^<hr><h3><a name="lua_tostring"><code>lua_tostring<\/code><\/a><\/h3><p>$/;"	a
lua_tostring	src/lua.h	366;"	d
lua_tothread	doc/manual.html	/^<hr><h3><a name="lua_tothread"><code>lua_tothread<\/code><\/a><\/h3><p>$/;"	a
lua_tothread	src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	src/lua.h	387;"	d
lua_tounsignedx	src/lua.h	386;"	d
lua_touserdata	doc/manual.html	/^<hr><h3><a name="lua_touserdata"><code>lua_touserdata<\/code><\/a><\/h3><p>$/;"	a
lua_touserdata	src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	doc/manual.html	/^<hr><h3><a name="lua_type"><code>lua_type<\/code><\/a><\/h3><p>$/;"	a
lua_type	src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	doc/manual.html	/^<hr><h3><a name="lua_typename"><code>lua_typename<\/code><\/a><\/h3><p>$/;"	a
lua_typename	src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	src/llimits.h	215;"	d
lua_upvalueid	doc/manual.html	/^<hr><h3><a name="lua_upvalueid"><code>lua_upvalueid<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueid	src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	doc/manual.html	/^<hr><h3><a name="lua_upvalueindex"><code>lua_upvalueindex<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueindex	src/lua.h	43;"	d
lua_upvaluejoin	doc/manual.html	/^<hr><h3><a name="lua_upvaluejoin"><code>lua_upvaluejoin<\/code><\/a><\/h3><p>$/;"	a
lua_upvaluejoin	src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	doc/manual.html	/^<hr><h3><a name="lua_version"><code>lua_version<\/code><\/a><\/h3><p>$/;"	a
lua_version	src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_writeline	src/lauxlib.h	228;"	d
lua_writestring	src/lauxlib.h	223;"	d
lua_writestringerror	src/lauxlib.h	233;"	d
lua_xmove	doc/manual.html	/^<hr><h3><a name="lua_xmove"><code>lua_xmove<\/code><\/a><\/h3><p>$/;"	a
lua_xmove	src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	doc/manual.html	/^<hr><h3><a name="lua_yield"><code>lua_yield<\/code><\/a><\/h3><p>$/;"	a
lua_yield	src/lua.h	295;"	d
lua_yieldk	doc/manual.html	/^<hr><h3><a name="lua_yieldk"><code>lua_yieldk<\/code><\/a><\/h3><p>$/;"	a
lua_yieldk	src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, lua_KContext ctx,$/;"	f
luac_c	src/luac.c	217;"	d	file:
luac_c	src/luac.c	7;"	d	file:
luaconf_h	src/luaconf.h	9;"	d
luai_apicheck	src/llimits.h	98;"	d
luai_apicheck	src/luaconf.h	708;"	d
luai_ctype_	src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_ctype_	src/lctype.h	/^LUAI_DDEC const lu_byte luai_ctype_[UCHAR_MAX + 2];$/;"	v
luai_jmpbuf	src/ldo.c	61;"	d	file:
luai_jmpbuf	src/ldo.c	68;"	d	file:
luai_jmpbuf	src/ldo.c	75;"	d	file:
luai_makeseed	src/lstate.c	46;"	d	file:
luai_numadd	src/llimits.h	291;"	d
luai_numdiv	src/llimits.h	269;"	d
luai_numeq	src/llimits.h	295;"	d
luai_numidiv	src/llimits.h	264;"	d
luai_numisnan	src/llimits.h	298;"	d
luai_numle	src/llimits.h	297;"	d
luai_numlt	src/llimits.h	296;"	d
luai_nummod	src/llimits.h	280;"	d
luai_nummul	src/llimits.h	293;"	d
luai_numpow	src/llimits.h	286;"	d
luai_numsub	src/llimits.h	292;"	d
luai_numunm	src/llimits.h	294;"	d
luai_threadyield	src/llimits.h	223;"	d
luai_userstateclose	src/llimits.h	237;"	d
luai_userstatefree	src/llimits.h	245;"	d
luai_userstateopen	src/llimits.h	233;"	d
luai_userstateresume	src/llimits.h	249;"	d
luai_userstatethread	src/llimits.h	241;"	d
luai_userstateyield	src/llimits.h	253;"	d
luai_verifycode	src/lundump.c	28;"	d	file:
lualib_h	src/lualib.h	9;"	d
luaopen_base	src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit32	src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_mytestlib	luatest/luamod.c	/^int luaopen_mytestlib(lua_State* L) $/;"	f
luaopen_os	src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
luaopen_utf8	src/lutf8lib.c	/^LUAMOD_API int luaopen_utf8 (lua_State *L) {$/;"	f
lundump_c	src/lundump.c	7;"	d	file:
lundump_h	src/lundump.h	8;"	d
lutf8lib_c	src/lutf8lib.c	7;"	d	file:
lvm_c	src/lvm.c	7;"	d	file:
lvm_h	src/lvm.h	8;"	d
lzio_c	src/lzio.c	7;"	d	file:
lzio_h	src/lzio.h	9;"	d
main	luatest/lua1.c	/^int main()$/;"	f
main	luatest/luabuiltin.c	/^int main(int argc, const char *argv[])$/;"	f
main	src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	src/luac.c	/^int main(int argc, char* argv[])$/;"	f
mainfunc	src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
makemask	src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	src/lgc.c	67;"	d	file:
markbeingfnz	src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
marklen	src/lua.c	283;"	d	file:
markmt	src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	src/lgc.c	86;"	d	file:
markobjectN	src/lgc.c	92;"	d	file:
markupval	src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	src/lgc.c	83;"	d	file:
mask	src/lbitlib.c	45;"	d	file:
maskcolors	src/lgc.c	66;"	d	file:
match	src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_ceil	src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
math_toint	src/lmathlib.c	/^static int math_toint (lua_State *L) {$/;"	f	file:
math_type	src/lmathlib.c	/^static int math_type (lua_State *L) {$/;"	f	file:
math_ult	src/lmathlib.c	/^static int math_ult (lua_State *L) {$/;"	f	file:
mathlib	src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max_expand	src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
maxalign	src/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:
maxn	src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxstacksize	src/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto
memerrmsg	src/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State
metatable	src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
metatable	src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table
min_expand	src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
mode	src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
modinit	src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
movegotosout	src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveresults	src/ldo.c	/^static int moveresults (lua_State *L, const TValue *firstResult, StkId res,$/;"	f	file:
ms	src/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:
msghandler	src/lua.c	/^static int msghandler (lua_State *L) {$/;"	f	file:
mt	src/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
multiline	src/lua.c	/^static int multiline (lua_State *L) {$/;"	f	file:
mylibs	luatest/luamod.c	/^static luaL_Reg mylibs[] = { $/;"	v	file:
n	src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
n	src/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	src/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon23	file:
n	src/llimits.h	/^  lua_Number n;$/;"	m	union:__anon1
n	src/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value
n	src/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon20
n	src/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	src/lstrlib.c	/^  lua_Number n;$/;"	m	union:Ftypes	file:
n	src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon13	file:
n	src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
nCcalls	src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
na	src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
nactvar	src/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc
nactvar	src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
name	src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	src/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	src/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	src/lundump.c	/^  const char *name;$/;"	m	struct:__anon7	file:
namewhat	src/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
nativeendian	src/lstrlib.c	/^} nativeendian = {1};$/;"	v	typeref:union:__anon12	file:
nci	src/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State
need_value	src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
negatecondition	src/lcode.c	/^static void negatecondition (FuncState *fs, expdesc *e) {$/;"	f	file:
new_localvar	src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	src/lparser.c	191;"	d	file:
new_localvarliteral_	src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
newbox	src/lauxlib.c	/^static void *newbox (lua_State *L, size_t newsize) {$/;"	f	file:
newfile	src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newupvalue	src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	src/lfunc.h	/^      UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon21::__anon22
next	src/llex.c	32;"	d	file:
next	src/lobject.h	/^    int next;  \/* for chaining (offset for next node) *\/$/;"	m	struct:TKey::__anon9
next	src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next_ci	src/ldo.c	395;"	d	file:
nextc	src/liolib.c	/^static int nextc (RN *rn) {$/;"	f	file:
nh	src/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:
nhsize	src/ltable.c	/^  unsigned int nhsize;$/;"	m	struct:__anon2	file:
nilK	src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk	src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon9
nk	src/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState
nlocvars	src/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
nny	src/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State
noLuaClosure	src/ldebug.c	34;"	d	file:
node	src/lobject.h	/^  Node *node;$/;"	m	struct:Table
noenv	src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
norm 	luatest/lib1.lua	/^function norm (x, y)$/;"	f
nospecials	src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
novariant	src/lobject.h	130;"	d
np	src/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState
nparams	src/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
nresults	src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	src/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
num2straux	src/lstrlib.c	/^static int num2straux (char *buff, int sz, lua_Number x) {$/;"	f	file:
numarith	src/lobject.c	/^static lua_Number numarith (lua_State *L, int op, lua_Number v1,$/;"	f	file:
numparams	src/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto
numusearray	src/ltable.c	/^static unsigned int numusearray (const Table *t, unsigned int *nums) {$/;"	f	file:
numusehash	src/ltable.c	/^static int numusehash (const Table *t, unsigned int *nums, unsigned int *pna) {$/;"	f	file:
nups	src/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	src/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	src/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	src/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon18
nvalue	src/lobject.h	165;"	d
obj2gco	src/lstate.h	238;"	d
old_errfunc	src/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon4::__anon6
oldpc	src/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
open	src/lfunc.h	/^    } open;$/;"	m	union:UpVal::__anon21	typeref:struct:UpVal::__anon21::__anon22
open_func	src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
opencheck	src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	src/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
opmode	src/lopcodes.c	72;"	d	file:
os_clock	src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
other	doc/readme.html	/^<H3><A NAME="other">Building Lua on other systems<\/A><\/H3>$/;"	a
otherwhite	src/lgc.h	94;"	d
output	src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
p	src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	src/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	src/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto
p	src/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:
p	src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon13	file:
p	src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p_end	src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
pack	src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
packint	src/lstrlib.c	/^static void packint (luaL_Buffer *b, lua_Unsigned n,$/;"	f	file:
pairsmeta	src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
parlist	src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
partition	src/ltablib.c	/^static IdxT partition (lua_State *L, IdxT lo, IdxT up) {$/;"	f	file:
patchlistaux	src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pc	src/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState
pc	src/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pcRel	src/ldebug.h	14;"	d
pdf-LUAL_BUFFERSIZE	doc/manual.html	/^with the predefined size <a name="pdf-LUAL_BUFFERSIZE"><code>LUAL_BUFFERSIZE<\/code><\/a>.$/;"	a
pdf-LUA_CPATH	doc/manual.html	/^or the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH<\/code><\/a>,$/;"	a
pdf-LUA_CPATH_5_3	doc/manual.html	/^using the environment variable <a name="pdf-LUA_CPATH_5_3"><code>LUA_CPATH_5_3<\/code><\/a>,$/;"	a
pdf-LUA_ERRERR	doc/manual.html	/^<li><b><a name="pdf-LUA_ERRERR"><code>LUA_ERRERR<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRFILE	doc/manual.html	/^but it has an extra error code <a name="pdf-LUA_ERRFILE"><code>LUA_ERRFILE<\/code><\/a>$/;"	a
pdf-LUA_ERRGCMM	doc/manual.html	/^<li><b><a name="pdf-LUA_ERRGCMM"><code>LUA_ERRGCMM<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRMEM	doc/manual.html	/^<li><b><a name="pdf-LUA_ERRMEM"><code>LUA_ERRMEM<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRRUN	doc/manual.html	/^<li><b><a name="pdf-LUA_ERRRUN"><code>LUA_ERRRUN<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRSYNTAX	doc/manual.html	/^<li><b><a name="pdf-LUA_ERRSYNTAX"><code>LUA_ERRSYNTAX<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_HOOKCALL	doc/manual.html	/^<a name="pdf-LUA_HOOKCALL"><code>LUA_HOOKCALL<\/code><\/a>, <a name="pdf-LUA_HOOKRET"><code>LUA_HOOKRET<\/code><\/a>,$/;"	a
pdf-LUA_HOOKCOUNT	doc/manual.html	/^and <a name="pdf-LUA_HOOKCOUNT"><code>LUA_HOOKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_HOOKTAILCALL	doc/manual.html	/^<a name="pdf-LUA_HOOKTAILCALL"><code>LUA_HOOKTAILCALL<\/code><\/a>, <a name="pdf-LUA_HOOKLINE"><code>LUA_HOOKLINE<\/code><\/a>,$/;"	a
pdf-LUA_INIT	doc/manual.html	/^(or <a name="pdf-LUA_INIT"><code>LUA_INIT<\/code><\/a> if the versioned name is not defined)$/;"	a
pdf-LUA_INIT_5_3	doc/manual.html	/^the interpreter checks for an environment variable <a name="pdf-LUA_INIT_5_3"><code>LUA_INIT_5_3<\/code><\/a>$/;"	a
pdf-LUA_MASKCALL	doc/manual.html	/^<a name="pdf-LUA_MASKCALL"><code>LUA_MASKCALL<\/code><\/a>,$/;"	a
pdf-LUA_MASKCOUNT	doc/manual.html	/^and <a name="pdf-LUA_MASKCOUNT"><code>LUA_MASKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_MASKLINE	doc/manual.html	/^<a name="pdf-LUA_MASKLINE"><code>LUA_MASKLINE<\/code><\/a>,$/;"	a
pdf-LUA_MASKRET	doc/manual.html	/^<a name="pdf-LUA_MASKRET"><code>LUA_MASKRET<\/code><\/a>,$/;"	a
pdf-LUA_MININTEGER	doc/manual.html	/^<a name="pdf-LUA_MININTEGER"><code>LUA_MININTEGER<\/code><\/a> and <a name="pdf-LUA_MAXINTEGER"><code>LUA_MAXINTEGER<\/code><\/a>,$/;"	a
pdf-LUA_MINSTACK	doc/manual.html	/^at least <a name="pdf-LUA_MINSTACK"><code>LUA_MINSTACK<\/code><\/a> extra slots.$/;"	a
pdf-LUA_MULTRET	doc/manual.html	/^unless <code>nresults<\/code> is <a name="pdf-LUA_MULTRET"><code>LUA_MULTRET<\/code><\/a>.$/;"	a
pdf-LUA_NOREF	doc/manual.html	/^The constant <a name="pdf-LUA_NOREF"><code>LUA_NOREF<\/code><\/a> is guaranteed to be different$/;"	a
pdf-LUA_OK	doc/manual.html	/^<li><b><a name="pdf-LUA_OK"><code>LUA_OK<\/code><\/a> (0): <\/b>$/;"	a
pdf-LUA_OPADD	doc/manual.html	/^<li><b><a name="pdf-LUA_OPADD"><code>LUA_OPADD<\/code><\/a>: <\/b> performs addition (<code>+<\/code>)<\/li>$/;"	a
pdf-LUA_OPBAND	doc/manual.html	/^<li><b><a name="pdf-LUA_OPBAND"><code>LUA_OPBAND<\/code><\/a>: <\/b> performs bitwise AND (<code>&amp;<\/code>)<\/li>$/;"	a
pdf-LUA_OPBNOT	doc/manual.html	/^<li><b><a name="pdf-LUA_OPBNOT"><code>LUA_OPBNOT<\/code><\/a>: <\/b> performs bitwise NOT (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPBOR	doc/manual.html	/^<li><b><a name="pdf-LUA_OPBOR"><code>LUA_OPBOR<\/code><\/a>: <\/b> performs bitwise OR (<code>|<\/code>)<\/li>$/;"	a
pdf-LUA_OPBXOR	doc/manual.html	/^<li><b><a name="pdf-LUA_OPBXOR"><code>LUA_OPBXOR<\/code><\/a>: <\/b> performs bitwise exclusive OR (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPDIV	doc/manual.html	/^<li><b><a name="pdf-LUA_OPDIV"><code>LUA_OPDIV<\/code><\/a>: <\/b> performs float division (<code>\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPEQ	doc/manual.html	/^<li><b><a name="pdf-LUA_OPEQ"><code>LUA_OPEQ<\/code><\/a>: <\/b> compares for equality (<code>==<\/code>)<\/li>$/;"	a
pdf-LUA_OPIDIV	doc/manual.html	/^<li><b><a name="pdf-LUA_OPIDIV"><code>LUA_OPIDIV<\/code><\/a>: <\/b> performs floor division (<code>\/\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPLE	doc/manual.html	/^<li><b><a name="pdf-LUA_OPLE"><code>LUA_OPLE<\/code><\/a>: <\/b> compares for less or equal (<code>&lt;=<\/code>)<\/li>$/;"	a
pdf-LUA_OPLT	doc/manual.html	/^<li><b><a name="pdf-LUA_OPLT"><code>LUA_OPLT<\/code><\/a>: <\/b> compares for less than (<code>&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPMOD	doc/manual.html	/^<li><b><a name="pdf-LUA_OPMOD"><code>LUA_OPMOD<\/code><\/a>: <\/b> performs modulo (<code>%<\/code>)<\/li>$/;"	a
pdf-LUA_OPMUL	doc/manual.html	/^<li><b><a name="pdf-LUA_OPMUL"><code>LUA_OPMUL<\/code><\/a>: <\/b> performs multiplication (<code>*<\/code>)<\/li>$/;"	a
pdf-LUA_OPPOW	doc/manual.html	/^<li><b><a name="pdf-LUA_OPPOW"><code>LUA_OPPOW<\/code><\/a>: <\/b> performs exponentiation (<code>^<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHL	doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHL"><code>LUA_OPSHL<\/code><\/a>: <\/b> performs left shift (<code>&lt;&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHR	doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHR"><code>LUA_OPSHR<\/code><\/a>: <\/b> performs right shift (<code>&gt;&gt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSUB	doc/manual.html	/^<li><b><a name="pdf-LUA_OPSUB"><code>LUA_OPSUB<\/code><\/a>: <\/b> performs subtraction (<code>-<\/code>)<\/li>$/;"	a
pdf-LUA_OPUNM	doc/manual.html	/^<li><b><a name="pdf-LUA_OPUNM"><code>LUA_OPUNM<\/code><\/a>: <\/b> performs mathematical negation (unary <code>-<\/code>)<\/li>$/;"	a
pdf-LUA_PATH	doc/manual.html	/^the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH<\/code><\/a> or$/;"	a
pdf-LUA_PATH_5_3	doc/manual.html	/^the value of the environment variable <a name="pdf-LUA_PATH_5_3"><code>LUA_PATH_5_3<\/code><\/a> or$/;"	a
pdf-LUA_REFNIL	doc/manual.html	/^<a href="#luaL_ref"><code>luaL_ref<\/code><\/a> returns the constant <a name="pdf-LUA_REFNIL"><code>LUA_REFNIL<\/code><\/a>.$/;"	a
pdf-LUA_REGISTRYINDEX	doc/manual.html	/^<a name="pdf-LUA_REGISTRYINDEX"><code>LUA_REGISTRYINDEX<\/code><\/a>.$/;"	a
pdf-LUA_RIDX_GLOBALS	doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_GLOBALS"><code>LUA_RIDX_GLOBALS<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_RIDX_MAINTHREAD	doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_MAINTHREAD"><code>LUA_RIDX_MAINTHREAD<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_TBOOLEAN	doc/manual.html	/^<a name="pdf-LUA_TBOOLEAN"><code>LUA_TBOOLEAN<\/code><\/a>,$/;"	a
pdf-LUA_TFUNCTION	doc/manual.html	/^<a name="pdf-LUA_TFUNCTION"><code>LUA_TFUNCTION<\/code><\/a>,$/;"	a
pdf-LUA_TLIGHTUSERDATA	doc/manual.html	/^<a name="pdf-LUA_TLIGHTUSERDATA"><code>LUA_TLIGHTUSERDATA<\/code><\/a>.$/;"	a
pdf-LUA_TNIL	doc/manual.html	/^<a name="pdf-LUA_TNIL"><code>LUA_TNIL<\/code><\/a> (0),$/;"	a
pdf-LUA_TNONE	doc/manual.html	/^contains a value of a virtual type <a name="pdf-LUA_TNONE"><code>LUA_TNONE<\/code><\/a>,$/;"	a
pdf-LUA_TNUMBER	doc/manual.html	/^<a name="pdf-LUA_TNUMBER"><code>LUA_TNUMBER<\/code><\/a>,$/;"	a
pdf-LUA_TSTRING	doc/manual.html	/^<a name="pdf-LUA_TSTRING"><code>LUA_TSTRING<\/code><\/a>,$/;"	a
pdf-LUA_TTABLE	doc/manual.html	/^<a name="pdf-LUA_TTABLE"><code>LUA_TTABLE<\/code><\/a>,$/;"	a
pdf-LUA_TTHREAD	doc/manual.html	/^<a name="pdf-LUA_TTHREAD"><code>LUA_TTHREAD<\/code><\/a>,$/;"	a
pdf-LUA_TUSERDATA	doc/manual.html	/^<a name="pdf-LUA_TUSERDATA"><code>LUA_TUSERDATA<\/code><\/a>,$/;"	a
pdf-LUA_USE_APICHECK	doc/manual.html	/^with the macro <a name="pdf-LUA_USE_APICHECK"><code>LUA_USE_APICHECK<\/code><\/a> defined.$/;"	a
pdf-LUA_YIELD	doc/manual.html	/^or <a name="pdf-LUA_YIELD"><code>LUA_YIELD<\/code><\/a> if the thread is suspended.$/;"	a
pdf-_G	doc/manual.html	/^<hr><h3><a name="pdf-_G"><code>_G<\/code><\/a><\/h3>$/;"	a
pdf-_PROMPT	doc/manual.html	/^If the global variable <a name="pdf-_PROMPT"><code>_PROMPT<\/code><\/a> contains a string,$/;"	a
pdf-_PROMPT2	doc/manual.html	/^Similarly, if the global variable <a name="pdf-_PROMPT2"><code>_PROMPT2<\/code><\/a> contains a string,$/;"	a
pdf-_VERSION	doc/manual.html	/^<hr><h3><a name="pdf-_VERSION"><code>_VERSION<\/code><\/a><\/h3>$/;"	a
pdf-assert	doc/manual.html	/^<hr><h3><a name="pdf-assert"><code>assert (v [, message])<\/code><\/a><\/h3>$/;"	a
pdf-collectgarbage	doc/manual.html	/^<hr><h3><a name="pdf-collectgarbage"><code>collectgarbage ([opt [, arg]])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine	doc/manual.html	/^which come inside the table <a name="pdf-coroutine"><code>coroutine<\/code><\/a>.$/;"	a
pdf-coroutine.create	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.create"><code>coroutine.create (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.isyieldable	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.isyieldable"><code>coroutine.isyieldable ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.resume	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.resume"><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.running	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.running"><code>coroutine.running ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.status	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.status"><code>coroutine.status (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.wrap	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.wrap"><code>coroutine.wrap (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.yield	doc/manual.html	/^<hr><h3><a name="pdf-coroutine.yield"><code>coroutine.yield (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-debug	doc/manual.html	/^inside the <a name="pdf-debug"><code>debug<\/code><\/a> table.$/;"	a
pdf-debug.debug	doc/manual.html	/^<hr><h3><a name="pdf-debug.debug"><code>debug.debug ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.gethook	doc/manual.html	/^<hr><h3><a name="pdf-debug.gethook"><code>debug.gethook ([thread])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getinfo	doc/manual.html	/^<hr><h3><a name="pdf-debug.getinfo"><code>debug.getinfo ([thread,] f [, what])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getlocal	doc/manual.html	/^<hr><h3><a name="pdf-debug.getlocal"><code>debug.getlocal ([thread,] f, local)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getmetatable	doc/manual.html	/^<hr><h3><a name="pdf-debug.getmetatable"><code>debug.getmetatable (value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getregistry	doc/manual.html	/^<hr><h3><a name="pdf-debug.getregistry"><code>debug.getregistry ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getupvalue	doc/manual.html	/^<hr><h3><a name="pdf-debug.getupvalue"><code>debug.getupvalue (f, up)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getuservalue	doc/manual.html	/^<hr><h3><a name="pdf-debug.getuservalue"><code>debug.getuservalue (u)<\/code><\/a><\/h3>$/;"	a
pdf-debug.sethook	doc/manual.html	/^<hr><h3><a name="pdf-debug.sethook"><code>debug.sethook ([thread,] hook, mask [, count])<\/code><\/a><\/h3>$/;"	a
pdf-debug.setlocal	doc/manual.html	/^<hr><h3><a name="pdf-debug.setlocal"><code>debug.setlocal ([thread,] level, local, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setmetatable	doc/manual.html	/^<hr><h3><a name="pdf-debug.setmetatable"><code>debug.setmetatable (value, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setupvalue	doc/manual.html	/^<hr><h3><a name="pdf-debug.setupvalue"><code>debug.setupvalue (f, up, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setuservalue	doc/manual.html	/^<hr><h3><a name="pdf-debug.setuservalue"><code>debug.setuservalue (udata, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.traceback	doc/manual.html	/^<hr><h3><a name="pdf-debug.traceback"><code>debug.traceback ([thread,] [message [, level]])<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvalueid	doc/manual.html	/^<hr><h3><a name="pdf-debug.upvalueid"><code>debug.upvalueid (f, n)<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvaluejoin	doc/manual.html	/^<hr><h3><a name="pdf-debug.upvaluejoin"><code>debug.upvaluejoin (f1, n1, f2, n2)<\/code><\/a><\/h3>$/;"	a
pdf-dofile	doc/manual.html	/^<hr><h3><a name="pdf-dofile"><code>dofile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-error	doc/manual.html	/^<hr><h3><a name="pdf-error"><code>error (message [, level])<\/code><\/a><\/h3>$/;"	a
pdf-file:close	doc/manual.html	/^<hr><h3><a name="pdf-file:close"><code>file:close ()<\/code><\/a><\/h3>$/;"	a
pdf-file:flush	doc/manual.html	/^<hr><h3><a name="pdf-file:flush"><code>file:flush ()<\/code><\/a><\/h3>$/;"	a
pdf-file:lines	doc/manual.html	/^<hr><h3><a name="pdf-file:lines"><code>file:lines (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:read	doc/manual.html	/^<hr><h3><a name="pdf-file:read"><code>file:read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:seek	doc/manual.html	/^<hr><h3><a name="pdf-file:seek"><code>file:seek ([whence [, offset]])<\/code><\/a><\/h3>$/;"	a
pdf-file:setvbuf	doc/manual.html	/^<hr><h3><a name="pdf-file:setvbuf"><code>file:setvbuf (mode [, size])<\/code><\/a><\/h3>$/;"	a
pdf-file:write	doc/manual.html	/^<hr><h3><a name="pdf-file:write"><code>file:write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-getmetatable	doc/manual.html	/^<hr><h3><a name="pdf-getmetatable"><code>getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-io	doc/manual.html	/^all operations are supplied by table <a name="pdf-io"><code>io<\/code><\/a>.$/;"	a
pdf-io.close	doc/manual.html	/^<hr><h3><a name="pdf-io.close"><code>io.close ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.flush	doc/manual.html	/^<hr><h3><a name="pdf-io.flush"><code>io.flush ()<\/code><\/a><\/h3>$/;"	a
pdf-io.input	doc/manual.html	/^<hr><h3><a name="pdf-io.input"><code>io.input ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.lines	doc/manual.html	/^<hr><h3><a name="pdf-io.lines"><code>io.lines ([filename, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-io.open	doc/manual.html	/^<hr><h3><a name="pdf-io.open"><code>io.open (filename [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.output	doc/manual.html	/^<hr><h3><a name="pdf-io.output"><code>io.output ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.popen	doc/manual.html	/^<hr><h3><a name="pdf-io.popen"><code>io.popen (prog [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.read	doc/manual.html	/^<hr><h3><a name="pdf-io.read"><code>io.read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-io.stdin	doc/manual.html	/^<a name="pdf-io.stdin"><code>io.stdin<\/code><\/a>, <a name="pdf-io.stdout"><code>io.stdout<\/code><\/a>, and <a name="pdf-io.stderr"><code>io.stderr<\/code><\/a>.$/;"	a
pdf-io.tmpfile	doc/manual.html	/^<hr><h3><a name="pdf-io.tmpfile"><code>io.tmpfile ()<\/code><\/a><\/h3>$/;"	a
pdf-io.type	doc/manual.html	/^<hr><h3><a name="pdf-io.type"><code>io.type (obj)<\/code><\/a><\/h3>$/;"	a
pdf-io.write	doc/manual.html	/^<hr><h3><a name="pdf-io.write"><code>io.write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-ipairs	doc/manual.html	/^<hr><h3><a name="pdf-ipairs"><code>ipairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-load	doc/manual.html	/^<hr><h3><a name="pdf-load"><code>load (chunk [, chunkname [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-loadfile	doc/manual.html	/^<hr><h3><a name="pdf-loadfile"><code>loadfile ([filename [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-lua.h	doc/manual.html	/^are declared in the header file <a name="pdf-lua.h"><code>lua.h<\/code><\/a>.$/;"	a
pdf-lualib.h	doc/manual.html	/^These functions are declared in <a name="pdf-lualib.h"><code>lualib.h<\/code><\/a>.$/;"	a
pdf-luaopen_base	doc/manual.html	/^<a name="pdf-luaopen_base"><code>luaopen_base<\/code><\/a> (for the basic library),$/;"	a
pdf-luaopen_coroutine	doc/manual.html	/^<a name="pdf-luaopen_coroutine"><code>luaopen_coroutine<\/code><\/a> (for the coroutine library),$/;"	a
pdf-luaopen_debug	doc/manual.html	/^and <a name="pdf-luaopen_debug"><code>luaopen_debug<\/code><\/a> (for the debug library).$/;"	a
pdf-luaopen_io	doc/manual.html	/^<a name="pdf-luaopen_io"><code>luaopen_io<\/code><\/a> (for the I\/O library),$/;"	a
pdf-luaopen_math	doc/manual.html	/^<a name="pdf-luaopen_math"><code>luaopen_math<\/code><\/a> (for the mathematical library),$/;"	a
pdf-luaopen_os	doc/manual.html	/^<a name="pdf-luaopen_os"><code>luaopen_os<\/code><\/a> (for the operating system library),$/;"	a
pdf-luaopen_package	doc/manual.html	/^<a name="pdf-luaopen_package"><code>luaopen_package<\/code><\/a> (for the package library),$/;"	a
pdf-luaopen_string	doc/manual.html	/^<a name="pdf-luaopen_string"><code>luaopen_string<\/code><\/a> (for the string library),$/;"	a
pdf-luaopen_table	doc/manual.html	/^<a name="pdf-luaopen_table"><code>luaopen_table<\/code><\/a> (for the table library),$/;"	a
pdf-luaopen_utf8	doc/manual.html	/^<a name="pdf-luaopen_utf8"><code>luaopen_utf8<\/code><\/a> (for the UTF8 library),$/;"	a
pdf-math	doc/manual.html	/^It provides all its functions and constants inside the table <a name="pdf-math"><code>math<\/code><\/a>.$/;"	a
pdf-math.abs	doc/manual.html	/^<hr><h3><a name="pdf-math.abs"><code>math.abs (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.acos	doc/manual.html	/^<hr><h3><a name="pdf-math.acos"><code>math.acos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.asin	doc/manual.html	/^<hr><h3><a name="pdf-math.asin"><code>math.asin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan	doc/manual.html	/^<hr><h3><a name="pdf-math.atan"><code>math.atan (y [, x])<\/code><\/a><\/h3>$/;"	a
pdf-math.ceil	doc/manual.html	/^<hr><h3><a name="pdf-math.ceil"><code>math.ceil (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cos	doc/manual.html	/^<hr><h3><a name="pdf-math.cos"><code>math.cos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.deg	doc/manual.html	/^<hr><h3><a name="pdf-math.deg"><code>math.deg (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.exp	doc/manual.html	/^<hr><h3><a name="pdf-math.exp"><code>math.exp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.floor	doc/manual.html	/^<hr><h3><a name="pdf-math.floor"><code>math.floor (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.fmod	doc/manual.html	/^<hr><h3><a name="pdf-math.fmod"><code>math.fmod (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.huge	doc/manual.html	/^<hr><h3><a name="pdf-math.huge"><code>math.huge<\/code><\/a><\/h3>$/;"	a
pdf-math.log	doc/manual.html	/^<hr><h3><a name="pdf-math.log"><code>math.log (x [, base])<\/code><\/a><\/h3>$/;"	a
pdf-math.max	doc/manual.html	/^<hr><h3><a name="pdf-math.max"><code>math.max (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.maxinteger	doc/manual.html	/^<hr><h3><a name="pdf-math.maxinteger"><code>math.maxinteger<\/code><\/a><\/h3>$/;"	a
pdf-math.min	doc/manual.html	/^<hr><h3><a name="pdf-math.min"><code>math.min (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.mininteger	doc/manual.html	/^<hr><h3><a name="pdf-math.mininteger"><code>math.mininteger<\/code><\/a><\/h3>$/;"	a
pdf-math.modf	doc/manual.html	/^<hr><h3><a name="pdf-math.modf"><code>math.modf (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.pi	doc/manual.html	/^<hr><h3><a name="pdf-math.pi"><code>math.pi<\/code><\/a><\/h3>$/;"	a
pdf-math.rad	doc/manual.html	/^<hr><h3><a name="pdf-math.rad"><code>math.rad (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.random	doc/manual.html	/^<hr><h3><a name="pdf-math.random"><code>math.random ([m [, n]])<\/code><\/a><\/h3>$/;"	a
pdf-math.randomseed	doc/manual.html	/^<hr><h3><a name="pdf-math.randomseed"><code>math.randomseed (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sin	doc/manual.html	/^<hr><h3><a name="pdf-math.sin"><code>math.sin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sqrt	doc/manual.html	/^<hr><h3><a name="pdf-math.sqrt"><code>math.sqrt (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tan	doc/manual.html	/^<hr><h3><a name="pdf-math.tan"><code>math.tan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tointeger	doc/manual.html	/^<hr><h3><a name="pdf-math.tointeger"><code>math.tointeger (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.type	doc/manual.html	/^<hr><h3><a name="pdf-math.type"><code>math.type (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.ult	doc/manual.html	/^<hr><h3><a name="pdf-math.ult"><code>math.ult (m, n)<\/code><\/a><\/h3>$/;"	a
pdf-next	doc/manual.html	/^<hr><h3><a name="pdf-next"><code>next (table [, index])<\/code><\/a><\/h3>$/;"	a
pdf-os	doc/manual.html	/^This library is implemented through table <a name="pdf-os"><code>os<\/code><\/a>.$/;"	a
pdf-os.clock	doc/manual.html	/^<hr><h3><a name="pdf-os.clock"><code>os.clock ()<\/code><\/a><\/h3>$/;"	a
pdf-os.date	doc/manual.html	/^<hr><h3><a name="pdf-os.date"><code>os.date ([format [, time]])<\/code><\/a><\/h3>$/;"	a
pdf-os.difftime	doc/manual.html	/^<hr><h3><a name="pdf-os.difftime"><code>os.difftime (t2, t1)<\/code><\/a><\/h3>$/;"	a
pdf-os.execute	doc/manual.html	/^<hr><h3><a name="pdf-os.execute"><code>os.execute ([command])<\/code><\/a><\/h3>$/;"	a
pdf-os.exit	doc/manual.html	/^<hr><h3><a name="pdf-os.exit"><code>os.exit ([code [, close]])<\/code><\/a><\/h3>$/;"	a
pdf-os.getenv	doc/manual.html	/^<hr><h3><a name="pdf-os.getenv"><code>os.getenv (varname)<\/code><\/a><\/h3>$/;"	a
pdf-os.remove	doc/manual.html	/^<hr><h3><a name="pdf-os.remove"><code>os.remove (filename)<\/code><\/a><\/h3>$/;"	a
pdf-os.rename	doc/manual.html	/^<hr><h3><a name="pdf-os.rename"><code>os.rename (oldname, newname)<\/code><\/a><\/h3>$/;"	a
pdf-os.setlocale	doc/manual.html	/^<hr><h3><a name="pdf-os.setlocale"><code>os.setlocale (locale [, category])<\/code><\/a><\/h3>$/;"	a
pdf-os.time	doc/manual.html	/^<hr><h3><a name="pdf-os.time"><code>os.time ([table])<\/code><\/a><\/h3>$/;"	a
pdf-os.tmpname	doc/manual.html	/^<hr><h3><a name="pdf-os.tmpname"><code>os.tmpname ()<\/code><\/a><\/h3>$/;"	a
pdf-package	doc/manual.html	/^Everything else is exported in a table <a name="pdf-package"><code>package<\/code><\/a>.$/;"	a
pdf-package.config	doc/manual.html	/^<hr><h3><a name="pdf-package.config"><code>package.config<\/code><\/a><\/h3>$/;"	a
pdf-package.cpath	doc/manual.html	/^<hr><h3><a name="pdf-package.cpath"><code>package.cpath<\/code><\/a><\/h3>$/;"	a
pdf-package.loaded	doc/manual.html	/^<hr><h3><a name="pdf-package.loaded"><code>package.loaded<\/code><\/a><\/h3>$/;"	a
pdf-package.loadlib	doc/manual.html	/^<hr><h3><a name="pdf-package.loadlib"><code>package.loadlib (libname, funcname)<\/code><\/a><\/h3>$/;"	a
pdf-package.path	doc/manual.html	/^<hr><h3><a name="pdf-package.path"><code>package.path<\/code><\/a><\/h3>$/;"	a
pdf-package.preload	doc/manual.html	/^<hr><h3><a name="pdf-package.preload"><code>package.preload<\/code><\/a><\/h3>$/;"	a
pdf-package.searchers	doc/manual.html	/^<hr><h3><a name="pdf-package.searchers"><code>package.searchers<\/code><\/a><\/h3>$/;"	a
pdf-package.searchpath	doc/manual.html	/^<hr><h3><a name="pdf-package.searchpath"><code>package.searchpath (name, path [, sep [, rep]])<\/code><\/a><\/h3>$/;"	a
pdf-pairs	doc/manual.html	/^<hr><h3><a name="pdf-pairs"><code>pairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-pcall	doc/manual.html	/^<hr><h3><a name="pdf-pcall"><code>pcall (f [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-print	doc/manual.html	/^<hr><h3><a name="pdf-print"><code>print (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-rawequal	doc/manual.html	/^<hr><h3><a name="pdf-rawequal"><code>rawequal (v1, v2)<\/code><\/a><\/h3>$/;"	a
pdf-rawget	doc/manual.html	/^<hr><h3><a name="pdf-rawget"><code>rawget (table, index)<\/code><\/a><\/h3>$/;"	a
pdf-rawlen	doc/manual.html	/^<hr><h3><a name="pdf-rawlen"><code>rawlen (v)<\/code><\/a><\/h3>$/;"	a
pdf-rawset	doc/manual.html	/^<hr><h3><a name="pdf-rawset"><code>rawset (table, index, value)<\/code><\/a><\/h3>$/;"	a
pdf-require	doc/manual.html	/^<hr><h3><a name="pdf-require"><code>require (modname)<\/code><\/a><\/h3>$/;"	a
pdf-select	doc/manual.html	/^<hr><h3><a name="pdf-select"><code>select (index, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-setmetatable	doc/manual.html	/^<hr><h3><a name="pdf-setmetatable"><code>setmetatable (table, metatable)<\/code><\/a><\/h3>$/;"	a
pdf-string	doc/manual.html	/^<a name="pdf-string"><code>string<\/code><\/a>.$/;"	a
pdf-string.byte	doc/manual.html	/^<hr><h3><a name="pdf-string.byte"><code>string.byte (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-string.char	doc/manual.html	/^<hr><h3><a name="pdf-string.char"><code>string.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.dump	doc/manual.html	/^<hr><h3><a name="pdf-string.dump"><code>string.dump (function [, strip])<\/code><\/a><\/h3>$/;"	a
pdf-string.find	doc/manual.html	/^<hr><h3><a name="pdf-string.find"><code>string.find (s, pattern [, init [, plain]])<\/code><\/a><\/h3>$/;"	a
pdf-string.format	doc/manual.html	/^<hr><h3><a name="pdf-string.format"><code>string.format (formatstring, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.gmatch	doc/manual.html	/^<hr><h3><a name="pdf-string.gmatch"><code>string.gmatch (s, pattern)<\/code><\/a><\/h3>$/;"	a
pdf-string.gsub	doc/manual.html	/^<hr><h3><a name="pdf-string.gsub"><code>string.gsub (s, pattern, repl [, n])<\/code><\/a><\/h3>$/;"	a
pdf-string.len	doc/manual.html	/^<hr><h3><a name="pdf-string.len"><code>string.len (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.lower	doc/manual.html	/^<hr><h3><a name="pdf-string.lower"><code>string.lower (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.match	doc/manual.html	/^<hr><h3><a name="pdf-string.match"><code>string.match (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.pack	doc/manual.html	/^<hr><h3><a name="pdf-string.pack"><code>string.pack (fmt, v1, v2, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.packsize	doc/manual.html	/^<hr><h3><a name="pdf-string.packsize"><code>string.packsize (fmt)<\/code><\/a><\/h3>$/;"	a
pdf-string.rep	doc/manual.html	/^<hr><h3><a name="pdf-string.rep"><code>string.rep (s, n [, sep])<\/code><\/a><\/h3>$/;"	a
pdf-string.reverse	doc/manual.html	/^<hr><h3><a name="pdf-string.reverse"><code>string.reverse (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.sub	doc/manual.html	/^<hr><h3><a name="pdf-string.sub"><code>string.sub (s, i [, j])<\/code><\/a><\/h3>$/;"	a
pdf-string.unpack	doc/manual.html	/^<hr><h3><a name="pdf-string.unpack"><code>string.unpack (fmt, s [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-string.upper	doc/manual.html	/^<hr><h3><a name="pdf-string.upper"><code>string.upper (s)<\/code><\/a><\/h3>$/;"	a
pdf-table	doc/manual.html	/^It provides all its functions inside the table <a name="pdf-table"><code>table<\/code><\/a>.$/;"	a
pdf-table.concat	doc/manual.html	/^<hr><h3><a name="pdf-table.concat"><code>table.concat (list [, sep [, i [, j]]])<\/code><\/a><\/h3>$/;"	a
pdf-table.insert	doc/manual.html	/^<hr><h3><a name="pdf-table.insert"><code>table.insert (list, [pos,] value)<\/code><\/a><\/h3>$/;"	a
pdf-table.move	doc/manual.html	/^<hr><h3><a name="pdf-table.move"><code>table.move (a1, f, e, t [,a2])<\/code><\/a><\/h3>$/;"	a
pdf-table.pack	doc/manual.html	/^<hr><h3><a name="pdf-table.pack"><code>table.pack (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-table.remove	doc/manual.html	/^<hr><h3><a name="pdf-table.remove"><code>table.remove (list [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-table.sort	doc/manual.html	/^<hr><h3><a name="pdf-table.sort"><code>table.sort (list [, comp])<\/code><\/a><\/h3>$/;"	a
pdf-table.unpack	doc/manual.html	/^<hr><h3><a name="pdf-table.unpack"><code>table.unpack (list [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-tonumber	doc/manual.html	/^<hr><h3><a name="pdf-tonumber"><code>tonumber (e [, base])<\/code><\/a><\/h3>$/;"	a
pdf-tostring	doc/manual.html	/^<hr><h3><a name="pdf-tostring"><code>tostring (v)<\/code><\/a><\/h3>$/;"	a
pdf-type	doc/manual.html	/^<hr><h3><a name="pdf-type"><code>type (v)<\/code><\/a><\/h3>$/;"	a
pdf-utf8	doc/manual.html	/^It provides all its functions inside the table <a name="pdf-utf8"><code>utf8<\/code><\/a>.$/;"	a
pdf-utf8.char	doc/manual.html	/^<hr><h3><a name="pdf-utf8.char"><code>utf8.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-utf8.charpattern	doc/manual.html	/^<hr><h3><a name="pdf-utf8.charpattern"><code>utf8.charpattern<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codepoint	doc/manual.html	/^<hr><h3><a name="pdf-utf8.codepoint"><code>utf8.codepoint (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codes	doc/manual.html	/^<hr><h3><a name="pdf-utf8.codes"><code>utf8.codes (s)<\/code><\/a><\/h3>$/;"	a
pdf-utf8.len	doc/manual.html	/^<hr><h3><a name="pdf-utf8.len"><code>utf8.len (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.offset	doc/manual.html	/^<hr><h3><a name="pdf-utf8.offset"><code>utf8.offset (s, n [, i])<\/code><\/a><\/h3>$/;"	a
pdf-xpcall	doc/manual.html	/^<hr><h3><a name="pdf-xpcall"><code>xpcall (f, msgh [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pk_funcs	src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pmain	src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
point2uint	src/llimits.h	59;"	d
posrelat	src/lstrlib.c	/^static lua_Integer posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
preinit_thread	src/lstate.c	/^static void preinit_thread (lua_State *L, global_State *g) {$/;"	f	file:
prepstate	src/lstrlib.c	/^static void prepstate (MatchState *ms, lua_State *L,$/;"	f	file:
prev	src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
previous	src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous	src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
primaryexp	src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print_usage	src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	src/lua.c	/^static void print_version (void) {$/;"	f	file:
priority	src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon14	file:
progname	src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
propagateall	src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatemark	src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
push_captures	src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushargs	src/lua.c	/^static int pushargs (lua_State *L) {$/;"	f	file:
pushclosure	src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pusherror	src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfuncname	src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushnumint	src/lmathlib.c	/^static void pushnumint (lua_State *L, lua_Number d) {$/;"	f	file:
pushstr	src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
pushunsigned	src/lbitlib.c	22;"	d	file:
pushutfchar	src/lutf8lib.c	/^static void pushutfchar (lua_State *L, int arg) {$/;"	f	file:
pvalue	src/lobject.h	168;"	d
r	doc/manual.html	/^     function r() return 1,2,3 end$/;"	f
r	src/llex.h	/^  lua_Number r;$/;"	m	union:__anon16
read_all	src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_chars	src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_line	src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	src/llex.c	/^static int read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
readable	src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readdigits	src/liolib.c	/^static int readdigits (RN *rn, int hex) {$/;"	f	file:
reader	src/luac.c	/^static const char* reader(lua_State *L, void *ud, size_t *size)$/;"	f	file:
reader	src/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
readhexaesc	src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
readutf8esc	src/llex.c	/^static unsigned long readutf8esc (LexState *ls) {$/;"	f	file:
reallymarkobject	src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
recfield	src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recover	src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
refcount	src/lfunc.h	/^  lu_mem refcount;  \/* reference counter *\/$/;"	m	struct:UpVal
registerlocalvar	src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
rehash	src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
remarkupvals	src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
removeentry	src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
repeatstat	src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
report	src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reprepstate	src/lstrlib.c	/^static void reprepstate (MatchState *ms) {$/;"	f	file:
resetbit	src/lgc.h	73;"	d
resetbits	src/lgc.h	67;"	d
resethookcount	src/ldebug.h	18;"	d
resizebox	src/lauxlib.c	/^static void *resizebox (lua_State *L, int idx, size_t newsize) {$/;"	f	file:
restartcollection	src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restorestack	src/ldo.h	33;"	d
resume	src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	src/ldo.c	/^static int resume_error (lua_State *L, const char *msg, int narg) {$/;"	f	file:
retstat	src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
reverse	src/lapi.c	/^static void reverse (lua_State *L, StkId from, StkId to) {$/;"	f	file:
right	src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon14	file:
righttt	src/lobject.h	188;"	d
rttype	src/lobject.h	127;"	d
runafewfinalizers	src/lgc.c	/^static int runafewfinalizers (lua_State *L) {$/;"	f	file:
runargs	src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
s	src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	src/llimits.h	/^  void *s;$/;"	m	union:__anon1
save	src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	src/llex.c	51;"	d	file:
savedpc	src/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon4::__anon5
savestack	src/ldo.h	32;"	d
scanformat	src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
searcher_C	src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
seed	src/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State
semerror	src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
seminfo	src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
separatetobefnz	src/lgc.c	/^static void separatetobefnz (global_State *g, int all) {$/;"	f	file:
set2	src/ltablib.c	/^static void set2 (lua_State *L, IdxT i, IdxT j) {$/;"	f	file:
set_env	src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
setallfields	src/loslib.c	/^static void setallfields (lua_State *L, struct tm *stm) {$/;"	f	file:
setarg	src/lopcodes.h	94;"	d
setarrayvector	src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setbits	src/lgc.h	68;"	d
setboolfield	src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	src/lobject.h	218;"	d
setclCvalue	src/lobject.h	245;"	d
setclLvalue	src/lobject.h	240;"	d
setdeadvalue	src/lobject.h	255;"	d
seterrorobj	src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setfltvalue	src/lobject.h	198;"	d
setfvalue	src/lobject.h	212;"	d
setgcovalue	src/lobject.h	221;"	d
sethvalue	src/lobject.h	250;"	d
sethvalue2s	src/lobject.h	273;"	d
setivalue	src/lobject.h	204;"	d
setnilvalue	src/lobject.h	210;"	d
setnodekey	src/lobject.h	485;"	d
setnodevector	src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setoah	src/lstate.h	130;"	d
setobj	src/lobject.h	259;"	d
setobj2n	src/lobject.h	278;"	d
setobj2s	src/lobject.h	271;"	d
setobj2t	src/lobject.h	282;"	d
setobjs2s	src/lobject.h	269;"	d
setobjt2t	src/lobject.h	276;"	d
setpath	src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname,$/;"	f	file:
setpause	src/lgc.c	/^static void setpause (global_State *g) {$/;"	f	file:
setprogdir	src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	src/loadlib.c	161;"	d	file:
setprogdir	src/loadlib.c	67;"	d	file:
setptvalue2s	src/lobject.h	274;"	d
setpvalue	src/lobject.h	215;"	d
setsvalue	src/lobject.h	225;"	d
setsvalue2n	src/lobject.h	279;"	d
setsvalue2s	src/lobject.h	272;"	d
settableProtected	src/lvm.c	780;"	d	file:
settabsb	src/ldblib.c	/^static void settabsb (lua_State *L, const char *k, int v) {$/;"	f	file:
settabsi	src/ldblib.c	/^static void settabsi (lua_State *L, const char *k, int v) {$/;"	f	file:
settabss	src/ldblib.c	/^static void settabss (lua_State *L, const char *k, const char *v) {$/;"	f	file:
setthvalue	src/lobject.h	235;"	d
settt_	src/lobject.h	196;"	d
setuservalue	src/lobject.h	371;"	d
setuvalue	src/lobject.h	230;"	d
short_src	src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
shrlen	src/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString
simpleexp	src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	src/lparser.c	/^static void singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
size	src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	src/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	src/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon20
size	src/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	src/lstate.h	/^  int size;$/;"	m	struct:stringtable
sizeCclosure	src/lfunc.h	14;"	d
sizeLclosure	src/lfunc.h	17;"	d
sizearray	src/lobject.h	/^  unsigned int sizearray;  \/* size of 'array' array *\/$/;"	m	struct:Table
sizecode	src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	src/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto
sizelineinfo	src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizelstring	src/lstring.h	15;"	d
sizeludata	src/lstring.h	17;"	d
sizenode	src/lobject.h	519;"	d
sizep	src/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto
sizeudata	src/lstring.h	18;"	d
sizeupvalues	src/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
skipBOM	src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_sep	src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
sof	src/ltablib.c	250;"	d	file:
sort	src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
source	src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	src/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
src	src/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:
src_end	src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
stack	src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stackerror	src/ldo.c	/^static void stackerror (lua_State *L) {$/;"	f	file:
stackinuse	src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacksize	src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
start_capture	src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
startpc	src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
statement	src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	src/ldump.c	/^  int status;$/;"	m	struct:__anon10	file:
status	src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
str_byte	src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_pack	src/lstrlib.c	/^static int str_pack (lua_State *L) {$/;"	f	file:
str_packsize	src/lstrlib.c	/^static int str_packsize (lua_State *L) {$/;"	f	file:
str_rep	src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_unpack	src/lstrlib.c	/^static int str_unpack (lua_State *L) {$/;"	f	file:
str_upper	src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcache	src/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State
stringtable	src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	src/ldump.c	/^  int strip;$/;"	m	struct:__anon10	file:
stripping	src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strt	src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
sub	luatest/luamod.c	/^int sub(lua_State* L)$/;"	f
sub2	luatest/lua1.c	/^static int sub2(lua_State* L)$/;"	f	file:
subexpr	src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
suffixedexp	src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
svalue	src/lobject.h	333;"	d
swapextra	src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:
sweepgc	src/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State
sweeplist	src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepstep	src/lgc.c	/^static lu_mem sweepstep (lua_State *L, global_State *g,$/;"	f	file:
sweeptolive	src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p) {$/;"	f	file:
sweepwholelist	src/lgc.c	724;"	d	file:
syslib	src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	src/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon18::__anon19
t	src/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc
t	src/ltable.c	/^  Table *t;$/;"	m	struct:__anon2	file:
tab_funcs	src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tag_error	src/lauxlib.c	/^static void tag_error (lua_State *L, int arg, int tag) {$/;"	f	file:
tconcat	src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
test2	src/liolib.c	/^static int test2 (RN *rn, const char *set) {$/;"	f	file:
testAMode	src/lopcodes.h	286;"	d
testTMode	src/lopcodes.h	287;"	d
test_eof	src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_then_block	src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testbit	src/lgc.h	74;"	d
testbits	src/lgc.h	69;"	d
testfunc	luatest/lua1.c	/^const char* testfunc = "print(add2(1.0,2.0)) print(sub2(20.1,19))";$/;"	v
testnext	src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testprop	src/lctype.h	52;"	d
th	src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State
thvalue	src/lobject.h	177;"	d
tinsert	src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tmname	src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmove	src/ltablib.c	/^static int tmove (lua_State *L) {$/;"	f	file:
tobefnz	src/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
tofile	src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofinalize	src/lgc.h	92;"	d
tointeger	src/lvm.h	43;"	d
token	src/llex.h	/^  int token;$/;"	m	struct:Token
tolstream	src/liolib.c	145;"	d	file:
tonumber	src/lvm.h	40;"	d
tonumeral	src/lcode.c	/^static int tonumeral(const expdesc *e, TValue *v) {$/;"	f	file:
top	src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
toproto	src/luac.c	137;"	d	file:
tostore	src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	src/lvm.c	454;"	d	file:
totalbytes	src/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
touched	src/lfunc.h	/^      int touched;  \/* mark to avoid cycles with dead threads *\/$/;"	m	struct:UpVal::__anon21::__anon22
traverseCclosure	src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestrongtable	src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traversethread	src/lgc.c	/^static lu_mem traversethread (global_State *g, lua_State *th) {$/;"	f	file:
traverseweakvalue	src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tremove	src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trim	src/lbitlib.c	41;"	d	file:
tryfuncTM	src/ldo.c	/^static void tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	src/llex.h	/^  TString *ts;$/;"	m	union:__anon16
ts	src/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString
tsslen	src/lobject.h	336;"	d
tsv	src/lobject.h	/^  TString tsv;$/;"	m	union:UTString
tsvalue	src/lobject.h	169;"	d
ttisCclosure	src/lobject.h	154;"	d
ttisLclosure	src/lobject.h	155;"	d
ttisboolean	src/lobject.h	146;"	d
ttisclosure	src/lobject.h	153;"	d
ttisdeadkey	src/lobject.h	159;"	d
ttisfloat	src/lobject.h	143;"	d
ttisfulluserdata	src/lobject.h	157;"	d
ttisfunction	src/lobject.h	152;"	d
ttisinteger	src/lobject.h	144;"	d
ttislcf	src/lobject.h	156;"	d
ttislightuserdata	src/lobject.h	147;"	d
ttislngstring	src/lobject.h	150;"	d
ttisnil	src/lobject.h	145;"	d
ttisnumber	src/lobject.h	142;"	d
ttisshrstring	src/lobject.h	149;"	d
ttisstring	src/lobject.h	148;"	d
ttistable	src/lobject.h	151;"	d
ttisthread	src/lobject.h	158;"	d
ttnov	src/lobject.h	136;"	d
ttuv_	src/lobject.h	/^  lu_byte ttuv_;  \/* user value's tag *\/$/;"	m	struct:Udata
ttype	src/lobject.h	133;"	d
ttypename	src/ltm.h	53;"	d
tvk	src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
twice 	luatest/lib1.lua	/^function twice (x)$/;"	f
twoto	src/lobject.h	518;"	d
twups	src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
twups	src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State
txtToken	src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
typeerror	src/lauxlib.c	/^static int typeerror (lua_State *L, int arg, const char *tname) {$/;"	f	file:
u	src/lfunc.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon21
u	src/llimits.h	/^  double u;$/;"	m	union:__anon1
u	src/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon8
u	src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon18
u	src/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata
u	src/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon4
u	src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	struct:cD	typeref:union:cD::__anon13	file:
u_posrelat	src/lutf8lib.c	/^static lua_Integer u_posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
uchar	src/lstrlib.c	39;"	d	file:
ud	src/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State
udata2finalize	src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
unbound_search	src/ltable.c	/^static lua_Unsigned unbound_search (Table *t, lua_Unsigned j) {$/;"	f	file:
undefgoto	src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
unmakemask	src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpack	src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unpackint	src/lstrlib.c	/^static lua_Integer unpackint (lua_State *L, const char *str,$/;"	f	file:
unroll	src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
upisopen	src/lfunc.h	47;"	d
upval	src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
upvals	src/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	src/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalues	src/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
usage	src/luac.c	/^static void usage(const char* message)$/;"	f	file:
user_	src/lobject.h	/^  union Value user_;  \/* user value *\/$/;"	m	struct:Udata	typeref:union:Udata::Value
utf8_decode	src/lutf8lib.c	/^static const char *utf8_decode (const char *o, int *val) {$/;"	f	file:
utf8esc	src/llex.c	/^static void utf8esc (LexState *ls) {$/;"	f	file:
utfchar	src/lutf8lib.c	/^static int utfchar (lua_State *L) {$/;"	f	file:
utflen	src/lutf8lib.c	/^static int utflen (lua_State *L) {$/;"	f	file:
uv	src/lobject.h	/^  Udata uv;$/;"	m	union:UUdata
uvalue	src/lobject.h	170;"	d
v	src/lfunc.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
val_	src/lobject.h	123;"	d
validop	src/lcode.c	/^static int validop (int op, TValue *v1, TValue *v2) {$/;"	f	file:
valiswhite	src/lgc.c	74;"	d	file:
value	src/lfunc.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon21
varinfo	src/ldebug.c	/^static const char *varinfo (lua_State *L, const TValue *o) {$/;"	f	file:
varname	src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
version	src/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State
vkisinreg	src/lparser.h	52;"	d
vkisvar	src/lparser.h	51;"	d
vmbreak	src/lvm.c	767;"	d	file:
vmcase	src/lvm.c	766;"	d	file:
vmdispatch	src/lvm.c	765;"	d	file:
vmfetch	src/lvm.c	756;"	d	file:
vslen	src/lobject.h	339;"	d
vt	src/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon18::__anon19
weak	src/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
wgkey	src/ltable.h	25;"	d
what	src/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
whilestat	src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	src/lgc.c	70;"	d	file:
writer	src/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon10	file:
writer	src/lstrlib.c	/^static int writer (lua_State *L, const void *b, size_t size, void *B) {$/;"	f	file:
writer	src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
yindex	src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	src/lzio.h	20;"	d
